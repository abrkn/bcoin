
> bcoin@1.0.2 test /Users/andreas/Repos/bcoin
> mocha --reporter spec test/*.js



  Address
    ✓ should match mainnet p2pkh address
    ✓ should match mainnet p2pkh address 2
    ✓ should match testnet p2pkh address
    ✓ should handle wrong p2pkh hash length
    ✓ should handle empty p2pkh hash length
    ✓ should match mainnet p2sh address obtained from script
    ✓ should match mainnet p2sh address obtained from script hash
    ✓ should match mainnet p2sh address obtained from script 2
    ✓ should match testnet p2sh address
    ✓ should match mainnet segwit p2wpkh v0 address
    ✓ should match mainnet segwit p2pwsh v0 address
    ✓ should match testnet segwit p2wpkh v0 address
    ✓ should match testnet segwit p2pwsh v0 address
    ✓ should match testnet segwit p2pwsh v0 address 2
    ✓ should handle invalid segwit hrp
    ✓ should handle invalid segwit checksum
    ✓ should handle invalid segwit version
    ✓ should handle invalid segwit program length
    ✓ should handle invalid segwit program length 2
    ✓ should handle invalid segwit program length for witness v0
    ✓ should handle segwit mixed case
    ✓ should handle segwit zero padding of more than 4 bits
    ✓ should handle segwit non-zero padding in 8-to-5 conversion

  Bech32
    ✓ should have valid address for BC1QW508D6QEJXTDG4Y5R3ZARVARY0C5XW7KV8F3T4
    ✓ should have valid address for tb1qrp33g0q5c5txsp9arysrx4k6zdkfs4nce4xj0gdcccefvpysxf3q0sl5k7
    ✓ should have valid address for bc1pw508d6qejxtdg4y5r3zarvary0c5xw7kw508d6qejxtdg4y5r3zarvary0c5xw7k7grplx
    ✓ should have valid address for BC1SW50QA3JX3S
    ✓ should have valid address for bc1zw508d6qejxtdg4y5r3zarvaryvg6kdaj
    ✓ should have valid address for tb1qqqqqp399et2xygdj5xreqhjjvcmzhxw4aywxecjdzew6hylgvsesrxh6hy
    ✓ should have invalid address for tc1qw508d6qejxtdg4y5r3zarvary0c5xw7kg3g4ty
    ✓ should have invalid address for bc1qw508d6qejxtdg4y5r3zarvary0c5xw7kv8f3t5
    ✓ should have invalid address for BC13W508D6QEJXTDG4Y5R3ZARVARY0C5XW7KN40WF2
    ✓ should have invalid address for bc1rw5uspcuh
    ✓ should have invalid address for bc10w508d6qejxtdg4y5r3zarvary0c5xw7kw508d6qejxtdg4y5r3zarvary0c5xw7kw5rljs90
    ✓ should have invalid address for BC1QR508D6QEJXTDG4Y5R3ZARVARYV98GJ9P
    ✓ should have invalid address for tb1qrp33g0q5c5txsp9arysrx4k6zdkfs4nce4xj0gdcccefvpysxf3q0sL5k7
    ✓ should have invalid address for tb1pw508d6qejxtdg4y5r3zarqfsj6c3
    ✓ should have invalid address for tb1qrp33g0q5c5txsp9arysrx4k6zdkfs4nce4xj0gdcccefvpysxf3pjxtptv

  Block
    - should parse partial merkle tree
    - should decode/encode merkle block
    - should verify merkle block
    - should be encoded/decoded and still verify
    - should be jsonified/unjsonified and still verify
    ✓ should parse JSON (223ms)
    ✓ should create a merkle block (81ms)
    - should verify a historical block
    - should fail with a bad merkle root
    - should fail on merkle block with a bad merkle root
    - should fail with a low target
    ✓ should fail on duplicate txs
    - should verify with headers
    ✓ should handle compact block (40ms)
    ✓ should handle half-full compact block (40ms)
    ✓ should handle compact block
    ✓ should handle half-full compact block
    ✓ should count sigops for block928816 (without cache) (140ms)
    ✓ should count sigops for block928828 (without cache)
    ✓ should count sigops for block928831 (without cache) (75ms)
    ✓ should count sigops for block928848 (without cache) (104ms)
    ✓ should count sigops for block928849 (without cache) (77ms)
    ✓ should count sigops for block928927 (without cache) (108ms)
    ✓ should count sigops for block1087400 (without cache)
    ✓ should count sigops for block928816 (with cache) (66ms)
    ✓ should count sigops for block928828 (with cache)
    ✓ should count sigops for block928831 (with cache) (64ms)
    ✓ should count sigops for block928848 (with cache) (63ms)
    ✓ should count sigops for block928849 (with cache) (55ms)
    ✓ should count sigops for block928927 (with cache) (58ms)
    ✓ should count sigops for block1087400 (with cache)

  Chain
    ✓ should open chain and miner
    ✓ should add addrs to miner
    ✓ should mine 200 blocks (1055ms)
    ✓ should mine competing chains (398ms)
    ✓ should have correct chain value
    ✓ should have correct wallet balance
    ✓ should handle a reorg (84ms)
    ✓ should have correct chain value
    ✓ should have correct wallet balance
    ✓ should check main chain
    ✓ should mine a block after a reorg
    ✓ should prevent double spend on new chain
    ✓ should fail to connect coins on an alternate chain
    ✓ should have correct chain value
    ✓ should get coin
    ✓ should have correct wallet balance
    ✓ should get tips and remove chains
    ✓ should rescan for transactions
    ✓ should activate csv (589ms)
    ✓ should have activated segwit
    ✓ should test csv
    ✓ should fail csv with bad sequence
    ✓ should mine a block
    ✓ should fail csv lock checks
    ✓ should have correct wallet balance
    ✓ should fail to connect bad bits
    ✓ should fail to connect bad MTP
    ✓ should fail to connect bad time
    ✓ should fail to connect bad locktime
    ✓ should fail to connect bad cb height
    ✓ should fail to connect bad witness nonce size
    ✓ should fail to connect bad witness nonce
    ✓ should fail to connect bad witness commitment
    ✓ should fail to connect unexpected witness
    ✓ should add wit addrs to miner
    ✓ should mine 2000 witness blocks (3229ms)
    ✓ should mine a witness tx
    ✓ should mine fail to connect too much weight (3437ms)
    ✓ should mine fail to connect too much size (3931ms)
    ✓ should mine a big block (6590ms)
    ✓ should fail to connect bad versions
    ✓ should fail to connect bad amount
    ✓ should fail to connect premature cb spend
    ✓ should fail to connect vout belowout
    ✓ should fail to connect outtotal toolarge
    ✓ should mine 111 multisig blocks (413ms)
    ✓ should fail to connect too many sigops
    ✓ should cleanup

  Coin
    ✓ should instantiate from tx
    ✓ should instantiate from raw

  Coins
    ✓ should instantiate coinview from tx
    ✓ should spend an output
    ✓ should handle coin view

  Consensus
    ✓ should calculate reward properly (82ms)
    ✓ should verify proof-of-work
    ✓ should convert bits to target
    ✓ should convert target to bits
    ✓ should check version bit

  HD
    ✓ should create a pbkdf2 seed
    ✓ should create master private key
    ✓ should derive(0) child from master
    ✓ should derive(1) child from master public key
    ✓ should derive(1) child from master
    ✓ should derive(2) child from master
    ✓ should derive(0) child from child(2)
    ✓ should derive(1) child from child(2)
    ✓ should derive correctly when private key has leading zeros
    ✓ should deserialize master private key
    ✓ should deserialize master public key
    ✓ should deserialize and reserialize json
    ✓ should create from a seed
    ✓ should derive m/0' from master
    ✓ should derive m/0'/1 from master
    ✓ should derive m/0'/1/2' from master
    ✓ should derive m/0'/1/2'/2 from master
    ✓ should derive m/0'/1/2'/2/1000000000 from master
    ✓ should create from a seed
    ✓ should derive m/0 from master
    ✓ should derive m/0/2147483647' from master
    ✓ should derive m/0/2147483647'/1 from master
    ✓ should derive m/0/2147483647'/1/2147483646' from master
    ✓ should derive m/0/2147483647'/1/2147483646'/2 from master

  Headers
    ✓ should match headers size
    1) should match block1 headers from block
    2) should match block1 headers from raw

  HTTP
    ✓ should open node (72ms)
    ✓ should create wallet (83ms)
    ✓ should get info
    ✓ should get wallet info
    ✓ should fill with funds (311ms)
    ✓ should get balance
    ✓ should send a tx
    ✓ should get a tx
    ✓ should generate new api key
    ✓ should get balance
    ✓ should execute an rpc call
    ✓ should execute an rpc call with bool parameter
    ✓ should create account (42ms)
    ✓ should create account
    ✓ should get a block template
    ✓ should send a block template proposal
    ✓ should validate an address
    ✓ should cleanup

  Input
    ✓ should return same raw
    ✓ should return same raw on fromReader
    ✓ should parse p2pkh input
    ✓ should parse multisig input
    ✓ should parse p2sh multisig input
    ✓ should parse coinbase input
    ✓ should check zero signature script
    ✓ should be the same from same raw
    ✓ should clone input correctly
    ✓ should create input from Options
    BIP69
      ✓ should sort: Ordered by txId, descending (reverse-byte-order ascending)
      ✓ should sort: Ordered by vout, ascending
      ✓ should sort: Ordered by txId, then vout
      ✓ should sort: Sorting is irrelevant for equivalent inputs
      ✓ should sort: BIP69 test vector 1
      ✓ should sort: BIP69 test vector 2

  KeyRing
    ✓ should get uncompressed public key
    ✓ should get uncompressed public key address
    ✓ should get uncompressed WIF
    ✓ should get compressed public key
    ✓ should get compressed public key address
    ✓ should get compressed WIF

  Mempool
    ✓ should open mempool
    ✓ should handle incoming orphans and TXs (1029ms)
    ✓ should handle locktime
    ✓ should handle invalid locktime
    ✓ should not cache a malleated wtx with mutated sig
    ✓ should not cache a malleated tx with unnecessary witness
    ✓ should not cache a malleated wtx with wit removed
    ✓ should cache non-malleated tx without sig
    ✓ should clear reject cache
    ✓ should destroy mempool

  Mnemonic
    ✓ should create a english mnemonic from entropy (0)
    ✓ should create a english mnemonic from phrase (0)
    ✓ should create a english mnemonic from entropy (1)
    ✓ should create a english mnemonic from phrase (1)
    ✓ should create a english mnemonic from entropy (2)
    ✓ should create a english mnemonic from phrase (2)
    ✓ should create a english mnemonic from entropy (3)
    ✓ should create a english mnemonic from phrase (3)
    ✓ should create a english mnemonic from entropy (4)
    ✓ should create a english mnemonic from phrase (4)
    ✓ should create a english mnemonic from entropy (5)
    ✓ should create a english mnemonic from phrase (5)
    ✓ should create a english mnemonic from entropy (6)
    ✓ should create a english mnemonic from phrase (6)
    ✓ should create a english mnemonic from entropy (7)
    ✓ should create a english mnemonic from phrase (7)
    ✓ should create a english mnemonic from entropy (8)
    ✓ should create a english mnemonic from phrase (8)
    ✓ should create a english mnemonic from entropy (9)
    ✓ should create a english mnemonic from phrase (9)
    ✓ should create a english mnemonic from entropy (10)
    ✓ should create a english mnemonic from phrase (10)
    ✓ should create a english mnemonic from entropy (11)
    ✓ should create a english mnemonic from phrase (11)
    ✓ should create a english mnemonic from entropy (12)
    ✓ should create a english mnemonic from phrase (12)
    ✓ should create a english mnemonic from entropy (13)
    ✓ should create a english mnemonic from phrase (13)
    ✓ should create a english mnemonic from entropy (14)
    ✓ should create a english mnemonic from phrase (14)
    ✓ should create a english mnemonic from entropy (15)
    ✓ should create a english mnemonic from phrase (15)
    ✓ should create a english mnemonic from entropy (16)
    ✓ should create a english mnemonic from phrase (16)
    ✓ should create a english mnemonic from entropy (17)
    ✓ should create a english mnemonic from phrase (17)
    ✓ should create a english mnemonic from entropy (18)
    ✓ should create a english mnemonic from phrase (18)
    ✓ should create a english mnemonic from entropy (19)
    ✓ should create a english mnemonic from phrase (19)
    ✓ should create a english mnemonic from entropy (20)
    ✓ should create a english mnemonic from phrase (20)
    ✓ should create a english mnemonic from entropy (21)
    ✓ should create a english mnemonic from phrase (21)
    ✓ should create a english mnemonic from entropy (22)
    ✓ should create a english mnemonic from phrase (22)
    ✓ should create a english mnemonic from entropy (23)
    ✓ should create a english mnemonic from phrase (23)
    ✓ should create a japanese mnemonic from entropy (0)
    ✓ should create a japanese mnemonic from phrase (0)
    ✓ should create a japanese mnemonic from entropy (1)
    ✓ should create a japanese mnemonic from phrase (1)
    ✓ should create a japanese mnemonic from entropy (2)
    ✓ should create a japanese mnemonic from phrase (2)
    ✓ should create a japanese mnemonic from entropy (3)
    ✓ should create a japanese mnemonic from phrase (3)
    ✓ should create a japanese mnemonic from entropy (4)
    ✓ should create a japanese mnemonic from phrase (4)
    ✓ should create a japanese mnemonic from entropy (5)
    ✓ should create a japanese mnemonic from phrase (5)
    ✓ should create a japanese mnemonic from entropy (6)
    ✓ should create a japanese mnemonic from phrase (6)
    ✓ should create a japanese mnemonic from entropy (7)
    ✓ should create a japanese mnemonic from phrase (7)
    ✓ should create a japanese mnemonic from entropy (8)
    ✓ should create a japanese mnemonic from phrase (8)
    ✓ should create a japanese mnemonic from entropy (9)
    ✓ should create a japanese mnemonic from phrase (9)
    ✓ should create a japanese mnemonic from entropy (10)
    ✓ should create a japanese mnemonic from phrase (10)
    ✓ should create a japanese mnemonic from entropy (11)
    ✓ should create a japanese mnemonic from phrase (11)
    ✓ should create a japanese mnemonic from entropy (12)
    ✓ should create a japanese mnemonic from phrase (12)
    ✓ should create a japanese mnemonic from entropy (13)
    ✓ should create a japanese mnemonic from phrase (13)
    ✓ should create a japanese mnemonic from entropy (14)
    ✓ should create a japanese mnemonic from phrase (14)
    ✓ should create a japanese mnemonic from entropy (15)
    ✓ should create a japanese mnemonic from phrase (15)
    ✓ should create a japanese mnemonic from entropy (16)
    ✓ should create a japanese mnemonic from phrase (16)
    ✓ should create a japanese mnemonic from entropy (17)
    ✓ should create a japanese mnemonic from phrase (17)
    ✓ should create a japanese mnemonic from entropy (18)
    ✓ should create a japanese mnemonic from phrase (18)
    ✓ should create a japanese mnemonic from entropy (19)
    ✓ should create a japanese mnemonic from phrase (19)
    ✓ should create a japanese mnemonic from entropy (20)
    ✓ should create a japanese mnemonic from phrase (20)
    ✓ should create a japanese mnemonic from entropy (21)
    ✓ should create a japanese mnemonic from phrase (21)
    ✓ should create a japanese mnemonic from entropy (22)
    ✓ should create a japanese mnemonic from phrase (22)
    ✓ should create a japanese mnemonic from entropy (23)
    ✓ should create a japanese mnemonic from phrase (23)
    ✓ should verify phrase

  Node
    ✓ should open chain and miner (54ms)
    ✓ should open walletdb (58ms)
    ✓ should mine a block (200ms)
    ✓ should mine competing chains (938ms)
    ✓ should have correct chain value
    ✓ should have correct balance (103ms)
    ✓ should handle a reorg (89ms)
    ✓ should have correct chain value
    ✓ should have correct balance (104ms)
    ✓ should check main chain
    ✓ should mine a block after a reorg
    ✓ should prevent double spend on new chain
    ✓ should fail to mine block with coins on an alternate chain
    ✓ should have correct chain value
    ✓ should get coin
    ✓ should get balance (105ms)
    ✓ should get tips and remove chains
    ✓ should rescan for transactions
    ✓ should activate csv (490ms)
    ✓ should test csv
    ✓ should fail csv with bad sequence
    ✓ should mine a block
    ✓ should fail csv lock checks
    ✓ should rescan for transactions (451ms)
    ✓ should reset miner mempool
    ✓ should not get a block template
    ✓ should get a block template
    ✓ should send a block template proposal
    ✓ should submit a block
    ✓ should validate an address
    ✓ should add transaction to mempool
    ✓ should add lesser transaction to mempool
    ✓ should get a block template
    ✓ should get raw transaction
    ✓ should prioritise transaction
    ✓ should get a block template
    ✓ should broadcast a tx from inventory
    ✓ should cleanup

  Outpoint
    ✓ should clone the outpoint correctly
    ✓ should create outpoint from options object
    ✓ should check hash and index are equal
    ✓ should compare the indexes between outpoints
    ✓ should detect if the outpoint is null
    ✓ should retrieve little endian hash
    ✓ should serialize to a key suitable for hash table
    ✓ should inject properties from hash table key
    ✓ should return a size of 36
    ✓ should create an outpoint from JSON
    ✓ should return an object with reversed hash
    ✓ should instantiate an outpoint from a tx

  Difficulty
    ✓ should open chain
    ✓ should get next work
    ✓ should get next work pow limit
    ✓ should get next work lower limit actual
    ✓ should get next work upper limit actual
    ✓ should get block proof equivalent time

  Protocol
    ✓ should encode/decode version
    ✓ should encode/decode version
    ✓ should encode/decode verack
    ✓ should encode/decode addr
    ✓ should include the raw data of only one transaction

  Script
    ✓ should recognize a P2SH output
    ✓ should recognize a Null Data output
    ✓ should handle if statements correctly
    ✓ should handle CScriptNums correctly
    ✓ should handle CScriptNums correctly
    ✓ should handle OP_ROLL correctly
    ✓ should handle script test with cache:Test the test: we should have an empty stack after scriptSig evaluation (OK)
    ✓ should handle script test without cache:Test the test: we should have an empty stack after scriptSig evaluation (OK)
    ✓ should handle script test with cache:and multiple spaces should not change that. (OK)
    ✓ should handle script test without cache:and multiple spaces should not change that. (OK)
    ✓ should handle script test with cache:DEPTH 0 EQUAL (OK)
    ✓ should handle script test without cache:DEPTH 0 EQUAL (OK)
    ✓ should handle script test with cache:DEPTH 0 EQUAL (OK)
    ✓ should handle script test without cache:DEPTH 0 EQUAL (OK)
    ✓ should handle script test with cache:Similarly whitespace around and between symbols (OK)
    ✓ should handle script test without cache:Similarly whitespace around and between symbols (OK)
    ✓ should handle script test with cache:2 EQUALVERIFY 1 EQUAL (OK)
    ✓ should handle script test without cache:2 EQUALVERIFY 1 EQUAL (OK)
    ✓ should handle script test with cache:2 EQUALVERIFY 1 EQUAL (OK)
    ✓ should handle script test without cache:2 EQUALVERIFY 1 EQUAL (OK)
    ✓ should handle script test with cache:2 EQUALVERIFY 1 EQUAL (OK)
    ✓ should handle script test without cache:2 EQUALVERIFY 1 EQUAL (OK)
    ✓ should handle script test with cache:2 EQUALVERIFY 1 EQUAL (OK)
    ✓ should handle script test without cache:2 EQUALVERIFY 1 EQUAL (OK)
    ✓ should handle script test with cache: (OK)
    ✓ should handle script test without cache: (OK)
    ✓ should handle script test with cache:all bytes are significant, not only the last one (OK)
    ✓ should handle script test without cache:all bytes are significant, not only the last one (OK)
    ✓ should handle script test with cache:equals zero when cast to Int64 (OK)
    ✓ should handle script test without cache:equals zero when cast to Int64 (OK)
    ✓ should handle script test with cache:push 1 byte (OK)
    ✓ should handle script test without cache:push 1 byte (OK)
    ✓ should handle script test with cache:'Az' EQUAL (OK)
    ✓ should handle script test without cache:'Az' EQUAL (OK)
    ✓ should handle script test with cache:push 75 bytes (OK)
    ✓ should handle script test without cache:push 75 bytes (OK)
    ✓ should handle script test with cache:0x4c is OP_PUSHDATA1 (OK)
    ✓ should handle script test without cache:0x4c is OP_PUSHDATA1 (OK)
    ✓ should handle script test with cache:0x4d is OP_PUSHDATA2 (OK)
    ✓ should handle script test without cache:0x4d is OP_PUSHDATA2 (OK)
    ✓ should handle script test with cache:0x4e is OP_PUSHDATA4 (OK)
    ✓ should handle script test without cache:0x4e is OP_PUSHDATA4 (OK)
    ✓ should handle script test with cache:0 EQUAL (OK)
    ✓ should handle script test without cache:0 EQUAL (OK)
    ✓ should handle script test with cache:0 EQUAL (OK)
    ✓ should handle script test without cache:0 EQUAL (OK)
    ✓ should handle script test with cache:0 EQUAL (OK)
    ✓ should handle script test without cache:0 EQUAL (OK)
    ✓ should handle script test with cache:999 EQUAL (OK)
    ✓ should handle script test without cache:999 EQUAL (OK)
    ✓ should handle script test with cache:0x50 is reserved (ok if not executed) (OK)
    ✓ should handle script test without cache:0x50 is reserved (ok if not executed) (OK)
    ✓ should handle script test with cache:0x51 through 0x60 push 1 through 16 onto stack (OK)
    ✓ should handle script test without cache:0x51 through 0x60 push 1 through 16 onto stack (OK)
    ✓ should handle script test with cache:NOP (OK)
    ✓ should handle script test without cache:NOP (OK)
    ✓ should handle script test with cache:VER non-functional (ok if not executed) (OK)
    ✓ should handle script test without cache:VER non-functional (ok if not executed) (OK)
    ✓ should handle script test with cache:RESERVED ok in un-executed IF (OK)
    ✓ should handle script test without cache:RESERVED ok in un-executed IF (OK)
    ✓ should handle script test with cache:DUP IF ENDIF (OK)
    ✓ should handle script test without cache:DUP IF ENDIF (OK)
    ✓ should handle script test with cache:IF 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 1 ENDIF (OK)
    ✓ should handle script test with cache:DUP IF ELSE ENDIF (OK)
    ✓ should handle script test without cache:DUP IF ELSE ENDIF (OK)
    ✓ should handle script test with cache:IF 1 ELSE ENDIF (OK)
    ✓ should handle script test without cache:IF 1 ELSE ENDIF (OK)
    ✓ should handle script test with cache:IF ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF IF 1 ELSE 0 ENDIF ENDIF (OK)
    ✓ should handle script test without cache:IF IF 1 ELSE 0 ENDIF ENDIF (OK)
    ✓ should handle script test with cache:IF IF 1 ELSE 0 ENDIF ENDIF (OK)
    ✓ should handle script test without cache:IF IF 1 ELSE 0 ENDIF ENDIF (OK)
    ✓ should handle script test with cache:IF IF 1 ELSE 0 ENDIF ELSE IF 0 ELSE 1 ENDIF ENDIF (OK)
    ✓ should handle script test without cache:IF IF 1 ELSE 0 ENDIF ELSE IF 0 ELSE 1 ENDIF ENDIF (OK)
    ✓ should handle script test with cache:IF IF 1 ELSE 0 ENDIF ELSE IF 0 ELSE 1 ENDIF ENDIF (OK)
    ✓ should handle script test without cache:IF IF 1 ELSE 0 ENDIF ELSE IF 0 ELSE 1 ENDIF ENDIF (OK)
    ✓ should handle script test with cache:NOTIF IF 1 ELSE 0 ENDIF ENDIF (OK)
    ✓ should handle script test without cache:NOTIF IF 1 ELSE 0 ENDIF ENDIF (OK)
    ✓ should handle script test with cache:NOTIF IF 1 ELSE 0 ENDIF ENDIF (OK)
    ✓ should handle script test without cache:NOTIF IF 1 ELSE 0 ENDIF ENDIF (OK)
    ✓ should handle script test with cache:NOTIF IF 1 ELSE 0 ENDIF ELSE IF 0 ELSE 1 ENDIF ENDIF (OK)
    ✓ should handle script test without cache:NOTIF IF 1 ELSE 0 ENDIF ELSE IF 0 ELSE 1 ENDIF ENDIF (OK)
    ✓ should handle script test with cache:NOTIF IF 1 ELSE 0 ENDIF ELSE IF 0 ELSE 1 ENDIF ENDIF (OK)
    ✓ should handle script test without cache:NOTIF IF 1 ELSE 0 ENDIF ELSE IF 0 ELSE 1 ENDIF ENDIF (OK)
    ✓ should handle script test with cache:Multiple ELSE's are valid and executed inverts on each ELSE encountered (OK)
    ✓ should handle script test without cache:Multiple ELSE's are valid and executed inverts on each ELSE encountered (OK)
    ✓ should handle script test with cache:IF 1 ELSE 0 ELSE ENDIF (OK)
    ✓ should handle script test without cache:IF 1 ELSE 0 ELSE ENDIF (OK)
    ✓ should handle script test with cache:IF ELSE 0 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF ELSE 0 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 1 ELSE 0 ELSE 1 ENDIF ADD 2 EQUAL (OK)
    ✓ should handle script test without cache:IF 1 ELSE 0 ELSE 1 ENDIF ADD 2 EQUAL (OK)
    ✓ should handle script test with cache:IF SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE EL (OK)
    ✓ should handle script test without cache:IF SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE EL (OK)
    ✓ should handle script test with cache:Multiple ELSE's are valid and execution inverts on each ELSE encountered (OK)
    ✓ should handle script test without cache:Multiple ELSE's are valid and execution inverts on each ELSE encountered (OK)
    ✓ should handle script test with cache:NOTIF 1 ELSE 0 ELSE ENDIF (OK)
    ✓ should handle script test without cache:NOTIF 1 ELSE 0 ELSE ENDIF (OK)
    ✓ should handle script test with cache:NOTIF ELSE 0 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:NOTIF ELSE 0 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:NOTIF 1 ELSE 0 ELSE 1 ENDIF ADD 2 EQUAL (OK)
    ✓ should handle script test without cache:NOTIF 1 ELSE 0 ELSE 1 ENDIF ADD 2 EQUAL (OK)
    ✓ should handle script test with cache:NOTIF SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE (OK)
    ✓ should handle script test without cache:NOTIF SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE ELSE SHA1 ELSE (OK)
    ✓ should handle script test with cache:Nested ELSE ELSE (OK)
    ✓ should handle script test without cache:Nested ELSE ELSE (OK)
    ✓ should handle script test with cache:NOTIF 0 NOTIF RETURN ELSE RETURN ELSE RETURN ENDIF ELSE 0 NO (OK)
    ✓ should handle script test without cache:NOTIF 0 NOTIF RETURN ELSE RETURN ELSE RETURN ENDIF ELSE 0 NO (OK)
    ✓ should handle script test with cache:RETURN only works if executed (OK)
    ✓ should handle script test without cache:RETURN only works if executed (OK)
    ✓ should handle script test with cache:VERIFY (OK)
    ✓ should handle script test without cache:VERIFY (OK)
    ✓ should handle script test with cache:values >4 bytes can be cast to boolean (OK)
    ✓ should handle script test without cache:values >4 bytes can be cast to boolean (OK)
    ✓ should handle script test with cache:negative 0 is false (OK)
    ✓ should handle script test without cache:negative 0 is false (OK)
    ✓ should handle script test with cache:ADD 21 EQUAL (OK)
    ✓ should handle script test without cache:ADD 21 EQUAL (OK)
    ✓ should handle script test with cache:'gavin_was_here' EQUALVERIFY 11 EQUAL (OK)
    ✓ should handle script test without cache:'gavin_was_here' EQUALVERIFY 11 EQUAL (OK)
    ✓ should handle script test with cache:DEPTH 1 EQUALVERIFY 0 EQUAL (OK)
    ✓ should handle script test without cache:DEPTH 1 EQUALVERIFY 0 EQUAL (OK)
    ✓ should handle script test with cache:DEPTH 2 EQUALVERIFY 1 EQUALVERIFY 1 EQUAL (OK)
    ✓ should handle script test without cache:DEPTH 2 EQUALVERIFY 1 EQUALVERIFY 1 EQUAL (OK)
    ✓ should handle script test with cache:IFDUP dups non ints (OK)
    ✓ should handle script test without cache:IFDUP dups non ints (OK)
    ✓ should handle script test with cache:DEPTH 0 EQUAL (OK)
    ✓ should handle script test without cache:DEPTH 0 EQUAL (OK)
    ✓ should handle script test with cache:DUP 1 ADD 1 EQUALVERIFY 0 EQUAL (OK)
    ✓ should handle script test without cache:DUP 1 ADD 1 EQUALVERIFY 0 EQUAL (OK)
    ✓ should handle script test with cache:NIP (OK)
    ✓ should handle script test without cache:NIP (OK)
    ✓ should handle script test with cache:OVER DEPTH 3 EQUALVERIFY (OK)
    ✓ should handle script test without cache:OVER DEPTH 3 EQUALVERIFY (OK)
    ✓ should handle script test with cache:0 PICK 20 EQUALVERIFY DEPTH 3 EQUAL (OK)
    ✓ should handle script test without cache:0 PICK 20 EQUALVERIFY DEPTH 3 EQUAL (OK)
    ✓ should handle script test with cache:1 PICK 21 EQUALVERIFY DEPTH 3 EQUAL (OK)
    ✓ should handle script test without cache:1 PICK 21 EQUALVERIFY DEPTH 3 EQUAL (OK)
    ✓ should handle script test with cache:2 PICK 22 EQUALVERIFY DEPTH 3 EQUAL (OK)
    ✓ should handle script test without cache:2 PICK 22 EQUALVERIFY DEPTH 3 EQUAL (OK)
    ✓ should handle script test with cache:0 ROLL 20 EQUALVERIFY DEPTH 2 EQUAL (OK)
    ✓ should handle script test without cache:0 ROLL 20 EQUALVERIFY DEPTH 2 EQUAL (OK)
    ✓ should handle script test with cache:1 ROLL 21 EQUALVERIFY DEPTH 2 EQUAL (OK)
    ✓ should handle script test without cache:1 ROLL 21 EQUALVERIFY DEPTH 2 EQUAL (OK)
    ✓ should handle script test with cache:2 ROLL 22 EQUALVERIFY DEPTH 2 EQUAL (OK)
    ✓ should handle script test without cache:2 ROLL 22 EQUALVERIFY DEPTH 2 EQUAL (OK)
    ✓ should handle script test with cache:ROT 22 EQUAL (OK)
    ✓ should handle script test without cache:ROT 22 EQUAL (OK)
    ✓ should handle script test with cache:ROT DROP 20 EQUAL (OK)
    ✓ should handle script test without cache:ROT DROP 20 EQUAL (OK)
    ✓ should handle script test with cache:ROT DROP DROP 21 EQUAL (OK)
    ✓ should handle script test without cache:ROT DROP DROP 21 EQUAL (OK)
    ✓ should handle script test with cache:ROT ROT 21 EQUAL (OK)
    ✓ should handle script test without cache:ROT ROT 21 EQUAL (OK)
    ✓ should handle script test with cache:ROT ROT ROT 20 EQUAL (OK)
    ✓ should handle script test without cache:ROT ROT ROT 20 EQUAL (OK)
    ✓ should handle script test with cache:2ROT 24 EQUAL (OK)
    ✓ should handle script test without cache:2ROT 24 EQUAL (OK)
    ✓ should handle script test with cache:2ROT DROP 25 EQUAL (OK)
    ✓ should handle script test without cache:2ROT DROP 25 EQUAL (OK)
    ✓ should handle script test with cache:2ROT 2DROP 20 EQUAL (OK)
    ✓ should handle script test without cache:2ROT 2DROP 20 EQUAL (OK)
    ✓ should handle script test with cache:2ROT 2DROP DROP 21 EQUAL (OK)
    ✓ should handle script test without cache:2ROT 2DROP DROP 21 EQUAL (OK)
    ✓ should handle script test with cache:2ROT 2DROP 2DROP 22 EQUAL (OK)
    ✓ should handle script test without cache:2ROT 2DROP 2DROP 22 EQUAL (OK)
    ✓ should handle script test with cache:2ROT 2DROP 2DROP DROP 23 EQUAL (OK)
    ✓ should handle script test without cache:2ROT 2DROP 2DROP DROP 23 EQUAL (OK)
    ✓ should handle script test with cache:2ROT 2ROT 22 EQUAL (OK)
    ✓ should handle script test without cache:2ROT 2ROT 22 EQUAL (OK)
    ✓ should handle script test with cache:2ROT 2ROT 2ROT 20 EQUAL (OK)
    ✓ should handle script test without cache:2ROT 2ROT 2ROT 20 EQUAL (OK)
    ✓ should handle script test with cache:SWAP 1 EQUALVERIFY 0 EQUAL (OK)
    ✓ should handle script test without cache:SWAP 1 EQUALVERIFY 0 EQUAL (OK)
    ✓ should handle script test with cache:TUCK DEPTH 3 EQUALVERIFY SWAP 2DROP (OK)
    ✓ should handle script test without cache:TUCK DEPTH 3 EQUALVERIFY SWAP 2DROP (OK)
    ✓ should handle script test with cache:2DUP ROT EQUALVERIFY EQUAL (OK)
    ✓ should handle script test without cache:2DUP ROT EQUALVERIFY EQUAL (OK)
    ✓ should handle script test with cache:3DUP DEPTH 7 EQUALVERIFY ADD ADD 3 EQUALVERIFY 2DROP 0 EQUAL (OK)
    ✓ should handle script test without cache:3DUP DEPTH 7 EQUALVERIFY ADD ADD 3 EQUALVERIFY 2DROP 0 EQUAL (OK)
    ✓ should handle script test with cache:2OVER ADD ADD 8 EQUALVERIFY ADD ADD 6 EQUAL (OK)
    ✓ should handle script test without cache:2OVER ADD ADD 8 EQUALVERIFY ADD ADD 6 EQUAL (OK)
    ✓ should handle script test with cache:2SWAP ADD 4 EQUALVERIFY ADD 12 EQUAL (OK)
    ✓ should handle script test without cache:2SWAP ADD 4 EQUALVERIFY ADD 12 EQUAL (OK)
    ✓ should handle script test with cache:SIZE 0 EQUAL (OK)
    ✓ should handle script test without cache:SIZE 0 EQUAL (OK)
    ✓ should handle script test with cache:SIZE 1 EQUAL (OK)
    ✓ should handle script test without cache:SIZE 1 EQUAL (OK)
    ✓ should handle script test with cache:SIZE 1 EQUAL (OK)
    ✓ should handle script test without cache:SIZE 1 EQUAL (OK)
    ✓ should handle script test with cache:SIZE 2 EQUAL (OK)
    ✓ should handle script test without cache:SIZE 2 EQUAL (OK)
    ✓ should handle script test with cache:SIZE 2 EQUAL (OK)
    ✓ should handle script test without cache:SIZE 2 EQUAL (OK)
    ✓ should handle script test with cache:SIZE 3 EQUAL (OK)
    ✓ should handle script test without cache:SIZE 3 EQUAL (OK)
    ✓ should handle script test with cache:SIZE 3 EQUAL (OK)
    ✓ should handle script test without cache:SIZE 3 EQUAL (OK)
    ✓ should handle script test with cache:SIZE 4 EQUAL (OK)
    ✓ should handle script test without cache:SIZE 4 EQUAL (OK)
    ✓ should handle script test with cache:SIZE 4 EQUAL (OK)
    ✓ should handle script test without cache:SIZE 4 EQUAL (OK)
    ✓ should handle script test with cache:SIZE 5 EQUAL (OK)
    ✓ should handle script test without cache:SIZE 5 EQUAL (OK)
    ✓ should handle script test with cache:SIZE 5 EQUAL (OK)
    ✓ should handle script test without cache:SIZE 5 EQUAL (OK)
    ✓ should handle script test with cache:SIZE 6 EQUAL (OK)
    ✓ should handle script test without cache:SIZE 6 EQUAL (OK)
    ✓ should handle script test with cache:SIZE 8 EQUAL (OK)
    ✓ should handle script test without cache:SIZE 8 EQUAL (OK)
    ✓ should handle script test with cache:SIZE 1 EQUAL (OK)
    ✓ should handle script test without cache:SIZE 1 EQUAL (OK)
    ✓ should handle script test with cache:SIZE 1 EQUAL (OK)
    ✓ should handle script test without cache:SIZE 1 EQUAL (OK)
    ✓ should handle script test with cache:SIZE 2 EQUAL (OK)
    ✓ should handle script test without cache:SIZE 2 EQUAL (OK)
    ✓ should handle script test with cache:SIZE 2 EQUAL (OK)
    ✓ should handle script test without cache:SIZE 2 EQUAL (OK)
    ✓ should handle script test with cache:SIZE 3 EQUAL (OK)
    ✓ should handle script test without cache:SIZE 3 EQUAL (OK)
    ✓ should handle script test with cache:SIZE 3 EQUAL (OK)
    ✓ should handle script test without cache:SIZE 3 EQUAL (OK)
    ✓ should handle script test with cache:SIZE 4 EQUAL (OK)
    ✓ should handle script test without cache:SIZE 4 EQUAL (OK)
    ✓ should handle script test with cache:SIZE 4 EQUAL (OK)
    ✓ should handle script test without cache:SIZE 4 EQUAL (OK)
    ✓ should handle script test with cache:SIZE 5 EQUAL (OK)
    ✓ should handle script test without cache:SIZE 5 EQUAL (OK)
    ✓ should handle script test with cache:SIZE 5 EQUAL (OK)
    ✓ should handle script test without cache:SIZE 5 EQUAL (OK)
    ✓ should handle script test with cache:SIZE 6 EQUAL (OK)
    ✓ should handle script test without cache:SIZE 6 EQUAL (OK)
    ✓ should handle script test with cache:SIZE 8 EQUAL (OK)
    ✓ should handle script test without cache:SIZE 8 EQUAL (OK)
    ✓ should handle script test with cache:SIZE 26 EQUAL (OK)
    ✓ should handle script test without cache:SIZE 26 EQUAL (OK)
    ✓ should handle script test with cache:SIZE does not consume argument (OK)
    ✓ should handle script test without cache:SIZE does not consume argument (OK)
    ✓ should handle script test with cache:0 EQUAL (OK)
    ✓ should handle script test without cache:0 EQUAL (OK)
    ✓ should handle script test with cache:0 EQUAL (OK)
    ✓ should handle script test without cache:0 EQUAL (OK)
    ✓ should handle script test with cache:-2 EQUAL (OK)
    ✓ should handle script test without cache:-2 EQUAL (OK)
    ✓ should handle script test with cache:EQUAL (OK)
    ✓ should handle script test without cache:EQUAL (OK)
    ✓ should handle script test with cache:2 EQUAL (OK)
    ✓ should handle script test without cache:2 EQUAL (OK)
    ✓ should handle script test with cache:2 EQUAL (OK)
    ✓ should handle script test without cache:2 EQUAL (OK)
    ✓ should handle script test with cache:110 EQUAL (OK)
    ✓ should handle script test without cache:110 EQUAL (OK)
    ✓ should handle script test with cache:100 EQUAL (OK)
    ✓ should handle script test without cache:100 EQUAL (OK)
    ✓ should handle script test with cache:0 EQUAL (OK)
    ✓ should handle script test without cache:0 EQUAL (OK)
    ✓ should handle script test with cache:16 EQUAL (OK)
    ✓ should handle script test without cache:16 EQUAL (OK)
    ✓ should handle script test with cache:-16 NEGATE EQUAL (OK)
    ✓ should handle script test without cache:-16 NEGATE EQUAL (OK)
    ✓ should handle script test with cache:NOP (OK)
    ✓ should handle script test without cache:NOP (OK)
    ✓ should handle script test with cache:0 EQUAL (OK)
    ✓ should handle script test without cache:0 EQUAL (OK)
    ✓ should handle script test with cache:0 EQUAL (OK)
    ✓ should handle script test without cache:0 EQUAL (OK)
    ✓ should handle script test with cache:0 EQUAL (OK)
    ✓ should handle script test without cache:0 EQUAL (OK)
    ✓ should handle script test with cache:1 EQUAL (OK)
    ✓ should handle script test without cache:1 EQUAL (OK)
    ✓ should handle script test with cache:1 EQUAL (OK)
    ✓ should handle script test without cache:1 EQUAL (OK)
    ✓ should handle script test with cache:1 EQUAL (OK)
    ✓ should handle script test without cache:1 EQUAL (OK)
    ✓ should handle script test with cache:NOP (OK)
    ✓ should handle script test without cache:NOP (OK)
    ✓ should handle script test with cache:NOT (OK)
    ✓ should handle script test without cache:NOT (OK)
    ✓ should handle script test with cache:NOT (OK)
    ✓ should handle script test without cache:NOT (OK)
    ✓ should handle script test with cache:NOT (OK)
    ✓ should handle script test without cache:NOT (OK)
    ✓ should handle script test with cache:NOP (OK)
    ✓ should handle script test without cache:NOP (OK)
    ✓ should handle script test with cache:NOP (OK)
    ✓ should handle script test without cache:NOP (OK)
    ✓ should handle script test with cache:NOP (OK)
    ✓ should handle script test without cache:NOP (OK)
    ✓ should handle script test with cache:NOP (OK)
    ✓ should handle script test without cache:NOP (OK)
    ✓ should handle script test with cache:NOT (OK)
    ✓ should handle script test without cache:NOT (OK)
    ✓ should handle script test with cache:NOP (OK)
    ✓ should handle script test without cache:NOP (OK)
    ✓ should handle script test with cache:NUMEQUAL (OK)
    ✓ should handle script test without cache:NUMEQUAL (OK)
    ✓ should handle script test with cache:NUMEQUALVERIFY 1 (OK)
    ✓ should handle script test without cache:NUMEQUALVERIFY 1 (OK)
    ✓ should handle script test with cache:NUMNOTEQUAL NOT (OK)
    ✓ should handle script test without cache:NUMNOTEQUAL NOT (OK)
    ✓ should handle script test with cache:NUMNOTEQUAL (OK)
    ✓ should handle script test without cache:NUMNOTEQUAL (OK)
    ✓ should handle script test with cache:LESSTHAN NOT (OK)
    ✓ should handle script test without cache:LESSTHAN NOT (OK)
    ✓ should handle script test with cache:LESSTHAN NOT (OK)
    ✓ should handle script test without cache:LESSTHAN NOT (OK)
    ✓ should handle script test with cache:LESSTHAN (OK)
    ✓ should handle script test without cache:LESSTHAN (OK)
    ✓ should handle script test with cache:LESSTHAN (OK)
    ✓ should handle script test without cache:LESSTHAN (OK)
    ✓ should handle script test with cache:LESSTHAN (OK)
    ✓ should handle script test without cache:LESSTHAN (OK)
    ✓ should handle script test with cache:GREATERTHAN (OK)
    ✓ should handle script test without cache:GREATERTHAN (OK)
    ✓ should handle script test with cache:GREATERTHAN NOT (OK)
    ✓ should handle script test without cache:GREATERTHAN NOT (OK)
    ✓ should handle script test with cache:GREATERTHAN NOT (OK)
    ✓ should handle script test without cache:GREATERTHAN NOT (OK)
    ✓ should handle script test with cache:GREATERTHAN NOT (OK)
    ✓ should handle script test without cache:GREATERTHAN NOT (OK)
    ✓ should handle script test with cache:GREATERTHAN NOT (OK)
    ✓ should handle script test without cache:GREATERTHAN NOT (OK)
    ✓ should handle script test with cache:LESSTHANOREQUAL NOT (OK)
    ✓ should handle script test without cache:LESSTHANOREQUAL NOT (OK)
    ✓ should handle script test with cache:LESSTHANOREQUAL (OK)
    ✓ should handle script test without cache:LESSTHANOREQUAL (OK)
    ✓ should handle script test with cache:LESSTHANOREQUAL (OK)
    ✓ should handle script test without cache:LESSTHANOREQUAL (OK)
    ✓ should handle script test with cache:LESSTHANOREQUAL (OK)
    ✓ should handle script test without cache:LESSTHANOREQUAL (OK)
    ✓ should handle script test with cache:LESSTHANOREQUAL (OK)
    ✓ should handle script test without cache:LESSTHANOREQUAL (OK)
    ✓ should handle script test with cache:GREATERTHANOREQUAL (OK)
    ✓ should handle script test without cache:GREATERTHANOREQUAL (OK)
    ✓ should handle script test with cache:GREATERTHANOREQUAL (OK)
    ✓ should handle script test without cache:GREATERTHANOREQUAL (OK)
    ✓ should handle script test with cache:GREATERTHANOREQUAL NOT (OK)
    ✓ should handle script test without cache:GREATERTHANOREQUAL NOT (OK)
    ✓ should handle script test with cache:GREATERTHANOREQUAL NOT (OK)
    ✓ should handle script test without cache:GREATERTHANOREQUAL NOT (OK)
    ✓ should handle script test with cache:GREATERTHANOREQUAL NOT (OK)
    ✓ should handle script test without cache:GREATERTHANOREQUAL NOT (OK)
    ✓ should handle script test with cache:0 NUMEQUAL (OK)
    ✓ should handle script test without cache:0 NUMEQUAL (OK)
    ✓ should handle script test with cache:0 NUMEQUAL (OK)
    ✓ should handle script test without cache:0 NUMEQUAL (OK)
    ✓ should handle script test with cache:-1 NUMEQUAL (OK)
    ✓ should handle script test without cache:-1 NUMEQUAL (OK)
    ✓ should handle script test with cache:-2147483647 NUMEQUAL (OK)
    ✓ should handle script test without cache:-2147483647 NUMEQUAL (OK)
    ✓ should handle script test with cache:2147483647 NUMEQUAL (OK)
    ✓ should handle script test without cache:2147483647 NUMEQUAL (OK)
    ✓ should handle script test with cache:100 NUMEQUAL (OK)
    ✓ should handle script test without cache:100 NUMEQUAL (OK)
    ✓ should handle script test with cache:0 NUMEQUAL (OK)
    ✓ should handle script test without cache:0 NUMEQUAL (OK)
    ✓ should handle script test with cache:0 NUMEQUAL (OK)
    ✓ should handle script test without cache:0 NUMEQUAL (OK)
    ✓ should handle script test with cache:WITHIN (OK)
    ✓ should handle script test without cache:WITHIN (OK)
    ✓ should handle script test with cache:WITHIN NOT (OK)
    ✓ should handle script test without cache:WITHIN NOT (OK)
    ✓ should handle script test with cache:WITHIN (OK)
    ✓ should handle script test without cache:WITHIN (OK)
    ✓ should handle script test with cache:WITHIN (OK)
    ✓ should handle script test without cache:WITHIN (OK)
    ✓ should handle script test with cache:WITHIN (OK)
    ✓ should handle script test without cache:WITHIN (OK)
    ✓ should handle script test with cache:WITHIN NOT (OK)
    ✓ should handle script test without cache:WITHIN NOT (OK)
    ✓ should handle script test with cache:WITHIN NOT (OK)
    ✓ should handle script test without cache:WITHIN NOT (OK)
    ✓ should handle script test with cache:0 EQUAL (OK)
    ✓ should handle script test without cache:0 EQUAL (OK)
    ✓ should handle script test with cache:>32 bit EQUAL is valid (OK)
    ✓ should handle script test without cache:>32 bit EQUAL is valid (OK)
    ✓ should handle script test with cache:-4294967294 EQUAL (OK)
    ✓ should handle script test without cache:-4294967294 EQUAL (OK)
    ✓ should handle script test with cache:RIPEMD160 0x14 0x9c1185a5c5e9fc54612808977ee8f548b2258d31 EQ (OK)
    ✓ should handle script test without cache:RIPEMD160 0x14 0x9c1185a5c5e9fc54612808977ee8f548b2258d31 EQ (OK)
    ✓ should handle script test with cache:RIPEMD160 0x14 0x0bdc9d2d256b3ee9daae347be6f4dc835a467ffe EQ (OK)
    ✓ should handle script test without cache:RIPEMD160 0x14 0x0bdc9d2d256b3ee9daae347be6f4dc835a467ffe EQ (OK)
    ✓ should handle script test with cache:RIPEMD160 0x14 0xf71c27109c692c1b56bbdceb5b9d2865b3708dbc EQ (OK)
    ✓ should handle script test without cache:RIPEMD160 0x14 0xf71c27109c692c1b56bbdceb5b9d2865b3708dbc EQ (OK)
    ✓ should handle script test with cache:SHA1 0x14 0xda39a3ee5e6b4b0d3255bfef95601890afd80709 EQUAL (OK)
    ✓ should handle script test without cache:SHA1 0x14 0xda39a3ee5e6b4b0d3255bfef95601890afd80709 EQUAL (OK)
    ✓ should handle script test with cache:SHA1 0x14 0x86f7e437faa5a7fce15d1ddcb9eaeaea377667b8 EQUAL (OK)
    ✓ should handle script test without cache:SHA1 0x14 0x86f7e437faa5a7fce15d1ddcb9eaeaea377667b8 EQUAL (OK)
    ✓ should handle script test with cache:SHA1 0x14 0x32d10c7b8cf96570ca04ce37f2a19d84240d3a89 EQUAL (OK)
    ✓ should handle script test without cache:SHA1 0x14 0x32d10c7b8cf96570ca04ce37f2a19d84240d3a89 EQUAL (OK)
    ✓ should handle script test with cache:SHA256 0x20 0xe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b93 (OK)
    ✓ should handle script test without cache:SHA256 0x20 0xe3b0c44298fc1c149afbf4c8996fb92427ae41e4649b93 (OK)
    ✓ should handle script test with cache:SHA256 0x20 0xca978112ca1bbdcafac231b39a23dc4da786eff8147c4e (OK)
    ✓ should handle script test without cache:SHA256 0x20 0xca978112ca1bbdcafac231b39a23dc4da786eff8147c4e (OK)
    ✓ should handle script test with cache:SHA256 0x20 0x71c480df93d6ae2f1efad1447c66c9525e316218cf51fc (OK)
    ✓ should handle script test without cache:SHA256 0x20 0x71c480df93d6ae2f1efad1447c66c9525e316218cf51fc (OK)
    ✓ should handle script test with cache:DUP HASH160 SWAP SHA256 RIPEMD160 EQUAL (OK)
    ✓ should handle script test without cache:DUP HASH160 SWAP SHA256 RIPEMD160 EQUAL (OK)
    ✓ should handle script test with cache:DUP HASH256 SWAP SHA256 SHA256 EQUAL (OK)
    ✓ should handle script test without cache:DUP HASH256 SWAP SHA256 SHA256 EQUAL (OK)
    ✓ should handle script test with cache:NOP HASH160 0x14 0xb472a266d0bd89c13706a4132ccfb16f7c3b9fcb  (OK)
    ✓ should handle script test without cache:NOP HASH160 0x14 0xb472a266d0bd89c13706a4132ccfb16f7c3b9fcb  (OK)
    ✓ should handle script test with cache:HASH160 NOP 0x14 0x994355199e516ff76c4fa4aab39337b9d84cf12b  (OK)
    ✓ should handle script test without cache:HASH160 NOP 0x14 0x994355199e516ff76c4fa4aab39337b9d84cf12b  (OK)
    ✓ should handle script test with cache:HASH160 0x4c 0x14 0xc286a1af0947f58d1ad787385b1c2c4a976f9e71 (OK)
    ✓ should handle script test without cache:HASH160 0x4c 0x14 0xc286a1af0947f58d1ad787385b1c2c4a976f9e71 (OK)
    ✓ should handle script test with cache:HASH256 0x20 0x5df6e0e2761359d30a8275058e299fcc0381534545f55 (OK)
    ✓ should handle script test without cache:HASH256 0x20 0x5df6e0e2761359d30a8275058e299fcc0381534545f55 (OK)
    ✓ should handle script test with cache:HASH256 0x20 0xbf5d3affb73efd2ec6c36ad3112dd933efed63c4e1cbf (OK)
    ✓ should handle script test without cache:HASH256 0x20 0xbf5d3affb73efd2ec6c36ad3112dd933efed63c4e1cbf (OK)
    ✓ should handle script test with cache:HASH256 0x4c 0x20 0xca139bc10c2f660da42666f72e89a225936fc60f (OK)
    ✓ should handle script test without cache:HASH256 0x4c 0x20 0xca139bc10c2f660da42666f72e89a225936fc60f (OK)
    ✓ should handle script test with cache:NOP1 CHECKLOCKTIMEVERIFY CHECKSEQUENCEVERIFY NOP4 NOP5 NOP6  (OK)
    ✓ should handle script test without cache:NOP1 CHECKLOCKTIMEVERIFY CHECKSEQUENCEVERIFY NOP4 NOP5 NOP6  (OK)
    ✓ should handle script test with cache:'NOP_1_to_10' EQUAL (OK)
    ✓ should handle script test without cache:'NOP_1_to_10' EQUAL (OK)
    ✓ should handle script test with cache:Discourage NOPx flag allows OP_NOP (OK)
    ✓ should handle script test without cache:Discourage NOPx flag allows OP_NOP (OK)
    ✓ should handle script test with cache:Discouraged NOPs are allowed if not executed (OK)
    ✓ should handle script test without cache:Discouraged NOPs are allowed if not executed (OK)
    ✓ should handle script test with cache:opcodes above MAX_OPCODE invalid if executed (OK)
    ✓ should handle script test without cache:opcodes above MAX_OPCODE invalid if executed (OK)
    ✓ should handle script test with cache:IF 0xbb ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xbb ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xbc ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xbc ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xbd ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xbd ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xbe ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xbe ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xbf ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xbf ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xc0 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xc0 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xc1 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xc1 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xc2 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xc2 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xc3 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xc3 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xc4 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xc4 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xc5 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xc5 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xc6 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xc6 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xc7 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xc7 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xc8 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xc8 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xc9 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xc9 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xca ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xca ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xcb ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xcb ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xcc ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xcc ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xcd ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xcd ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xce ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xce ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xcf ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xcf ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xd0 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xd0 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xd1 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xd1 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xd2 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xd2 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xd3 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xd3 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xd4 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xd4 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xd5 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xd5 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xd6 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xd6 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xd7 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xd7 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xd8 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xd8 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xd9 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xd9 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xda ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xda ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xdb ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xdb ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xdc ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xdc ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xdd ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xdd ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xde ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xde ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xdf ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xdf ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xe0 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xe0 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xe1 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xe1 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xe2 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xe2 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xe3 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xe3 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xe4 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xe4 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xe5 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xe5 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xe6 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xe6 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xe7 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xe7 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xe8 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xe8 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xe9 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xe9 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xea ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xea ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xeb ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xeb ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xec ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xec ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xed ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xed ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xee ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xee ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xef ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xef ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xf0 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xf0 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xf1 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xf1 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xf2 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xf2 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xf3 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xf3 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xf4 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xf4 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xf5 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xf5 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xf6 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xf6 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xf7 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xf7 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xf8 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xf8 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xf9 ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xf9 ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xfa ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xfa ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xfb ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xfb ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xfc ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xfc ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xfd ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xfd ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xfe ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xfe ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 0xff ELSE 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 0xff ELSE 1 ENDIF (OK)
    ✓ should handle script test with cache:520 byte push (OK)
    ✓ should handle script test without cache:520 byte push (OK)
    ✓ should handle script test with cache:201 opcodes executed. 0x61 is NOP (OK)
    ✓ should handle script test without cache:201 opcodes executed. 0x61 is NOP (OK)
    ✓ should handle script test with cache:1,000 stack size (0x6f is 3DUP) (OK)
    ✓ should handle script test without cache:1,000 stack size (0x6f is 3DUP) (OK)
    ✓ should handle script test with cache:1,000 stack size (altstack cleared between scriptSig/scriptPubKey) (OK)
    ✓ should handle script test without cache:1,000 stack size (altstack cleared between scriptSig/scriptPubKey) (OK)
    ✓ should handle script test with cache:Max-size (10,000-byte), max-push(520 bytes), max-opcodes(201), max stack size(1,000 items). 0x6f is 3DUP, 0x61 is NOP (OK)
    ✓ should handle script test without cache:Max-size (10,000-byte), max-push(520 bytes), max-opcodes(201), max stack size(1,000 items). 0x6f is 3DUP, 0x61 is NOP (OK)
    ✓ should handle script test with cache:>201 opcodes, but RESERVED (0x50) doesn't count towards opcode limit. (OK)
    ✓ should handle script test without cache:>201 opcodes, but RESERVED (0x50) doesn't count towards opcode limit. (OK)
    ✓ should handle script test with cache:1 (OK)
    ✓ should handle script test without cache:1 (OK)
    ✓ should handle script test with cache:The following is useful for checking implementations of BN_bn2mpi (OK)
    ✓ should handle script test without cache:The following is useful for checking implementations of BN_bn2mpi (OK)
    ✓ should handle script test with cache:0x01 0x7F EQUAL (OK)
    ✓ should handle script test without cache:0x01 0x7F EQUAL (OK)
    ✓ should handle script test with cache:Leave room for the sign bit (OK)
    ✓ should handle script test without cache:Leave room for the sign bit (OK)
    ✓ should handle script test with cache:0x02 0xFF7F EQUAL (OK)
    ✓ should handle script test without cache:0x02 0xFF7F EQUAL (OK)
    ✓ should handle script test with cache:0x03 0x008000 EQUAL (OK)
    ✓ should handle script test without cache:0x03 0x008000 EQUAL (OK)
    ✓ should handle script test with cache:0x03 0xFFFF7F EQUAL (OK)
    ✓ should handle script test without cache:0x03 0xFFFF7F EQUAL (OK)
    ✓ should handle script test with cache:0x04 0x00008000 EQUAL (OK)
    ✓ should handle script test without cache:0x04 0x00008000 EQUAL (OK)
    ✓ should handle script test with cache:0x04 0xFFFFFF7F EQUAL (OK)
    ✓ should handle script test without cache:0x04 0xFFFFFF7F EQUAL (OK)
    ✓ should handle script test with cache:0x05 0x0000008000 EQUAL (OK)
    ✓ should handle script test without cache:0x05 0x0000008000 EQUAL (OK)
    ✓ should handle script test with cache:0x05 0xFFFFFFFF7F EQUAL (OK)
    ✓ should handle script test without cache:0x05 0xFFFFFFFF7F EQUAL (OK)
    ✓ should handle script test with cache:0x06 0x000000008000 EQUAL (OK)
    ✓ should handle script test without cache:0x06 0x000000008000 EQUAL (OK)
    ✓ should handle script test with cache:0x08 0xFFFFFFFFFFFFFF7F EQUAL (OK)
    ✓ should handle script test without cache:0x08 0xFFFFFFFFFFFFFF7F EQUAL (OK)
    ✓ should handle script test with cache:Numbers are little-endian with the MSB being a sign bit (OK)
    ✓ should handle script test without cache:Numbers are little-endian with the MSB being a sign bit (OK)
    ✓ should handle script test with cache:0x01 0xFF EQUAL (OK)
    ✓ should handle script test without cache:0x01 0xFF EQUAL (OK)
    ✓ should handle script test with cache:0x02 0x8080 EQUAL (OK)
    ✓ should handle script test without cache:0x02 0x8080 EQUAL (OK)
    ✓ should handle script test with cache:0x02 0xFFFF EQUAL (OK)
    ✓ should handle script test without cache:0x02 0xFFFF EQUAL (OK)
    ✓ should handle script test with cache:0x03 0x008080 EQUAL (OK)
    ✓ should handle script test without cache:0x03 0x008080 EQUAL (OK)
    ✓ should handle script test with cache:0x03 0xFFFFFF EQUAL (OK)
    ✓ should handle script test without cache:0x03 0xFFFFFF EQUAL (OK)
    ✓ should handle script test with cache:0x04 0x00008080 EQUAL (OK)
    ✓ should handle script test without cache:0x04 0x00008080 EQUAL (OK)
    ✓ should handle script test with cache:0x04 0xFFFFFFFF EQUAL (OK)
    ✓ should handle script test without cache:0x04 0xFFFFFFFF EQUAL (OK)
    ✓ should handle script test with cache:0x05 0x0000008080 EQUAL (OK)
    ✓ should handle script test without cache:0x05 0x0000008080 EQUAL (OK)
    ✓ should handle script test with cache:0x05 0xFFFFFFFF80 EQUAL (OK)
    ✓ should handle script test without cache:0x05 0xFFFFFFFF80 EQUAL (OK)
    ✓ should handle script test with cache:0x05 0xFFFFFFFFFF EQUAL (OK)
    ✓ should handle script test without cache:0x05 0xFFFFFFFFFF EQUAL (OK)
    ✓ should handle script test with cache:0x06 0x000000008080 EQUAL (OK)
    ✓ should handle script test without cache:0x06 0x000000008080 EQUAL (OK)
    ✓ should handle script test with cache:0x08 0xFFFFFFFFFFFFFFFF EQUAL (OK)
    ✓ should handle script test without cache:0x08 0xFFFFFFFFFFFFFFFF EQUAL (OK)
    ✓ should handle script test with cache:We can do math on 4-byte integers, and compare 5-byte ones (OK)
    ✓ should handle script test without cache:We can do math on 4-byte integers, and compare 5-byte ones (OK)
    ✓ should handle script test with cache:1ADD 1 (OK)
    ✓ should handle script test without cache:1ADD 1 (OK)
    ✓ should handle script test with cache:1ADD 1 (OK)
    ✓ should handle script test without cache:1ADD 1 (OK)
    ✓ should handle script test with cache:Not the same byte array... (OK)
    ✓ should handle script test without cache:Not the same byte array... (OK)
    ✓ should handle script test with cache:... but they are numerically equal (OK)
    ✓ should handle script test without cache:... but they are numerically equal (OK)
    ✓ should handle script test with cache:0x4c 0x03 0x0b0000 NUMEQUAL (OK)
    ✓ should handle script test without cache:0x4c 0x03 0x0b0000 NUMEQUAL (OK)
    ✓ should handle script test with cache:0x01 0x80 EQUAL NOT (OK)
    ✓ should handle script test without cache:0x01 0x80 EQUAL NOT (OK)
    ✓ should handle script test with cache:Zero numerically equals negative zero (OK)
    ✓ should handle script test without cache:Zero numerically equals negative zero (OK)
    ✓ should handle script test with cache:0x02 0x0080 NUMEQUAL (OK)
    ✓ should handle script test without cache:0x02 0x0080 NUMEQUAL (OK)
    ✓ should handle script test with cache:0x04 0x00000080 NUMEQUAL (OK)
    ✓ should handle script test without cache:0x04 0x00000080 NUMEQUAL (OK)
    ✓ should handle script test with cache:0x04 0x10000080 NUMEQUAL (OK)
    ✓ should handle script test without cache:0x04 0x10000080 NUMEQUAL (OK)
    ✓ should handle script test with cache:0x04 0x10000000 NUMEQUAL (OK)
    ✓ should handle script test without cache:0x04 0x10000000 NUMEQUAL (OK)
    ✓ should handle script test with cache:The following tests check the if(stack.size() < N) tests in each opcode (OK)
    ✓ should handle script test without cache:The following tests check the if(stack.size() < N) tests in each opcode (OK)
    ✓ should handle script test with cache:They are here to catch copy-and-paste errors (OK)
    ✓ should handle script test without cache:They are here to catch copy-and-paste errors (OK)
    ✓ should handle script test with cache:Most of them are duplicated elsewhere, (OK)
    ✓ should handle script test without cache:Most of them are duplicated elsewhere, (OK)
    ✓ should handle script test with cache:but, hey, more is always better, right? (OK)
    ✓ should handle script test without cache:but, hey, more is always better, right? (OK)
    ✓ should handle script test with cache:TOALTSTACK 1 (OK)
    ✓ should handle script test without cache:TOALTSTACK 1 (OK)
    ✓ should handle script test with cache:TOALTSTACK FROMALTSTACK (OK)
    ✓ should handle script test without cache:TOALTSTACK FROMALTSTACK (OK)
    ✓ should handle script test with cache:2DROP 1 (OK)
    ✓ should handle script test without cache:2DROP 1 (OK)
    ✓ should handle script test with cache:2DUP (OK)
    ✓ should handle script test without cache:2DUP (OK)
    ✓ should handle script test with cache:3DUP (OK)
    ✓ should handle script test without cache:3DUP (OK)
    ✓ should handle script test with cache:2OVER (OK)
    ✓ should handle script test without cache:2OVER (OK)
    ✓ should handle script test with cache:2ROT (OK)
    ✓ should handle script test without cache:2ROT (OK)
    ✓ should handle script test with cache:2SWAP (OK)
    ✓ should handle script test without cache:2SWAP (OK)
    ✓ should handle script test with cache:IFDUP (OK)
    ✓ should handle script test without cache:IFDUP (OK)
    ✓ should handle script test with cache:DEPTH 1 (OK)
    ✓ should handle script test without cache:DEPTH 1 (OK)
    ✓ should handle script test with cache:DROP 1 (OK)
    ✓ should handle script test without cache:DROP 1 (OK)
    ✓ should handle script test with cache:DUP (OK)
    ✓ should handle script test without cache:DUP (OK)
    ✓ should handle script test with cache:NIP (OK)
    ✓ should handle script test without cache:NIP (OK)
    ✓ should handle script test with cache:OVER (OK)
    ✓ should handle script test without cache:OVER (OK)
    ✓ should handle script test with cache:PICK (OK)
    ✓ should handle script test without cache:PICK (OK)
    ✓ should handle script test with cache:PICK (OK)
    ✓ should handle script test without cache:PICK (OK)
    ✓ should handle script test with cache:ROLL (OK)
    ✓ should handle script test without cache:ROLL (OK)
    ✓ should handle script test with cache:ROLL (OK)
    ✓ should handle script test without cache:ROLL (OK)
    ✓ should handle script test with cache:ROT (OK)
    ✓ should handle script test without cache:ROT (OK)
    ✓ should handle script test with cache:SWAP (OK)
    ✓ should handle script test without cache:SWAP (OK)
    ✓ should handle script test with cache:TUCK (OK)
    ✓ should handle script test without cache:TUCK (OK)
    ✓ should handle script test with cache:SIZE (OK)
    ✓ should handle script test without cache:SIZE (OK)
    ✓ should handle script test with cache:EQUAL (OK)
    ✓ should handle script test without cache:EQUAL (OK)
    ✓ should handle script test with cache:EQUALVERIFY 1 (OK)
    ✓ should handle script test without cache:EQUALVERIFY 1 (OK)
    ✓ should handle script test with cache:OP_0 and bools must have identical byte representations (OK)
    ✓ should handle script test without cache:OP_0 and bools must have identical byte representations (OK)
    ✓ should handle script test with cache:1ADD (OK)
    ✓ should handle script test without cache:1ADD (OK)
    ✓ should handle script test with cache:1SUB (OK)
    ✓ should handle script test without cache:1SUB (OK)
    ✓ should handle script test with cache:NEGATE (OK)
    ✓ should handle script test without cache:NEGATE (OK)
    ✓ should handle script test with cache:ABS (OK)
    ✓ should handle script test without cache:ABS (OK)
    ✓ should handle script test with cache:NOT (OK)
    ✓ should handle script test without cache:NOT (OK)
    ✓ should handle script test with cache:0NOTEQUAL (OK)
    ✓ should handle script test without cache:0NOTEQUAL (OK)
    ✓ should handle script test with cache:ADD (OK)
    ✓ should handle script test without cache:ADD (OK)
    ✓ should handle script test with cache:SUB (OK)
    ✓ should handle script test without cache:SUB (OK)
    ✓ should handle script test with cache:BOOLAND (OK)
    ✓ should handle script test without cache:BOOLAND (OK)
    ✓ should handle script test with cache:BOOLOR (OK)
    ✓ should handle script test without cache:BOOLOR (OK)
    ✓ should handle script test with cache:NUMEQUAL (OK)
    ✓ should handle script test without cache:NUMEQUAL (OK)
    ✓ should handle script test with cache:NUMEQUALVERIFY 1 (OK)
    ✓ should handle script test without cache:NUMEQUALVERIFY 1 (OK)
    ✓ should handle script test with cache:NUMNOTEQUAL (OK)
    ✓ should handle script test without cache:NUMNOTEQUAL (OK)
    ✓ should handle script test with cache:LESSTHAN (OK)
    ✓ should handle script test without cache:LESSTHAN (OK)
    ✓ should handle script test with cache:GREATERTHAN (OK)
    ✓ should handle script test without cache:GREATERTHAN (OK)
    ✓ should handle script test with cache:LESSTHANOREQUAL (OK)
    ✓ should handle script test without cache:LESSTHANOREQUAL (OK)
    ✓ should handle script test with cache:GREATERTHANOREQUAL (OK)
    ✓ should handle script test without cache:GREATERTHANOREQUAL (OK)
    ✓ should handle script test with cache:MIN (OK)
    ✓ should handle script test without cache:MIN (OK)
    ✓ should handle script test with cache:MAX (OK)
    ✓ should handle script test without cache:MAX (OK)
    ✓ should handle script test with cache:WITHIN (OK)
    ✓ should handle script test without cache:WITHIN (OK)
    ✓ should handle script test with cache:RIPEMD160 (OK)
    ✓ should handle script test without cache:RIPEMD160 (OK)
    ✓ should handle script test with cache:SHA1 (OK)
    ✓ should handle script test without cache:SHA1 (OK)
    ✓ should handle script test with cache:SHA256 (OK)
    ✓ should handle script test without cache:SHA256 (OK)
    ✓ should handle script test with cache:HASH160 (OK)
    ✓ should handle script test without cache:HASH160 (OK)
    ✓ should handle script test with cache:HASH256 (OK)
    ✓ should handle script test without cache:HASH256 (OK)
    ✓ should handle script test with cache:CODESEPARATOR 1 (OK)
    ✓ should handle script test without cache:CODESEPARATOR 1 (OK)
    ✓ should handle script test with cache:NOP1 1 (OK)
    ✓ should handle script test without cache:NOP1 1 (OK)
    ✓ should handle script test with cache:CHECKLOCKTIMEVERIFY 1 (OK)
    ✓ should handle script test without cache:CHECKLOCKTIMEVERIFY 1 (OK)
    ✓ should handle script test with cache:CHECKSEQUENCEVERIFY 1 (OK)
    ✓ should handle script test without cache:CHECKSEQUENCEVERIFY 1 (OK)
    ✓ should handle script test with cache:NOP4 1 (OK)
    ✓ should handle script test without cache:NOP4 1 (OK)
    ✓ should handle script test with cache:NOP5 1 (OK)
    ✓ should handle script test without cache:NOP5 1 (OK)
    ✓ should handle script test with cache:NOP6 1 (OK)
    ✓ should handle script test without cache:NOP6 1 (OK)
    ✓ should handle script test with cache:NOP7 1 (OK)
    ✓ should handle script test without cache:NOP7 1 (OK)
    ✓ should handle script test with cache:NOP8 1 (OK)
    ✓ should handle script test without cache:NOP8 1 (OK)
    ✓ should handle script test with cache:NOP9 1 (OK)
    ✓ should handle script test without cache:NOP9 1 (OK)
    ✓ should handle script test with cache:NOP10 1 (OK)
    ✓ should handle script test without cache:NOP10 1 (OK)
    ✓ should handle script test with cache:CHECKMULTISIG is allowed to have zero keys and/or sigs (OK)
    ✓ should handle script test without cache:CHECKMULTISIG is allowed to have zero keys and/or sigs (OK)
    ✓ should handle script test with cache:0 0 0 CHECKMULTISIGVERIFY DEPTH 0 EQUAL (OK)
    ✓ should handle script test without cache:0 0 0 CHECKMULTISIGVERIFY DEPTH 0 EQUAL (OK)
    ✓ should handle script test with cache:Zero sigs means no sigs are checked (OK)
    ✓ should handle script test without cache:Zero sigs means no sigs are checked (OK)
    ✓ should handle script test with cache:0 0 0 1 CHECKMULTISIGVERIFY DEPTH 0 EQUAL (OK)
    ✓ should handle script test without cache:0 0 0 1 CHECKMULTISIGVERIFY DEPTH 0 EQUAL (OK)
    ✓ should handle script test with cache:CHECKMULTISIG is allowed to have zero keys and/or sigs (OK)
    ✓ should handle script test without cache:CHECKMULTISIG is allowed to have zero keys and/or sigs (OK)
    ✓ should handle script test with cache:0 0 0 CHECKMULTISIGVERIFY DEPTH 0 EQUAL (OK)
    ✓ should handle script test without cache:0 0 0 CHECKMULTISIGVERIFY DEPTH 0 EQUAL (OK)
    ✓ should handle script test with cache:Zero sigs means no sigs are checked (OK)
    ✓ should handle script test without cache:Zero sigs means no sigs are checked (OK)
    ✓ should handle script test with cache:0 0 0 1 CHECKMULTISIGVERIFY DEPTH 0 EQUAL (OK)
    ✓ should handle script test without cache:0 0 0 1 CHECKMULTISIGVERIFY DEPTH 0 EQUAL (OK)
    ✓ should handle script test with cache:Test from up to 20 pubkeys, all not checked (OK)
    ✓ should handle script test without cache:Test from up to 20 pubkeys, all not checked (OK)
    ✓ should handle script test with cache:0 0 'a' 'b' 'c' 3 CHECKMULTISIG VERIFY DEPTH 0 EQUAL (OK)
    ✓ should handle script test without cache:0 0 'a' 'b' 'c' 3 CHECKMULTISIG VERIFY DEPTH 0 EQUAL (OK)
    ✓ should handle script test with cache:0 0 'a' 'b' 'c' 'd' 4 CHECKMULTISIG VERIFY DEPTH 0 EQUAL (OK)
    ✓ should handle script test without cache:0 0 'a' 'b' 'c' 'd' 4 CHECKMULTISIG VERIFY DEPTH 0 EQUAL (OK)
    ✓ should handle script test with cache:0 0 'a' 'b' 'c' 'd' 'e' 5 CHECKMULTISIG VERIFY DEPTH 0 EQUAL (OK)
    ✓ should handle script test without cache:0 0 'a' 'b' 'c' 'd' 'e' 5 CHECKMULTISIG VERIFY DEPTH 0 EQUAL (OK)
    ✓ should handle script test with cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 6 CHECKMULTISIG VERIFY DEPTH 0 E (OK)
    ✓ should handle script test without cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 6 CHECKMULTISIG VERIFY DEPTH 0 E (OK)
    ✓ should handle script test with cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 7 CHECKMULTISIG VERIFY DEPTH (OK)
    ✓ should handle script test without cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 7 CHECKMULTISIG VERIFY DEPTH (OK)
    ✓ should handle script test with cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 8 CHECKMULTISIG VERIFY D (OK)
    ✓ should handle script test without cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 8 CHECKMULTISIG VERIFY D (OK)
    ✓ should handle script test with cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 9 CHECKMULTISIG VERI (OK)
    ✓ should handle script test without cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 9 CHECKMULTISIG VERI (OK)
    ✓ should handle script test with cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 10 CHECKMULTISIG (OK)
    ✓ should handle script test without cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 10 CHECKMULTISIG (OK)
    ✓ should handle script test with cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 11 CHECKMULT (OK)
    ✓ should handle script test without cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 11 CHECKMULT (OK)
    ✓ should handle script test with cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 12 CHECK (OK)
    ✓ should handle script test without cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 12 CHECK (OK)
    ✓ should handle script test with cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 13 C (OK)
    ✓ should handle script test without cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 13 C (OK)
    ✓ should handle script test with cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n'  (OK)
    ✓ should handle script test without cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n'  (OK)
    ✓ should handle script test with cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n'  (OK)
    ✓ should handle script test without cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n'  (OK)
    ✓ should handle script test with cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n'  (OK)
    ✓ should handle script test without cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n'  (OK)
    ✓ should handle script test with cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n'  (OK)
    ✓ should handle script test without cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n'  (OK)
    ✓ should handle script test with cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n'  (OK)
    ✓ should handle script test without cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n'  (OK)
    ✓ should handle script test with cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n'  (OK)
    ✓ should handle script test without cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n'  (OK)
    ✓ should handle script test with cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n'  (OK)
    ✓ should handle script test without cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n'  (OK)
    ✓ should handle script test with cache:0 0 'a' 1 CHECKMULTISIGVERIFY DEPTH 0 EQUAL (OK)
    ✓ should handle script test without cache:0 0 'a' 1 CHECKMULTISIGVERIFY DEPTH 0 EQUAL (OK)
    ✓ should handle script test with cache:0 0 'a' 'b' 2 CHECKMULTISIGVERIFY DEPTH 0 EQUAL (OK)
    ✓ should handle script test without cache:0 0 'a' 'b' 2 CHECKMULTISIGVERIFY DEPTH 0 EQUAL (OK)
    ✓ should handle script test with cache:0 0 'a' 'b' 'c' 3 CHECKMULTISIGVERIFY DEPTH 0 EQUAL (OK)
    ✓ should handle script test without cache:0 0 'a' 'b' 'c' 3 CHECKMULTISIGVERIFY DEPTH 0 EQUAL (OK)
    ✓ should handle script test with cache:0 0 'a' 'b' 'c' 'd' 4 CHECKMULTISIGVERIFY DEPTH 0 EQUAL (OK)
    ✓ should handle script test without cache:0 0 'a' 'b' 'c' 'd' 4 CHECKMULTISIGVERIFY DEPTH 0 EQUAL (OK)
    ✓ should handle script test with cache:0 0 'a' 'b' 'c' 'd' 'e' 5 CHECKMULTISIGVERIFY DEPTH 0 EQUAL (OK)
    ✓ should handle script test without cache:0 0 'a' 'b' 'c' 'd' 'e' 5 CHECKMULTISIGVERIFY DEPTH 0 EQUAL (OK)
    ✓ should handle script test with cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 6 CHECKMULTISIGVERIFY DEPTH 0 EQ (OK)
    ✓ should handle script test without cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 6 CHECKMULTISIGVERIFY DEPTH 0 EQ (OK)
    ✓ should handle script test with cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 7 CHECKMULTISIGVERIFY DEPTH  (OK)
    ✓ should handle script test without cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 7 CHECKMULTISIGVERIFY DEPTH  (OK)
    ✓ should handle script test with cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 8 CHECKMULTISIGVERIFY DE (OK)
    ✓ should handle script test without cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 8 CHECKMULTISIGVERIFY DE (OK)
    ✓ should handle script test with cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 9 CHECKMULTISIGVERIF (OK)
    ✓ should handle script test without cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 9 CHECKMULTISIGVERIF (OK)
    ✓ should handle script test with cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 10 CHECKMULTISIG (OK)
    ✓ should handle script test without cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 10 CHECKMULTISIG (OK)
    ✓ should handle script test with cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 11 CHECKMULT (OK)
    ✓ should handle script test without cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 11 CHECKMULT (OK)
    ✓ should handle script test with cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 12 CHECK (OK)
    ✓ should handle script test without cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 12 CHECK (OK)
    ✓ should handle script test with cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 13 C (OK)
    ✓ should handle script test without cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 13 C (OK)
    ✓ should handle script test with cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n'  (OK)
    ✓ should handle script test without cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n'  (OK)
    ✓ should handle script test with cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n'  (OK)
    ✓ should handle script test without cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n'  (OK)
    ✓ should handle script test with cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n'  (OK)
    ✓ should handle script test without cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n'  (OK)
    ✓ should handle script test with cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n'  (OK)
    ✓ should handle script test without cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n'  (OK)
    ✓ should handle script test with cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n'  (OK)
    ✓ should handle script test without cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n'  (OK)
    ✓ should handle script test with cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n'  (OK)
    ✓ should handle script test without cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n'  (OK)
    ✓ should handle script test with cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n'  (OK)
    ✓ should handle script test without cache:0 0 'a' 'b' 'c' 'd' 'e' 'f' 'g' 'h' 'i' 'j' 'k' 'l' 'm' 'n'  (OK)
    ✓ should handle script test with cache:nOpCount is incremented by the number of keys evaluated in addition to the usual one op per op. In this case we have zero keys, so we can execute 201 CHECKMULTISIGS (OK)
    ✓ should handle script test without cache:nOpCount is incremented by the number of keys evaluated in addition to the usual one op per op. In this case we have zero keys, so we can execute 201 CHECKMULTISIGS (OK)
    ✓ should handle script test with cache:0 0 0 CHECKMULTISIGVERIFY 0 0 0 CHECKMULTISIGVERIFY 0 0 0 CH (OK)
    ✓ should handle script test without cache:0 0 0 CHECKMULTISIGVERIFY 0 0 0 CHECKMULTISIGVERIFY 0 0 0 CH (OK)
    ✓ should handle script test with cache:Even though there are no signatures being checked nOpCount is incremented by the number of keys. (OK)
    ✓ should handle script test without cache:Even though there are no signatures being checked nOpCount is incremented by the number of keys. (OK)
    ✓ should handle script test with cache:NOP NOP NOP NOP NOP NOP NOP NOP NOP NOP NOP NOP 0 0 'a' 'b'  (OK)
    ✓ should handle script test without cache:NOP NOP NOP NOP NOP NOP NOP NOP NOP NOP NOP NOP 0 0 'a' 'b'  (OK)
    ✓ should handle script test with cache:Very basic P2SH (OK)
    ✓ should handle script test without cache:Very basic P2SH (OK)
    ✓ should handle script test with cache:HASH160 0x14 0xda1745e9b549bd0bfa1a569971c77eba30cd5a4b EQUA (OK)
    ✓ should handle script test without cache:HASH160 0x14 0xda1745e9b549bd0bfa1a569971c77eba30cd5a4b EQUA (OK)
    ✓ should handle script test with cache:Basic PUSH signedness check (OK)
    ✓ should handle script test without cache:Basic PUSH signedness check (OK)
    ✓ should handle script test with cache:Basic PUSHDATA1 signedness check (OK)
    ✓ should handle script test without cache:Basic PUSHDATA1 signedness check (OK)
    ✓ should handle script test with cache:PUSHDATA1 of 75 bytes equals direct push of it (OK)
    ✓ should handle script test without cache:PUSHDATA1 of 75 bytes equals direct push of it (OK)
    ✓ should handle script test with cache:PUSHDATA2 of 255 bytes equals PUSHDATA1 of it (OK)
    ✓ should handle script test without cache:PUSHDATA2 of 255 bytes equals PUSHDATA1 of it (OK)
    ✓ should handle script test with cache:Basic OP_0 execution (OK)
    ✓ should handle script test without cache:Basic OP_0 execution (OK)
    ✓ should handle script test with cache:OP1_NEGATE pushes 0x81 (OK)
    ✓ should handle script test without cache:OP1_NEGATE pushes 0x81 (OK)
    ✓ should handle script test with cache:OP_1  pushes 0x01 (OK)
    ✓ should handle script test without cache:OP_1  pushes 0x01 (OK)
    ✓ should handle script test with cache:OP_2  pushes 0x02 (OK)
    ✓ should handle script test without cache:OP_2  pushes 0x02 (OK)
    ✓ should handle script test with cache:OP_3  pushes 0x03 (OK)
    ✓ should handle script test without cache:OP_3  pushes 0x03 (OK)
    ✓ should handle script test with cache:OP_4  pushes 0x04 (OK)
    ✓ should handle script test without cache:OP_4  pushes 0x04 (OK)
    ✓ should handle script test with cache:OP_5  pushes 0x05 (OK)
    ✓ should handle script test without cache:OP_5  pushes 0x05 (OK)
    ✓ should handle script test with cache:OP_6  pushes 0x06 (OK)
    ✓ should handle script test without cache:OP_6  pushes 0x06 (OK)
    ✓ should handle script test with cache:OP_7  pushes 0x07 (OK)
    ✓ should handle script test without cache:OP_7  pushes 0x07 (OK)
    ✓ should handle script test with cache:OP_8  pushes 0x08 (OK)
    ✓ should handle script test without cache:OP_8  pushes 0x08 (OK)
    ✓ should handle script test with cache:OP_9  pushes 0x09 (OK)
    ✓ should handle script test without cache:OP_9  pushes 0x09 (OK)
    ✓ should handle script test with cache:OP_10 pushes 0x0a (OK)
    ✓ should handle script test without cache:OP_10 pushes 0x0a (OK)
    ✓ should handle script test with cache:OP_11 pushes 0x0b (OK)
    ✓ should handle script test without cache:OP_11 pushes 0x0b (OK)
    ✓ should handle script test with cache:OP_12 pushes 0x0c (OK)
    ✓ should handle script test without cache:OP_12 pushes 0x0c (OK)
    ✓ should handle script test with cache:OP_13 pushes 0x0d (OK)
    ✓ should handle script test without cache:OP_13 pushes 0x0d (OK)
    ✓ should handle script test with cache:OP_14 pushes 0x0e (OK)
    ✓ should handle script test without cache:OP_14 pushes 0x0e (OK)
    ✓ should handle script test with cache:OP_15 pushes 0x0f (OK)
    ✓ should handle script test without cache:OP_15 pushes 0x0f (OK)
    ✓ should handle script test with cache:OP_16 pushes 0x10 (OK)
    ✓ should handle script test without cache:OP_16 pushes 0x10 (OK)
    ✓ should handle script test with cache:0x8000 equals 128 (OK)
    ✓ should handle script test without cache:0x8000 equals 128 (OK)
    ✓ should handle script test with cache:0x00 numequals 0 (OK)
    ✓ should handle script test without cache:0x00 numequals 0 (OK)
    ✓ should handle script test with cache:0x80 (negative zero) numequals 0 (OK)
    ✓ should handle script test without cache:0x80 (negative zero) numequals 0 (OK)
    ✓ should handle script test with cache:0x0080 numequals 0 (OK)
    ✓ should handle script test without cache:0x0080 numequals 0 (OK)
    ✓ should handle script test with cache:0x0500 numequals 5 (OK)
    ✓ should handle script test without cache:0x0500 numequals 5 (OK)
    ✓ should handle script test with cache:0x02 0xffff NUMEQUAL (OK)
    ✓ should handle script test without cache:0x02 0xffff NUMEQUAL (OK)
    ✓ should handle script test with cache:0x02 0xff7f NUMEQUAL (OK)
    ✓ should handle script test without cache:0x02 0xff7f NUMEQUAL (OK)
    ✓ should handle script test with cache:0x03 0xffffff NUMEQUAL (OK)
    ✓ should handle script test without cache:0x03 0xffffff NUMEQUAL (OK)
    ✓ should handle script test with cache:0x03 0xffff7f NUMEQUAL (OK)
    ✓ should handle script test without cache:0x03 0xffff7f NUMEQUAL (OK)
    ✓ should handle script test with cache:non-minimal PUSHDATA1 ignored (OK)
    ✓ should handle script test without cache:non-minimal PUSHDATA1 ignored (OK)
    ✓ should handle script test with cache:non-minimal PUSHDATA2 ignored (OK)
    ✓ should handle script test without cache:non-minimal PUSHDATA2 ignored (OK)
    ✓ should handle script test with cache:non-minimal PUSHDATA4 ignored (OK)
    ✓ should handle script test without cache:non-minimal PUSHDATA4 ignored (OK)
    ✓ should handle script test with cache:1NEGATE equiv (OK)
    ✓ should handle script test without cache:1NEGATE equiv (OK)
    ✓ should handle script test with cache:OP_1  equiv (OK)
    ✓ should handle script test without cache:OP_1  equiv (OK)
    ✓ should handle script test with cache:OP_2  equiv (OK)
    ✓ should handle script test without cache:OP_2  equiv (OK)
    ✓ should handle script test with cache:OP_3  equiv (OK)
    ✓ should handle script test without cache:OP_3  equiv (OK)
    ✓ should handle script test with cache:OP_4  equiv (OK)
    ✓ should handle script test without cache:OP_4  equiv (OK)
    ✓ should handle script test with cache:OP_5  equiv (OK)
    ✓ should handle script test without cache:OP_5  equiv (OK)
    ✓ should handle script test with cache:OP_6  equiv (OK)
    ✓ should handle script test without cache:OP_6  equiv (OK)
    ✓ should handle script test with cache:OP_7  equiv (OK)
    ✓ should handle script test without cache:OP_7  equiv (OK)
    ✓ should handle script test with cache:OP_8  equiv (OK)
    ✓ should handle script test without cache:OP_8  equiv (OK)
    ✓ should handle script test with cache:OP_9  equiv (OK)
    ✓ should handle script test without cache:OP_9  equiv (OK)
    ✓ should handle script test with cache:OP_10 equiv (OK)
    ✓ should handle script test without cache:OP_10 equiv (OK)
    ✓ should handle script test with cache:OP_11 equiv (OK)
    ✓ should handle script test without cache:OP_11 equiv (OK)
    ✓ should handle script test with cache:OP_12 equiv (OK)
    ✓ should handle script test without cache:OP_12 equiv (OK)
    ✓ should handle script test with cache:OP_13 equiv (OK)
    ✓ should handle script test without cache:OP_13 equiv (OK)
    ✓ should handle script test with cache:OP_14 equiv (OK)
    ✓ should handle script test without cache:OP_14 equiv (OK)
    ✓ should handle script test with cache:OP_15 equiv (OK)
    ✓ should handle script test without cache:OP_15 equiv (OK)
    ✓ should handle script test with cache:OP_16 equiv (OK)
    ✓ should handle script test without cache:OP_16 equiv (OK)
    ✓ should handle script test with cache:1 (OK)
    ✓ should handle script test without cache:1 (OK)
    ✓ should handle script test with cache:1 (OK)
    ✓ should handle script test without cache:1 (OK)
    ✓ should handle script test with cache:1 (OK)
    ✓ should handle script test without cache:1 (OK)
    ✓ should handle script test with cache:1 (OK)
    ✓ should handle script test without cache:1 (OK)
    ✓ should handle script test with cache:1 (OK)
    ✓ should handle script test without cache:1 (OK)
    ✓ should handle script test with cache:1 (OK)
    ✓ should handle script test without cache:1 (OK)
    ✓ should handle script test with cache:1 (OK)
    ✓ should handle script test without cache:1 (OK)
    ✓ should handle script test with cache:1 (OK)
    ✓ should handle script test without cache:1 (OK)
    ✓ should handle script test with cache:1 (OK)
    ✓ should handle script test without cache:1 (OK)
    ✓ should handle script test with cache:1 (OK)
    ✓ should handle script test without cache:1 (OK)
    ✓ should handle script test with cache:1 (OK)
    ✓ should handle script test without cache:1 (OK)
    ✓ should handle script test with cache:1 (OK)
    ✓ should handle script test without cache:1 (OK)
    ✓ should handle script test with cache:1 (OK)
    ✓ should handle script test without cache:1 (OK)
    ✓ should handle script test with cache:1 (OK)
    ✓ should handle script test without cache:1 (OK)
    ✓ should handle script test with cache:1 (OK)
    ✓ should handle script test without cache:1 (OK)
    ✓ should handle script test with cache:1 (OK)
    ✓ should handle script test without cache:1 (OK)
    ✓ should handle script test with cache:1 (OK)
    ✓ should handle script test without cache:1 (OK)
    ✓ should handle script test with cache:1 (OK)
    ✓ should handle script test without cache:1 (OK)
    ✓ should handle script test with cache:1 (OK)
    ✓ should handle script test without cache:1 (OK)
    ✓ should handle script test with cache:PICK DROP (OK)
    ✓ should handle script test without cache:PICK DROP (OK)
    ✓ should handle script test with cache:ROLL DROP 1 (OK)
    ✓ should handle script test without cache:ROLL DROP 1 (OK)
    ✓ should handle script test with cache:1ADD DROP 1 (OK)
    ✓ should handle script test without cache:1ADD DROP 1 (OK)
    ✓ should handle script test with cache:1SUB DROP 1 (OK)
    ✓ should handle script test without cache:1SUB DROP 1 (OK)
    ✓ should handle script test with cache:NEGATE DROP 1 (OK)
    ✓ should handle script test without cache:NEGATE DROP 1 (OK)
    ✓ should handle script test with cache:ABS DROP 1 (OK)
    ✓ should handle script test without cache:ABS DROP 1 (OK)
    ✓ should handle script test with cache:NOT DROP 1 (OK)
    ✓ should handle script test without cache:NOT DROP 1 (OK)
    ✓ should handle script test with cache:0NOTEQUAL DROP 1 (OK)
    ✓ should handle script test without cache:0NOTEQUAL DROP 1 (OK)
    ✓ should handle script test with cache:ADD DROP 1 (OK)
    ✓ should handle script test without cache:ADD DROP 1 (OK)
    ✓ should handle script test with cache:ADD DROP 1 (OK)
    ✓ should handle script test without cache:ADD DROP 1 (OK)
    ✓ should handle script test with cache:SUB DROP 1 (OK)
    ✓ should handle script test without cache:SUB DROP 1 (OK)
    ✓ should handle script test with cache:SUB DROP 1 (OK)
    ✓ should handle script test without cache:SUB DROP 1 (OK)
    ✓ should handle script test with cache:BOOLAND DROP 1 (OK)
    ✓ should handle script test without cache:BOOLAND DROP 1 (OK)
    ✓ should handle script test with cache:BOOLAND DROP 1 (OK)
    ✓ should handle script test without cache:BOOLAND DROP 1 (OK)
    ✓ should handle script test with cache:BOOLOR DROP 1 (OK)
    ✓ should handle script test without cache:BOOLOR DROP 1 (OK)
    ✓ should handle script test with cache:BOOLOR DROP 1 (OK)
    ✓ should handle script test without cache:BOOLOR DROP 1 (OK)
    ✓ should handle script test with cache:NUMEQUAL DROP 1 (OK)
    ✓ should handle script test without cache:NUMEQUAL DROP 1 (OK)
    ✓ should handle script test with cache:NUMEQUAL DROP 1 (OK)
    ✓ should handle script test without cache:NUMEQUAL DROP 1 (OK)
    ✓ should handle script test with cache:NUMEQUALVERIFY 1 (OK)
    ✓ should handle script test without cache:NUMEQUALVERIFY 1 (OK)
    ✓ should handle script test with cache:NUMEQUALVERIFY 1 (OK)
    ✓ should handle script test without cache:NUMEQUALVERIFY 1 (OK)
    ✓ should handle script test with cache:NUMNOTEQUAL DROP 1 (OK)
    ✓ should handle script test without cache:NUMNOTEQUAL DROP 1 (OK)
    ✓ should handle script test with cache:NUMNOTEQUAL DROP 1 (OK)
    ✓ should handle script test without cache:NUMNOTEQUAL DROP 1 (OK)
    ✓ should handle script test with cache:LESSTHAN DROP 1 (OK)
    ✓ should handle script test without cache:LESSTHAN DROP 1 (OK)
    ✓ should handle script test with cache:LESSTHAN DROP 1 (OK)
    ✓ should handle script test without cache:LESSTHAN DROP 1 (OK)
    ✓ should handle script test with cache:GREATERTHAN DROP 1 (OK)
    ✓ should handle script test without cache:GREATERTHAN DROP 1 (OK)
    ✓ should handle script test with cache:GREATERTHAN DROP 1 (OK)
    ✓ should handle script test without cache:GREATERTHAN DROP 1 (OK)
    ✓ should handle script test with cache:LESSTHANOREQUAL DROP 1 (OK)
    ✓ should handle script test without cache:LESSTHANOREQUAL DROP 1 (OK)
    ✓ should handle script test with cache:LESSTHANOREQUAL DROP 1 (OK)
    ✓ should handle script test without cache:LESSTHANOREQUAL DROP 1 (OK)
    ✓ should handle script test with cache:GREATERTHANOREQUAL DROP 1 (OK)
    ✓ should handle script test without cache:GREATERTHANOREQUAL DROP 1 (OK)
    ✓ should handle script test with cache:GREATERTHANOREQUAL DROP 1 (OK)
    ✓ should handle script test without cache:GREATERTHANOREQUAL DROP 1 (OK)
    ✓ should handle script test with cache:MIN DROP 1 (OK)
    ✓ should handle script test without cache:MIN DROP 1 (OK)
    ✓ should handle script test with cache:MIN DROP 1 (OK)
    ✓ should handle script test without cache:MIN DROP 1 (OK)
    ✓ should handle script test with cache:MAX DROP 1 (OK)
    ✓ should handle script test without cache:MAX DROP 1 (OK)
    ✓ should handle script test with cache:MAX DROP 1 (OK)
    ✓ should handle script test without cache:MAX DROP 1 (OK)
    ✓ should handle script test with cache:WITHIN DROP 1 (OK)
    ✓ should handle script test without cache:WITHIN DROP 1 (OK)
    ✓ should handle script test with cache:WITHIN DROP 1 (OK)
    ✓ should handle script test without cache:WITHIN DROP 1 (OK)
    ✓ should handle script test with cache:WITHIN DROP 1 (OK)
    ✓ should handle script test without cache:WITHIN DROP 1 (OK)
    ✓ should handle script test with cache:CHECKMULTISIG DROP 1 (OK)
    ✓ should handle script test without cache:CHECKMULTISIG DROP 1 (OK)
    ✓ should handle script test with cache:CHECKMULTISIG DROP 1 (OK)
    ✓ should handle script test without cache:CHECKMULTISIG DROP 1 (OK)
    ✓ should handle script test with cache:CHECKMULTISIG DROP 1 (OK)
    ✓ should handle script test without cache:CHECKMULTISIG DROP 1 (OK)
    ✓ should handle script test with cache:CHECKMULTISIGVERIFY 1 (OK)
    ✓ should handle script test without cache:CHECKMULTISIGVERIFY 1 (OK)
    ✓ should handle script test with cache:CHECKMULTISIGVERIFY 1 (OK)
    ✓ should handle script test without cache:CHECKMULTISIGVERIFY 1 (OK)
    ✓ should handle script test with cache:0x21 0x02865c40293a680cb9c020e7b1e106d8c1916d3cef99aa431a56d (OK)
    ✓ should handle script test without cache:0x21 0x02865c40293a680cb9c020e7b1e106d8c1916d3cef99aa431a56d (OK)
    ✓ should handle script test with cache:1 0x21 0x02865c40293a680cb9c020e7b1e106d8c1916d3cef99aa431a5 (OK)
    ✓ should handle script test without cache:1 0x21 0x02865c40293a680cb9c020e7b1e106d8c1916d3cef99aa431a5 (OK)
    ✓ should handle script test with cache:2-of-2 CHECKMULTISIG NOT with the second pubkey invalid, and both signatures validly encoded. Valid pubkey fails, and CHECKMULTISIG exits early, prior to evaluation of second invalid pubkey. (OK)
    ✓ should handle script test without cache:2-of-2 CHECKMULTISIG NOT with the second pubkey invalid, and both signatures validly encoded. Valid pubkey fails, and CHECKMULTISIG exits early, prior to evaluation of second invalid pubkey. (OK)
    ✓ should handle script test with cache:2-of-2 CHECKMULTISIG NOT with both pubkeys valid, but second signature invalid. Valid pubkey fails, and CHECKMULTISIG exits early, prior to evaluation of second invalid signature. (OK)
    ✓ should handle script test without cache:2-of-2 CHECKMULTISIG NOT with both pubkeys valid, but second signature invalid. Valid pubkey fails, and CHECKMULTISIG exits early, prior to evaluation of second invalid signature. (OK)
    ✓ should handle script test with cache:Overly long signature is correctly encoded (OK)
    ✓ should handle script test without cache:Overly long signature is correctly encoded (OK)
    ✓ should handle script test with cache:Missing S is correctly encoded (OK)
    ✓ should handle script test without cache:Missing S is correctly encoded (OK)
    ✓ should handle script test with cache:S with invalid S length is correctly encoded (OK)
    ✓ should handle script test without cache:S with invalid S length is correctly encoded (OK)
    ✓ should handle script test with cache:Non-integer R is correctly encoded (OK)
    ✓ should handle script test without cache:Non-integer R is correctly encoded (OK)
    ✓ should handle script test with cache:Non-integer S is correctly encoded (OK)
    ✓ should handle script test without cache:Non-integer S is correctly encoded (OK)
    ✓ should handle script test with cache:Zero-length R is correctly encoded (OK)
    ✓ should handle script test without cache:Zero-length R is correctly encoded (OK)
    ✓ should handle script test with cache:Zero-length S is correctly encoded for DERSIG (OK)
    ✓ should handle script test without cache:Zero-length S is correctly encoded for DERSIG (OK)
    ✓ should handle script test with cache:Negative S is correctly encoded (OK)
    ✓ should handle script test without cache:Negative S is correctly encoded (OK)
    ✓ should handle script test with cache:CSV passes if stack top bit 1 << 31 is set (OK)
    ✓ should handle script test without cache:CSV passes if stack top bit 1 << 31 is set (OK)
    ✓ should handle script test with cache:Test the test: we should have an empty stack after scriptSig evaluation (EVAL_FALSE)
    ✓ should handle script test without cache:Test the test: we should have an empty stack after scriptSig evaluation (EVAL_FALSE)
    ✓ should handle script test with cache:and multiple spaces should not change that. (EVAL_FALSE)
    ✓ should handle script test without cache:and multiple spaces should not change that. (EVAL_FALSE)
    ✓ should handle script test with cache:DEPTH (EVAL_FALSE)
    ✓ should handle script test without cache:DEPTH (EVAL_FALSE)
    ✓ should handle script test with cache:DEPTH (EVAL_FALSE)
    ✓ should handle script test without cache:DEPTH (EVAL_FALSE)
    ✓ should handle script test with cache: (EVAL_FALSE)
    ✓ should handle script test without cache: (EVAL_FALSE)
    ✓ should handle script test with cache:NOP (EVAL_FALSE)
    ✓ should handle script test without cache:NOP (EVAL_FALSE)
    ✓ should handle script test with cache:NOP DEPTH (EVAL_FALSE)
    ✓ should handle script test without cache:NOP DEPTH (EVAL_FALSE)
    ✓ should handle script test with cache: (EVAL_FALSE)
    ✓ should handle script test without cache: (EVAL_FALSE)
    ✓ should handle script test with cache:DEPTH (EVAL_FALSE)
    ✓ should handle script test without cache:DEPTH (EVAL_FALSE)
    ✓ should handle script test with cache:NOP (EVAL_FALSE)
    ✓ should handle script test without cache:NOP (EVAL_FALSE)
    ✓ should handle script test with cache:NOP DEPTH (EVAL_FALSE)
    ✓ should handle script test without cache:NOP DEPTH (EVAL_FALSE)
    ✓ should handle script test with cache: (EVAL_FALSE)
    ✓ should handle script test without cache: (EVAL_FALSE)
    ✓ should handle script test with cache:PUSHDATA1 with not enough bytes (BAD_OPCODE)
    ✓ should handle script test without cache:PUSHDATA1 with not enough bytes (BAD_OPCODE)
    ✓ should handle script test with cache:PUSHDATA2 with not enough bytes (BAD_OPCODE)
    ✓ should handle script test without cache:PUSHDATA2 with not enough bytes (BAD_OPCODE)
    ✓ should handle script test with cache:PUSHDATA4 with not enough bytes (BAD_OPCODE)
    ✓ should handle script test without cache:PUSHDATA4 with not enough bytes (BAD_OPCODE)
    ✓ should handle script test with cache:0x50 is reserved (BAD_OPCODE)
    ✓ should handle script test without cache:0x50 is reserved (BAD_OPCODE)
    ✓ should handle script test with cache:0x51 through 0x60 push 1 through 16 onto stack (EVAL_FALSE)
    ✓ should handle script test without cache:0x51 through 0x60 push 1 through 16 onto stack (EVAL_FALSE)
    ✓ should handle script test with cache:NOP (EVAL_FALSE)
    ✓ should handle script test without cache:NOP (EVAL_FALSE)
    ✓ should handle script test with cache:VER non-functional (BAD_OPCODE)
    ✓ should handle script test without cache:VER non-functional (BAD_OPCODE)
    ✓ should handle script test with cache:VERIF illegal everywhere (BAD_OPCODE)
    ✓ should handle script test without cache:VERIF illegal everywhere (BAD_OPCODE)
    ✓ should handle script test with cache:VERIF illegal everywhere (BAD_OPCODE)
    ✓ should handle script test without cache:VERIF illegal everywhere (BAD_OPCODE)
    ✓ should handle script test with cache:VERNOTIF illegal everywhere (BAD_OPCODE)
    ✓ should handle script test without cache:VERNOTIF illegal everywhere (BAD_OPCODE)
    ✓ should handle script test with cache:VERNOTIF illegal everywhere (BAD_OPCODE)
    ✓ should handle script test without cache:VERNOTIF illegal everywhere (BAD_OPCODE)
    ✓ should handle script test with cache:IF/ENDIF can't span scriptSig/scriptPubKey (UNBALANCED_CONDITIONAL)
    ✓ should handle script test without cache:IF/ENDIF can't span scriptSig/scriptPubKey (UNBALANCED_CONDITIONAL)
    ✓ should handle script test with cache:1 ENDIF (UNBALANCED_CONDITIONAL)
    ✓ should handle script test without cache:1 ENDIF (UNBALANCED_CONDITIONAL)
    ✓ should handle script test with cache:1 (UNBALANCED_CONDITIONAL)
    ✓ should handle script test without cache:1 (UNBALANCED_CONDITIONAL)
    ✓ should handle script test with cache:123 (UNBALANCED_CONDITIONAL)
    ✓ should handle script test without cache:123 (UNBALANCED_CONDITIONAL)
    ✓ should handle script test with cache:DUP IF ENDIF (EVAL_FALSE)
    ✓ should handle script test without cache:DUP IF ENDIF (EVAL_FALSE)
    ✓ should handle script test with cache:IF 1 ENDIF (EVAL_FALSE)
    ✓ should handle script test without cache:IF 1 ENDIF (EVAL_FALSE)
    ✓ should handle script test with cache:DUP IF ELSE ENDIF (EVAL_FALSE)
    ✓ should handle script test without cache:DUP IF ELSE ENDIF (EVAL_FALSE)
    ✓ should handle script test with cache:IF 1 ELSE ENDIF (EVAL_FALSE)
    ✓ should handle script test without cache:IF 1 ELSE ENDIF (EVAL_FALSE)
    ✓ should handle script test with cache:NOTIF ELSE 1 ENDIF (EVAL_FALSE)
    ✓ should handle script test without cache:NOTIF ELSE 1 ENDIF (EVAL_FALSE)
    ✓ should handle script test with cache:IF IF 1 ELSE 0 ENDIF ENDIF (EVAL_FALSE)
    ✓ should handle script test without cache:IF IF 1 ELSE 0 ENDIF ENDIF (EVAL_FALSE)
    ✓ should handle script test with cache:IF IF 1 ELSE 0 ENDIF ENDIF (EVAL_FALSE)
    ✓ should handle script test without cache:IF IF 1 ELSE 0 ENDIF ENDIF (EVAL_FALSE)
    ✓ should handle script test with cache:IF IF 1 ELSE 0 ENDIF ELSE IF 0 ELSE 1 ENDIF ENDIF (EVAL_FALSE)
    ✓ should handle script test without cache:IF IF 1 ELSE 0 ENDIF ELSE IF 0 ELSE 1 ENDIF ENDIF (EVAL_FALSE)
    ✓ should handle script test with cache:IF IF 1 ELSE 0 ENDIF ELSE IF 0 ELSE 1 ENDIF ENDIF (EVAL_FALSE)
    ✓ should handle script test without cache:IF IF 1 ELSE 0 ENDIF ELSE IF 0 ELSE 1 ENDIF ENDIF (EVAL_FALSE)
    ✓ should handle script test with cache:NOTIF IF 1 ELSE 0 ENDIF ENDIF (EVAL_FALSE)
    ✓ should handle script test without cache:NOTIF IF 1 ELSE 0 ENDIF ENDIF (EVAL_FALSE)
    ✓ should handle script test with cache:NOTIF IF 1 ELSE 0 ENDIF ENDIF (EVAL_FALSE)
    ✓ should handle script test without cache:NOTIF IF 1 ELSE 0 ENDIF ENDIF (EVAL_FALSE)
    ✓ should handle script test with cache:NOTIF IF 1 ELSE 0 ENDIF ELSE IF 0 ELSE 1 ENDIF ENDIF (EVAL_FALSE)
    ✓ should handle script test without cache:NOTIF IF 1 ELSE 0 ENDIF ELSE IF 0 ELSE 1 ENDIF ENDIF (EVAL_FALSE)
    ✓ should handle script test with cache:NOTIF IF 1 ELSE 0 ENDIF ELSE IF 0 ELSE 1 ENDIF ENDIF (EVAL_FALSE)
    ✓ should handle script test without cache:NOTIF IF 1 ELSE 0 ENDIF ELSE IF 0 ELSE 1 ENDIF ENDIF (EVAL_FALSE)
    ✓ should handle script test with cache:Multiple ELSEs (OP_RETURN)
    ✓ should handle script test without cache:Multiple ELSEs (OP_RETURN)
    ✓ should handle script test with cache:IF 1 ELSE ELSE RETURN ENDIF (OP_RETURN)
    ✓ should handle script test without cache:IF 1 ELSE ELSE RETURN ENDIF (OP_RETURN)
    ✓ should handle script test with cache:Malformed IF/ELSE/ENDIF sequence (UNBALANCED_CONDITIONAL)
    ✓ should handle script test without cache:Malformed IF/ELSE/ENDIF sequence (UNBALANCED_CONDITIONAL)
    ✓ should handle script test with cache:ELSE ENDIF (UNBALANCED_CONDITIONAL)
    ✓ should handle script test without cache:ELSE ENDIF (UNBALANCED_CONDITIONAL)
    ✓ should handle script test with cache:ENDIF ELSE (UNBALANCED_CONDITIONAL)
    ✓ should handle script test without cache:ENDIF ELSE (UNBALANCED_CONDITIONAL)
    ✓ should handle script test with cache:ENDIF ELSE IF (UNBALANCED_CONDITIONAL)
    ✓ should handle script test without cache:ENDIF ELSE IF (UNBALANCED_CONDITIONAL)
    ✓ should handle script test with cache:IF ELSE ENDIF ELSE (UNBALANCED_CONDITIONAL)
    ✓ should handle script test without cache:IF ELSE ENDIF ELSE (UNBALANCED_CONDITIONAL)
    ✓ should handle script test with cache:IF ELSE ENDIF ELSE ENDIF (UNBALANCED_CONDITIONAL)
    ✓ should handle script test without cache:IF ELSE ENDIF ELSE ENDIF (UNBALANCED_CONDITIONAL)
    ✓ should handle script test with cache:IF ENDIF ENDIF (UNBALANCED_CONDITIONAL)
    ✓ should handle script test without cache:IF ENDIF ENDIF (UNBALANCED_CONDITIONAL)
    ✓ should handle script test with cache:IF ELSE ELSE ENDIF ENDIF (UNBALANCED_CONDITIONAL)
    ✓ should handle script test without cache:IF ELSE ELSE ENDIF ENDIF (UNBALANCED_CONDITIONAL)
    ✓ should handle script test with cache:RETURN (OP_RETURN)
    ✓ should handle script test without cache:RETURN (OP_RETURN)
    ✓ should handle script test with cache:DUP IF RETURN ENDIF (OP_RETURN)
    ✓ should handle script test without cache:DUP IF RETURN ENDIF (OP_RETURN)
    ✓ should handle script test with cache:canonical prunable txout format (OP_RETURN)
    ✓ should handle script test without cache:canonical prunable txout format (OP_RETURN)
    ✓ should handle script test with cache:still prunable because IF/ENDIF can't span scriptSig/scriptPubKey (UNBALANCED_CONDITIONAL)
    ✓ should handle script test without cache:still prunable because IF/ENDIF can't span scriptSig/scriptPubKey (UNBALANCED_CONDITIONAL)
    ✓ should handle script test with cache:VERIFY 1 (VERIFY)
    ✓ should handle script test without cache:VERIFY 1 (VERIFY)
    ✓ should handle script test with cache:VERIFY (EVAL_FALSE)
    ✓ should handle script test without cache:VERIFY (EVAL_FALSE)
    ✓ should handle script test with cache:VERIFY 0 (EVAL_FALSE)
    ✓ should handle script test without cache:VERIFY 0 (EVAL_FALSE)
    ✓ should handle script test with cache:alt stack not shared between sig/pubkey (INVALID_ALTSTACK_OPERATION)
    ✓ should handle script test without cache:alt stack not shared between sig/pubkey (INVALID_ALTSTACK_OPERATION)
    ✓ should handle script test with cache:DEPTH 0 EQUAL (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:DEPTH 0 EQUAL (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:DEPTH 0 EQUAL (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:DEPTH 0 EQUAL (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:DEPTH 0 EQUAL (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:DEPTH 0 EQUAL (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:DUP 1 ADD 2 EQUALVERIFY 0 EQUAL (EVAL_FALSE)
    ✓ should handle script test without cache:DUP 1 ADD 2 EQUALVERIFY 0 EQUAL (EVAL_FALSE)
    ✓ should handle script test with cache:NIP (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:NIP (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:1 NIP (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:1 NIP (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:1 0 NIP (EVAL_FALSE)
    ✓ should handle script test without cache:1 0 NIP (EVAL_FALSE)
    ✓ should handle script test with cache:OVER 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:OVER 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:OVER (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:OVER (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:OVER DEPTH 3 EQUALVERIFY (EVAL_FALSE)
    ✓ should handle script test without cache:OVER DEPTH 3 EQUALVERIFY (EVAL_FALSE)
    ✓ should handle script test with cache:PICK 19 EQUALVERIFY DEPTH 2 EQUAL (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:PICK 19 EQUALVERIFY DEPTH 2 EQUAL (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:0 PICK (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:0 PICK (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:-1 PICK (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:-1 PICK (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:0 PICK 20 EQUALVERIFY DEPTH 3 EQUAL (EQUALVERIFY)
    ✓ should handle script test without cache:0 PICK 20 EQUALVERIFY DEPTH 3 EQUAL (EQUALVERIFY)
    ✓ should handle script test with cache:1 PICK 21 EQUALVERIFY DEPTH 3 EQUAL (EQUALVERIFY)
    ✓ should handle script test without cache:1 PICK 21 EQUALVERIFY DEPTH 3 EQUAL (EQUALVERIFY)
    ✓ should handle script test with cache:2 PICK 22 EQUALVERIFY DEPTH 3 EQUAL (EQUALVERIFY)
    ✓ should handle script test without cache:2 PICK 22 EQUALVERIFY DEPTH 3 EQUAL (EQUALVERIFY)
    ✓ should handle script test with cache:0 ROLL (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:0 ROLL (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:-1 ROLL (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:-1 ROLL (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:0 ROLL 20 EQUALVERIFY DEPTH 2 EQUAL (EQUALVERIFY)
    ✓ should handle script test without cache:0 ROLL 20 EQUALVERIFY DEPTH 2 EQUAL (EQUALVERIFY)
    ✓ should handle script test with cache:1 ROLL 21 EQUALVERIFY DEPTH 2 EQUAL (EQUALVERIFY)
    ✓ should handle script test without cache:1 ROLL 21 EQUALVERIFY DEPTH 2 EQUAL (EQUALVERIFY)
    ✓ should handle script test with cache:2 ROLL 22 EQUALVERIFY DEPTH 2 EQUAL (EQUALVERIFY)
    ✓ should handle script test without cache:2 ROLL 22 EQUALVERIFY DEPTH 2 EQUAL (EQUALVERIFY)
    ✓ should handle script test with cache:ROT 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:ROT 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:1 ROT 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:1 ROT 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:1 2 ROT 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:1 2 ROT 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:0 1 2 ROT (EVAL_FALSE)
    ✓ should handle script test without cache:0 1 2 ROT (EVAL_FALSE)
    ✓ should handle script test with cache:SWAP 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:SWAP 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:SWAP 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:SWAP 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:SWAP 1 EQUALVERIFY (EQUALVERIFY)
    ✓ should handle script test without cache:SWAP 1 EQUALVERIFY (EQUALVERIFY)
    ✓ should handle script test with cache:TUCK 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:TUCK 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:TUCK 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:TUCK 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:TUCK DEPTH 3 EQUALVERIFY SWAP 2DROP (EVAL_FALSE)
    ✓ should handle script test without cache:TUCK DEPTH 3 EQUALVERIFY SWAP 2DROP (EVAL_FALSE)
    ✓ should handle script test with cache:2DUP 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:2DUP 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:2DUP 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:2DUP 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:3DUP 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:3DUP 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:3DUP 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:3DUP 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:3DUP 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:3DUP 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:2OVER 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:2OVER 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:2 3 2OVER 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:2 3 2OVER 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:2SWAP 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:2SWAP 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:2 3 2SWAP 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:2 3 2SWAP 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:CAT disabled (DISABLED_OPCODE)
    ✓ should handle script test without cache:CAT disabled (DISABLED_OPCODE)
    ✓ should handle script test with cache:CAT disabled (DISABLED_OPCODE)
    ✓ should handle script test without cache:CAT disabled (DISABLED_OPCODE)
    ✓ should handle script test with cache:SUBSTR disabled (DISABLED_OPCODE)
    ✓ should handle script test without cache:SUBSTR disabled (DISABLED_OPCODE)
    ✓ should handle script test with cache:SUBSTR disabled (DISABLED_OPCODE)
    ✓ should handle script test without cache:SUBSTR disabled (DISABLED_OPCODE)
    ✓ should handle script test with cache:LEFT disabled (DISABLED_OPCODE)
    ✓ should handle script test without cache:LEFT disabled (DISABLED_OPCODE)
    ✓ should handle script test with cache:RIGHT disabled (DISABLED_OPCODE)
    ✓ should handle script test without cache:RIGHT disabled (DISABLED_OPCODE)
    ✓ should handle script test with cache:SIZE 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:SIZE 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:INVERT disabled (DISABLED_OPCODE)
    ✓ should handle script test without cache:INVERT disabled (DISABLED_OPCODE)
    ✓ should handle script test with cache:AND disabled (DISABLED_OPCODE)
    ✓ should handle script test without cache:AND disabled (DISABLED_OPCODE)
    ✓ should handle script test with cache:OR disabled (DISABLED_OPCODE)
    ✓ should handle script test without cache:OR disabled (DISABLED_OPCODE)
    ✓ should handle script test with cache:XOR disabled (DISABLED_OPCODE)
    ✓ should handle script test without cache:XOR disabled (DISABLED_OPCODE)
    ✓ should handle script test with cache:2MUL disabled (DISABLED_OPCODE)
    ✓ should handle script test without cache:2MUL disabled (DISABLED_OPCODE)
    ✓ should handle script test with cache:2DIV disabled (DISABLED_OPCODE)
    ✓ should handle script test without cache:2DIV disabled (DISABLED_OPCODE)
    ✓ should handle script test with cache:MUL disabled (DISABLED_OPCODE)
    ✓ should handle script test without cache:MUL disabled (DISABLED_OPCODE)
    ✓ should handle script test with cache:DIV disabled (DISABLED_OPCODE)
    ✓ should handle script test without cache:DIV disabled (DISABLED_OPCODE)
    ✓ should handle script test with cache:MOD disabled (DISABLED_OPCODE)
    ✓ should handle script test without cache:MOD disabled (DISABLED_OPCODE)
    ✓ should handle script test with cache:LSHIFT disabled (DISABLED_OPCODE)
    ✓ should handle script test without cache:LSHIFT disabled (DISABLED_OPCODE)
    ✓ should handle script test with cache:RSHIFT disabled (DISABLED_OPCODE)
    ✓ should handle script test without cache:RSHIFT disabled (DISABLED_OPCODE)
    ✓ should handle script test with cache:EQUAL must error when there are no stack items (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:EQUAL must error when there are no stack items (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:EQUAL must error when there are not 2 stack items (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:EQUAL must error when there are not 2 stack items (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:EQUAL (EVAL_FALSE)
    ✓ should handle script test without cache:EQUAL (EVAL_FALSE)
    ✓ should handle script test with cache:0 EQUAL (EVAL_FALSE)
    ✓ should handle script test without cache:0 EQUAL (EVAL_FALSE)
    ✓ should handle script test with cache:11 EQUAL (EVAL_FALSE)
    ✓ should handle script test without cache:11 EQUAL (EVAL_FALSE)
    ✓ should handle script test with cache:arithmetic operands must be in range [-2^31...2^31]  (UNKNOWN_ERROR)
    ✓ should handle script test without cache:arithmetic operands must be in range [-2^31...2^31]  (UNKNOWN_ERROR)
    ✓ should handle script test with cache:arithmetic operands must be in range [-2^31...2^31]  (UNKNOWN_ERROR)
    ✓ should handle script test without cache:arithmetic operands must be in range [-2^31...2^31]  (UNKNOWN_ERROR)
    ✓ should handle script test with cache:NUMEQUAL must be in numeric range (UNKNOWN_ERROR)
    ✓ should handle script test without cache:NUMEQUAL must be in numeric range (UNKNOWN_ERROR)
    ✓ should handle script test with cache:NOT is an arithmetic operand (UNKNOWN_ERROR)
    ✓ should handle script test without cache:NOT is an arithmetic operand (UNKNOWN_ERROR)
    ✓ should handle script test with cache:disabled (DISABLED_OPCODE)
    ✓ should handle script test without cache:disabled (DISABLED_OPCODE)
    ✓ should handle script test with cache:disabled (DISABLED_OPCODE)
    ✓ should handle script test without cache:disabled (DISABLED_OPCODE)
    ✓ should handle script test with cache:disabled (DISABLED_OPCODE)
    ✓ should handle script test without cache:disabled (DISABLED_OPCODE)
    ✓ should handle script test with cache:disabled (DISABLED_OPCODE)
    ✓ should handle script test without cache:disabled (DISABLED_OPCODE)
    ✓ should handle script test with cache:disabled (DISABLED_OPCODE)
    ✓ should handle script test without cache:disabled (DISABLED_OPCODE)
    ✓ should handle script test with cache:disabled (DISABLED_OPCODE)
    ✓ should handle script test without cache:disabled (DISABLED_OPCODE)
    ✓ should handle script test with cache:disabled (DISABLED_OPCODE)
    ✓ should handle script test without cache:disabled (DISABLED_OPCODE)
    ✓ should handle script test with cache:NOP1 CHECKLOCKTIMEVERIFY CHECKSEQUENCEVERIFY NOP4 NOP5 NOP6  (EVAL_FALSE)
    ✓ should handle script test without cache:NOP1 CHECKLOCKTIMEVERIFY CHECKSEQUENCEVERIFY NOP4 NOP5 NOP6  (EVAL_FALSE)
    ✓ should handle script test with cache:'NOP_1_to_11' EQUAL (EVAL_FALSE)
    ✓ should handle script test without cache:'NOP_1_to_11' EQUAL (EVAL_FALSE)
    ✓ should handle script test with cache:NOP1 (DISCOURAGE_UPGRADABLE_NOPS)
    ✓ should handle script test without cache:NOP1 (DISCOURAGE_UPGRADABLE_NOPS)
    ✓ should handle script test with cache:CHECKLOCKTIMEVERIFY (DISCOURAGE_UPGRADABLE_NOPS)
    ✓ should handle script test without cache:CHECKLOCKTIMEVERIFY (DISCOURAGE_UPGRADABLE_NOPS)
    ✓ should handle script test with cache:CHECKSEQUENCEVERIFY (DISCOURAGE_UPGRADABLE_NOPS)
    ✓ should handle script test without cache:CHECKSEQUENCEVERIFY (DISCOURAGE_UPGRADABLE_NOPS)
    ✓ should handle script test with cache:NOP4 (DISCOURAGE_UPGRADABLE_NOPS)
    ✓ should handle script test without cache:NOP4 (DISCOURAGE_UPGRADABLE_NOPS)
    ✓ should handle script test with cache:NOP5 (DISCOURAGE_UPGRADABLE_NOPS)
    ✓ should handle script test without cache:NOP5 (DISCOURAGE_UPGRADABLE_NOPS)
    ✓ should handle script test with cache:NOP6 (DISCOURAGE_UPGRADABLE_NOPS)
    ✓ should handle script test without cache:NOP6 (DISCOURAGE_UPGRADABLE_NOPS)
    ✓ should handle script test with cache:NOP7 (DISCOURAGE_UPGRADABLE_NOPS)
    ✓ should handle script test without cache:NOP7 (DISCOURAGE_UPGRADABLE_NOPS)
    ✓ should handle script test with cache:NOP8 (DISCOURAGE_UPGRADABLE_NOPS)
    ✓ should handle script test without cache:NOP8 (DISCOURAGE_UPGRADABLE_NOPS)
    ✓ should handle script test with cache:NOP9 (DISCOURAGE_UPGRADABLE_NOPS)
    ✓ should handle script test without cache:NOP9 (DISCOURAGE_UPGRADABLE_NOPS)
    ✓ should handle script test with cache:NOP10 (DISCOURAGE_UPGRADABLE_NOPS)
    ✓ should handle script test without cache:NOP10 (DISCOURAGE_UPGRADABLE_NOPS)
    ✓ should handle script test with cache:Discouraged NOP10 in scriptSig (DISCOURAGE_UPGRADABLE_NOPS)
    ✓ should handle script test without cache:Discouraged NOP10 in scriptSig (DISCOURAGE_UPGRADABLE_NOPS)
    ✓ should handle script test with cache:Discouraged NOP10 in redeemScript (DISCOURAGE_UPGRADABLE_NOPS)
    ✓ should handle script test without cache:Discouraged NOP10 in redeemScript (DISCOURAGE_UPGRADABLE_NOPS)
    ✓ should handle script test with cache:opcode 0x50 is reserved (BAD_OPCODE)
    ✓ should handle script test without cache:opcode 0x50 is reserved (BAD_OPCODE)
    ✓ should handle script test with cache:opcodes above MAX_OPCODE invalid if executed (BAD_OPCODE)
    ✓ should handle script test without cache:opcodes above MAX_OPCODE invalid if executed (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xbb ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xbb ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xbc ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xbc ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xbd ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xbd ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xbe ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xbe ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xbf ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xbf ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xc0 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xc0 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xc1 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xc1 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xc2 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xc2 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xc3 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xc3 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xc4 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xc4 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xc5 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xc5 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xc6 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xc6 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xc7 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xc7 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xc8 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xc8 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xc9 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xc9 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xca ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xca ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xcb ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xcb ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xcc ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xcc ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xcd ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xcd ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xce ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xce ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xcf ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xcf ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xd0 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xd0 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xd1 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xd1 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xd2 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xd2 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xd3 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xd3 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xd4 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xd4 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xd5 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xd5 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xd6 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xd6 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xd7 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xd7 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xd8 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xd8 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xd9 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xd9 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xda ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xda ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xdb ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xdb ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xdc ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xdc ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xdd ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xdd ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xde ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xde ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xdf ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xdf ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xe0 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xe0 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xe1 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xe1 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xe2 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xe2 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xe3 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xe3 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xe4 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xe4 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xe5 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xe5 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xe6 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xe6 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xe7 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xe7 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xe8 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xe8 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xe9 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xe9 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xea ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xea ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xeb ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xeb ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xec ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xec ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xed ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xed ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xee ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xee ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xef ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xef ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xf0 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xf0 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xf1 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xf1 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xf2 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xf2 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xf3 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xf3 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xf4 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xf4 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xf5 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xf5 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xf6 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xf6 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xf7 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xf7 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xf8 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xf8 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xf9 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xf9 ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xfa ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xfa ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xfb ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xfb ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xfc ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xfc ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xfd ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xfd ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xfe ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xfe ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:IF 0xff ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test without cache:IF 0xff ELSE 1 ENDIF (BAD_OPCODE)
    ✓ should handle script test with cache:invalid because scriptSig and scriptPubKey are processed separately (UNBALANCED_CONDITIONAL)
    ✓ should handle script test without cache:invalid because scriptSig and scriptPubKey are processed separately (UNBALANCED_CONDITIONAL)
    ✓ should handle script test with cache:RIPEMD160 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:RIPEMD160 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:SHA1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:SHA1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:SHA256 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:SHA256 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:HASH160 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:HASH160 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:HASH256 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:HASH256 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:>520 byte push (PUSH_SIZE)
    ✓ should handle script test without cache:>520 byte push (PUSH_SIZE)
    ✓ should handle script test with cache:>520 byte push in non-executed IF branch (PUSH_SIZE)
    ✓ should handle script test without cache:>520 byte push in non-executed IF branch (PUSH_SIZE)
    ✓ should handle script test with cache:>201 opcodes executed. 0x61 is NOP (OP_COUNT)
    ✓ should handle script test without cache:>201 opcodes executed. 0x61 is NOP (OP_COUNT)
    ✓ should handle script test with cache:>201 opcodes including non-executed IF branch. 0x61 is NOP (OP_COUNT)
    ✓ should handle script test without cache:>201 opcodes including non-executed IF branch. 0x61 is NOP (OP_COUNT)
    ✓ should handle script test with cache:>1,000 stack size (0x6f is 3DUP) (STACK_SIZE)
    ✓ should handle script test without cache:>1,000 stack size (0x6f is 3DUP) (STACK_SIZE)
    ✓ should handle script test with cache:>1,000 stack+altstack size (STACK_SIZE)
    ✓ should handle script test without cache:>1,000 stack+altstack size (STACK_SIZE)
    ✓ should handle script test with cache:10,001-byte scriptPubKey (SCRIPT_SIZE)
    ✓ should handle script test without cache:10,001-byte scriptPubKey (SCRIPT_SIZE)
    ✓ should handle script test with cache:NOP10 (EVAL_FALSE)
    ✓ should handle script test without cache:NOP10 (EVAL_FALSE)
    ✓ should handle script test with cache:OP_VER is reserved (BAD_OPCODE)
    ✓ should handle script test without cache:OP_VER is reserved (BAD_OPCODE)
    ✓ should handle script test with cache:OP_VERIF is reserved (BAD_OPCODE)
    ✓ should handle script test without cache:OP_VERIF is reserved (BAD_OPCODE)
    ✓ should handle script test with cache:OP_VERNOTIF is reserved (BAD_OPCODE)
    ✓ should handle script test without cache:OP_VERNOTIF is reserved (BAD_OPCODE)
    ✓ should handle script test with cache:OP_RESERVED is reserved (BAD_OPCODE)
    ✓ should handle script test without cache:OP_RESERVED is reserved (BAD_OPCODE)
    ✓ should handle script test with cache:OP_RESERVED1 is reserved (BAD_OPCODE)
    ✓ should handle script test without cache:OP_RESERVED1 is reserved (BAD_OPCODE)
    ✓ should handle script test with cache:OP_RESERVED2 is reserved (BAD_OPCODE)
    ✓ should handle script test without cache:OP_RESERVED2 is reserved (BAD_OPCODE)
    ✓ should handle script test with cache:0xba == MAX_OPCODE + 1 (BAD_OPCODE)
    ✓ should handle script test without cache:0xba == MAX_OPCODE + 1 (BAD_OPCODE)
    ✓ should handle script test with cache:We cannot do math on 5-byte integers (UNKNOWN_ERROR)
    ✓ should handle script test without cache:We cannot do math on 5-byte integers (UNKNOWN_ERROR)
    ✓ should handle script test with cache:We cannot do math on 5-byte integers (UNKNOWN_ERROR)
    ✓ should handle script test without cache:We cannot do math on 5-byte integers (UNKNOWN_ERROR)
    ✓ should handle script test with cache:Because we use a sign bit, -2147483648 is also 5 bytes (UNKNOWN_ERROR)
    ✓ should handle script test without cache:Because we use a sign bit, -2147483648 is also 5 bytes (UNKNOWN_ERROR)
    ✓ should handle script test with cache:We cannot do math on 5-byte integers, even if the result is 4-bytes (UNKNOWN_ERROR)
    ✓ should handle script test without cache:We cannot do math on 5-byte integers, even if the result is 4-bytes (UNKNOWN_ERROR)
    ✓ should handle script test with cache:We cannot do math on 5-byte integers, even if the result is 4-bytes (UNKNOWN_ERROR)
    ✓ should handle script test without cache:We cannot do math on 5-byte integers, even if the result is 4-bytes (UNKNOWN_ERROR)
    ✓ should handle script test with cache:We cannot do BOOLOR on 5-byte integers (but we can still do IF etc) (UNKNOWN_ERROR)
    ✓ should handle script test without cache:We cannot do BOOLOR on 5-byte integers (but we can still do IF etc) (UNKNOWN_ERROR)
    ✓ should handle script test with cache:We cannot do BOOLAND on 5-byte integers (UNKNOWN_ERROR)
    ✓ should handle script test without cache:We cannot do BOOLAND on 5-byte integers (UNKNOWN_ERROR)
    ✓ should handle script test with cache:ENDIF without IF (UNBALANCED_CONDITIONAL)
    ✓ should handle script test without cache:ENDIF without IF (UNBALANCED_CONDITIONAL)
    ✓ should handle script test with cache:IF without ENDIF (UNBALANCED_CONDITIONAL)
    ✓ should handle script test without cache:IF without ENDIF (UNBALANCED_CONDITIONAL)
    ✓ should handle script test with cache:IFs don't carry over (UNBALANCED_CONDITIONAL)
    ✓ should handle script test without cache:IFs don't carry over (UNBALANCED_CONDITIONAL)
    ✓ should handle script test with cache:The following tests check the if(stack.size() < N) tests in each opcode (UNBALANCED_CONDITIONAL)
    ✓ should handle script test without cache:The following tests check the if(stack.size() < N) tests in each opcode (UNBALANCED_CONDITIONAL)
    ✓ should handle script test with cache:They are here to catch copy-and-paste errors (UNBALANCED_CONDITIONAL)
    ✓ should handle script test without cache:They are here to catch copy-and-paste errors (UNBALANCED_CONDITIONAL)
    ✓ should handle script test with cache:Most of them are duplicated elsewhere, (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:Most of them are duplicated elsewhere, (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:but, hey, more is always better, right? (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:but, hey, more is always better, right? (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:FROMALTSTACK (INVALID_ALTSTACK_OPERATION)
    ✓ should handle script test without cache:FROMALTSTACK (INVALID_ALTSTACK_OPERATION)
    ✓ should handle script test with cache:2DROP 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:2DROP 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:2DUP (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:2DUP (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:3DUP (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:3DUP (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:2OVER (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:2OVER (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:2ROT (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:2ROT (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:2SWAP (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:2SWAP (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:IFDUP 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:IFDUP 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:DROP 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:DROP 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:DUP 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:DUP 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:NIP (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:NIP (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:OVER (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:OVER (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:PICK (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:PICK (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:PICK 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:PICK 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:ROLL (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:ROLL (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:ROLL 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:ROLL 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:ROT (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:ROT (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:SWAP (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:SWAP (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:TUCK (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:TUCK (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:SIZE 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:SIZE 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:EQUAL 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:EQUAL 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:EQUALVERIFY 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:EQUALVERIFY 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:1ADD 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:1ADD 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:1SUB 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:1SUB 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:NEGATE 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:NEGATE 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:ABS 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:ABS 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:NOT 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:NOT 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:0NOTEQUAL 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:0NOTEQUAL 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:ADD (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:ADD (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:SUB (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:SUB (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:BOOLAND (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:BOOLAND (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:BOOLOR (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:BOOLOR (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:NUMEQUAL (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:NUMEQUAL (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:NUMEQUALVERIFY 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:NUMEQUALVERIFY 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:NUMNOTEQUAL (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:NUMNOTEQUAL (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:LESSTHAN (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:LESSTHAN (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:GREATERTHAN (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:GREATERTHAN (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:LESSTHANOREQUAL (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:LESSTHANOREQUAL (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:GREATERTHANOREQUAL (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:GREATERTHANOREQUAL (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:MIN (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:MIN (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:MAX (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:MAX (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:WITHIN (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:WITHIN (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:RIPEMD160 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:RIPEMD160 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:SHA1 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:SHA1 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:SHA256 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:SHA256 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:HASH160 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:HASH160 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:HASH256 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:HASH256 1 (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:CHECKSIG must error when there are no stack items (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:CHECKSIG must error when there are no stack items (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:CHECKSIG must error when there are not 2 stack items (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:CHECKSIG must error when there are not 2 stack items (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:CHECKMULTISIG must error when there are no stack items (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:CHECKMULTISIG must error when there are no stack items (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:CHECKMULTISIG must error when the specified number of pubkeys is negative (PUBKEY_COUNT)
    ✓ should handle script test without cache:CHECKMULTISIG must error when the specified number of pubkeys is negative (PUBKEY_COUNT)
    ✓ should handle script test with cache:CHECKMULTISIG must error when there are not enough pubkeys on the stack (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:CHECKMULTISIG must error when there are not enough pubkeys on the stack (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:CHECKMULTISIG must error when the specified number of signatures is negative (SIG_COUNT)
    ✓ should handle script test without cache:CHECKMULTISIG must error when the specified number of signatures is negative (SIG_COUNT)
    ✓ should handle script test with cache:CHECKMULTISIG must error when there are not enough signatures on the stack (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:CHECKMULTISIG must error when there are not enough signatures on the stack (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:CHECKMULTISIG must push false to stack when signature is invalid when NOT in strict enc mode (EVAL_FALSE)
    ✓ should handle script test without cache:CHECKMULTISIG must push false to stack when signature is invalid when NOT in strict enc mode (EVAL_FALSE)
    ✓ should handle script test with cache:202 CHECKMULTISIGS, fails due to 201 op limit (OP_COUNT)
    ✓ should handle script test without cache:202 CHECKMULTISIGS, fails due to 201 op limit (OP_COUNT)
    ✓ should handle script test with cache:0 0 0 CHECKMULTISIGVERIFY 0 0 CHECKMULTISIGVERIFY 0 0 CHECKM (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:0 0 0 CHECKMULTISIGVERIFY 0 0 CHECKMULTISIGVERIFY 0 0 CHECKM (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:Fails due to 201 script operation limit (OP_COUNT)
    ✓ should handle script test without cache:Fails due to 201 script operation limit (OP_COUNT)
    ✓ should handle script test with cache:NOP NOP NOP NOP NOP NOP NOP NOP NOP NOP NOP NOP NOP 0 0 'a'  (OP_COUNT)
    ✓ should handle script test without cache:NOP NOP NOP NOP NOP NOP NOP NOP NOP NOP NOP NOP NOP 0 0 'a'  (OP_COUNT)
    ✓ should handle script test with cache:nPubKeys > 20 (PUBKEY_COUNT)
    ✓ should handle script test without cache:nPubKeys > 20 (PUBKEY_COUNT)
    ✓ should handle script test with cache:nSigs > nPubKeys (SIG_COUNT)
    ✓ should handle script test without cache:nSigs > nPubKeys (SIG_COUNT)
    ✓ should handle script test with cache:Tests for Script.IsPushOnly() (SIG_PUSHONLY)
    ✓ should handle script test without cache:Tests for Script.IsPushOnly() (SIG_PUSHONLY)
    ✓ should handle script test with cache:HASH160 0x14 0xda1745e9b549bd0bfa1a569971c77eba30cd5a4b EQUA (SIG_PUSHONLY)
    ✓ should handle script test without cache:HASH160 0x14 0xda1745e9b549bd0bfa1a569971c77eba30cd5a4b EQUA (SIG_PUSHONLY)
    ✓ should handle script test with cache:OP_RESERVED in P2SH should fail (BAD_OPCODE)
    ✓ should handle script test without cache:OP_RESERVED in P2SH should fail (BAD_OPCODE)
    ✓ should handle script test with cache:OP_VER in P2SH should fail (BAD_OPCODE)
    ✓ should handle script test without cache:OP_VER in P2SH should fail (BAD_OPCODE)
    ✓ should handle script test with cache:Basic OP_0 execution (EVAL_FALSE)
    ✓ should handle script test without cache:Basic OP_0 execution (EVAL_FALSE)
    ✓ should handle script test with cache:Empty vector minimally represented by OP_0 (MINIMALDATA)
    ✓ should handle script test without cache:Empty vector minimally represented by OP_0 (MINIMALDATA)
    ✓ should handle script test with cache:-1 minimally represented by OP_1NEGATE (MINIMALDATA)
    ✓ should handle script test without cache:-1 minimally represented by OP_1NEGATE (MINIMALDATA)
    ✓ should handle script test with cache:1 to 16 minimally represented by OP_1 to OP_16 (MINIMALDATA)
    ✓ should handle script test without cache:1 to 16 minimally represented by OP_1 to OP_16 (MINIMALDATA)
    ✓ should handle script test with cache:DROP 1 (MINIMALDATA)
    ✓ should handle script test without cache:DROP 1 (MINIMALDATA)
    ✓ should handle script test with cache:DROP 1 (MINIMALDATA)
    ✓ should handle script test without cache:DROP 1 (MINIMALDATA)
    ✓ should handle script test with cache:DROP 1 (MINIMALDATA)
    ✓ should handle script test without cache:DROP 1 (MINIMALDATA)
    ✓ should handle script test with cache:DROP 1 (MINIMALDATA)
    ✓ should handle script test without cache:DROP 1 (MINIMALDATA)
    ✓ should handle script test with cache:DROP 1 (MINIMALDATA)
    ✓ should handle script test without cache:DROP 1 (MINIMALDATA)
    ✓ should handle script test with cache:DROP 1 (MINIMALDATA)
    ✓ should handle script test without cache:DROP 1 (MINIMALDATA)
    ✓ should handle script test with cache:DROP 1 (MINIMALDATA)
    ✓ should handle script test without cache:DROP 1 (MINIMALDATA)
    ✓ should handle script test with cache:DROP 1 (MINIMALDATA)
    ✓ should handle script test without cache:DROP 1 (MINIMALDATA)
    ✓ should handle script test with cache:DROP 1 (MINIMALDATA)
    ✓ should handle script test without cache:DROP 1 (MINIMALDATA)
    ✓ should handle script test with cache:DROP 1 (MINIMALDATA)
    ✓ should handle script test without cache:DROP 1 (MINIMALDATA)
    ✓ should handle script test with cache:DROP 1 (MINIMALDATA)
    ✓ should handle script test without cache:DROP 1 (MINIMALDATA)
    ✓ should handle script test with cache:DROP 1 (MINIMALDATA)
    ✓ should handle script test without cache:DROP 1 (MINIMALDATA)
    ✓ should handle script test with cache:DROP 1 (MINIMALDATA)
    ✓ should handle script test without cache:DROP 1 (MINIMALDATA)
    ✓ should handle script test with cache:DROP 1 (MINIMALDATA)
    ✓ should handle script test without cache:DROP 1 (MINIMALDATA)
    ✓ should handle script test with cache:DROP 1 (MINIMALDATA)
    ✓ should handle script test without cache:DROP 1 (MINIMALDATA)
    ✓ should handle script test with cache:PUSHDATA1 of 72 bytes minimally represented by direct push (MINIMALDATA)
    ✓ should handle script test without cache:PUSHDATA1 of 72 bytes minimally represented by direct push (MINIMALDATA)
    ✓ should handle script test with cache:PUSHDATA2 of 255 bytes minimally represented by PUSHDATA1 (MINIMALDATA)
    ✓ should handle script test without cache:PUSHDATA2 of 255 bytes minimally represented by PUSHDATA1 (MINIMALDATA)
    ✓ should handle script test with cache:PUSHDATA4 of 256 bytes minimally represented by PUSHDATA2 (MINIMALDATA)
    ✓ should handle script test without cache:PUSHDATA4 of 256 bytes minimally represented by PUSHDATA2 (MINIMALDATA)
    ✓ should handle script test with cache:numequals 0 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:numequals 0 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:numequals 0 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:numequals 0 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:0x80 (negative zero) numequals 0 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:0x80 (negative zero) numequals 0 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:numequals 0 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:numequals 0 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:numequals 5 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:numequals 5 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:numequals 5 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:numequals 5 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:numequals -5 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:numequals -5 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:numequals -5 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:numequals -5 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:Minimal encoding is 0xffff (UNKNOWN_ERROR)
    ✓ should handle script test without cache:Minimal encoding is 0xffff (UNKNOWN_ERROR)
    ✓ should handle script test with cache:Minimal encoding is 0xff7f (UNKNOWN_ERROR)
    ✓ should handle script test without cache:Minimal encoding is 0xff7f (UNKNOWN_ERROR)
    ✓ should handle script test with cache:Minimal encoding is 0xffffff (UNKNOWN_ERROR)
    ✓ should handle script test without cache:Minimal encoding is 0xffffff (UNKNOWN_ERROR)
    ✓ should handle script test with cache:Minimal encoding is 0xffff7f (UNKNOWN_ERROR)
    ✓ should handle script test without cache:Minimal encoding is 0xffff7f (UNKNOWN_ERROR)
    ✓ should handle script test with cache:PICK DROP (UNKNOWN_ERROR)
    ✓ should handle script test without cache:PICK DROP (UNKNOWN_ERROR)
    ✓ should handle script test with cache:ROLL DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:ROLL DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:1ADD DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:1ADD DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:1SUB DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:1SUB DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:NEGATE DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:NEGATE DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:ABS DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:ABS DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:NOT DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:NOT DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:0NOTEQUAL DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:0NOTEQUAL DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:ADD DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:ADD DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:ADD DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:ADD DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:SUB DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:SUB DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:SUB DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:SUB DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:BOOLAND DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:BOOLAND DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:BOOLAND DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:BOOLAND DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:BOOLOR DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:BOOLOR DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:BOOLOR DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:BOOLOR DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:NUMEQUAL DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:NUMEQUAL DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:NUMEQUAL DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:NUMEQUAL DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:NUMEQUALVERIFY 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:NUMEQUALVERIFY 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:NUMEQUALVERIFY 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:NUMEQUALVERIFY 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:NUMNOTEQUAL DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:NUMNOTEQUAL DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:NUMNOTEQUAL DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:NUMNOTEQUAL DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:LESSTHAN DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:LESSTHAN DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:LESSTHAN DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:LESSTHAN DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:GREATERTHAN DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:GREATERTHAN DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:GREATERTHAN DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:GREATERTHAN DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:LESSTHANOREQUAL DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:LESSTHANOREQUAL DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:LESSTHANOREQUAL DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:LESSTHANOREQUAL DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:GREATERTHANOREQUAL DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:GREATERTHANOREQUAL DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:GREATERTHANOREQUAL DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:GREATERTHANOREQUAL DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:MIN DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:MIN DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:MIN DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:MIN DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:MAX DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:MAX DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:MAX DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:MAX DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:WITHIN DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:WITHIN DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:WITHIN DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:WITHIN DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:WITHIN DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:WITHIN DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:CHECKMULTISIG DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:CHECKMULTISIG DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:CHECKMULTISIG DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:CHECKMULTISIG DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:CHECKMULTISIG DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:CHECKMULTISIG DROP 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:CHECKMULTISIGVERIFY 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:CHECKMULTISIGVERIFY 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:CHECKMULTISIGVERIFY 1 (UNKNOWN_ERROR)
    ✓ should handle script test without cache:CHECKMULTISIGVERIFY 1 (UNKNOWN_ERROR)
    ✓ should handle script test with cache:2-of-2 CHECKMULTISIG NOT with the first pubkey invalid, and both signatures validly encoded. (PUBKEYTYPE)
    ✓ should handle script test without cache:2-of-2 CHECKMULTISIG NOT with the first pubkey invalid, and both signatures validly encoded. (PUBKEYTYPE)
    ✓ should handle script test with cache:2-of-2 CHECKMULTISIG NOT with both pubkeys valid, but first signature invalid. (SIG_DER)
    ✓ should handle script test without cache:2-of-2 CHECKMULTISIG NOT with both pubkeys valid, but first signature invalid. (SIG_DER)
    ✓ should handle script test with cache:2-of-3 with one valid and one invalid signature due to parse error, nSigs > validSigs (SIG_DER)
    ✓ should handle script test without cache:2-of-3 with one valid and one invalid signature due to parse error, nSigs > validSigs (SIG_DER)
    ✓ should handle script test with cache:Overly long signature is incorrectly encoded for DERSIG (SIG_DER)
    ✓ should handle script test without cache:Overly long signature is incorrectly encoded for DERSIG (SIG_DER)
    ✓ should handle script test with cache:Missing S is incorrectly encoded for DERSIG (SIG_DER)
    ✓ should handle script test without cache:Missing S is incorrectly encoded for DERSIG (SIG_DER)
    ✓ should handle script test with cache:S with invalid S length is incorrectly encoded for DERSIG (SIG_DER)
    ✓ should handle script test without cache:S with invalid S length is incorrectly encoded for DERSIG (SIG_DER)
    ✓ should handle script test with cache:Non-integer R is incorrectly encoded for DERSIG (SIG_DER)
    ✓ should handle script test without cache:Non-integer R is incorrectly encoded for DERSIG (SIG_DER)
    ✓ should handle script test with cache:Non-integer S is incorrectly encoded for DERSIG (SIG_DER)
    ✓ should handle script test without cache:Non-integer S is incorrectly encoded for DERSIG (SIG_DER)
    ✓ should handle script test with cache:Zero-length R is incorrectly encoded for DERSIG (SIG_DER)
    ✓ should handle script test without cache:Zero-length R is incorrectly encoded for DERSIG (SIG_DER)
    ✓ should handle script test with cache:Zero-length S is incorrectly encoded for DERSIG (SIG_DER)
    ✓ should handle script test without cache:Zero-length S is incorrectly encoded for DERSIG (SIG_DER)
    ✓ should handle script test with cache:Negative S is incorrectly encoded for DERSIG (SIG_DER)
    ✓ should handle script test without cache:Negative S is incorrectly encoded for DERSIG (SIG_DER)
    ✓ should handle script test with cache:Invalid witness script (EVAL_FALSE)
    ✓ should handle script test without cache:Invalid witness script (EVAL_FALSE)
    ✓ should handle script test with cache:Witness script hash mismatch (WITNESS_PROGRAM_MISMATCH)
    ✓ should handle script test without cache:Witness script hash mismatch (WITNESS_PROGRAM_MISMATCH)
    ✓ should handle script test with cache:Invalid witness script without WITNESS (OK)
    ✓ should handle script test without cache:Invalid witness script without WITNESS (OK)
    ✓ should handle script test with cache:Witness script hash mismatch without WITNESS (OK)
    ✓ should handle script test without cache:Witness script hash mismatch without WITNESS (OK)
    ✓ should handle script test with cache:P2PK (OK)
    ✓ should handle script test without cache:P2PK (OK)
    ✓ should handle script test with cache:P2PK, bad sig (EVAL_FALSE)
    ✓ should handle script test without cache:P2PK, bad sig (EVAL_FALSE)
    ✓ should handle script test with cache:P2PKH (OK)
    ✓ should handle script test without cache:P2PKH (OK)
    ✓ should handle script test with cache:P2PKH, bad pubkey (EQUALVERIFY)
    ✓ should handle script test without cache:P2PKH, bad pubkey (EQUALVERIFY)
    ✓ should handle script test with cache:P2PK anyonecanpay (OK)
    ✓ should handle script test without cache:P2PK anyonecanpay (OK)
    ✓ should handle script test with cache:P2PK anyonecanpay marked with normal hashtype (EVAL_FALSE)
    ✓ should handle script test without cache:P2PK anyonecanpay marked with normal hashtype (EVAL_FALSE)
    ✓ should handle script test with cache:P2SH(P2PK) (OK)
    ✓ should handle script test without cache:P2SH(P2PK) (OK)
    ✓ should handle script test with cache:P2SH(P2PK), bad redeemscript (EVAL_FALSE)
    ✓ should handle script test without cache:P2SH(P2PK), bad redeemscript (EVAL_FALSE)
    ✓ should handle script test with cache:P2SH(P2PKH) (OK)
    ✓ should handle script test without cache:P2SH(P2PKH) (OK)
    ✓ should handle script test with cache:P2SH(P2PKH), bad sig but no VERIFY_P2SH (OK)
    ✓ should handle script test without cache:P2SH(P2PKH), bad sig but no VERIFY_P2SH (OK)
    ✓ should handle script test with cache:P2SH(P2PKH), bad sig (EQUALVERIFY)
    ✓ should handle script test without cache:P2SH(P2PKH), bad sig (EQUALVERIFY)
    ✓ should handle script test with cache:3-of-3 (OK)
    ✓ should handle script test without cache:3-of-3 (OK)
    ✓ should handle script test with cache:3-of-3, 2 sigs (EVAL_FALSE)
    ✓ should handle script test without cache:3-of-3, 2 sigs (EVAL_FALSE)
    ✓ should handle script test with cache:P2SH(2-of-3) (OK)
    ✓ should handle script test without cache:P2SH(2-of-3) (OK)
    ✓ should handle script test with cache:P2SH(2-of-3), 1 sig (EVAL_FALSE)
    ✓ should handle script test without cache:P2SH(2-of-3), 1 sig (EVAL_FALSE)
    ✓ should handle script test with cache:P2PK with too much R padding but no DERSIG (OK)
    ✓ should handle script test without cache:P2PK with too much R padding but no DERSIG (OK)
    ✓ should handle script test with cache:P2PK with too much R padding (SIG_DER)
    ✓ should handle script test without cache:P2PK with too much R padding (SIG_DER)
    ✓ should handle script test with cache:P2PK with too much S padding but no DERSIG (OK)
    ✓ should handle script test without cache:P2PK with too much S padding but no DERSIG (OK)
    ✓ should handle script test with cache:P2PK with too much S padding (SIG_DER)
    ✓ should handle script test without cache:P2PK with too much S padding (SIG_DER)
    ✓ should handle script test with cache:P2PK with too little R padding but no DERSIG (OK)
    ✓ should handle script test without cache:P2PK with too little R padding but no DERSIG (OK)
    ✓ should handle script test with cache:P2PK with too little R padding (SIG_DER)
    ✓ should handle script test without cache:P2PK with too little R padding (SIG_DER)
    ✓ should handle script test with cache:P2PK NOT with bad sig with too much R padding but no DERSIG (OK)
    ✓ should handle script test without cache:P2PK NOT with bad sig with too much R padding but no DERSIG (OK)
    ✓ should handle script test with cache:P2PK NOT with bad sig with too much R padding (SIG_DER)
    ✓ should handle script test without cache:P2PK NOT with bad sig with too much R padding (SIG_DER)
    ✓ should handle script test with cache:P2PK NOT with too much R padding but no DERSIG (EVAL_FALSE)
    ✓ should handle script test without cache:P2PK NOT with too much R padding but no DERSIG (EVAL_FALSE)
    ✓ should handle script test with cache:P2PK NOT with too much R padding (SIG_DER)
    ✓ should handle script test without cache:P2PK NOT with too much R padding (SIG_DER)
    ✓ should handle script test with cache:BIP66 example 1, without DERSIG (OK)
    ✓ should handle script test without cache:BIP66 example 1, without DERSIG (OK)
    ✓ should handle script test with cache:BIP66 example 1, with DERSIG (SIG_DER)
    ✓ should handle script test without cache:BIP66 example 1, with DERSIG (SIG_DER)
    ✓ should handle script test with cache:BIP66 example 2, without DERSIG (EVAL_FALSE)
    ✓ should handle script test without cache:BIP66 example 2, without DERSIG (EVAL_FALSE)
    ✓ should handle script test with cache:BIP66 example 2, with DERSIG (SIG_DER)
    ✓ should handle script test without cache:BIP66 example 2, with DERSIG (SIG_DER)
    ✓ should handle script test with cache:BIP66 example 3, without DERSIG (EVAL_FALSE)
    ✓ should handle script test without cache:BIP66 example 3, without DERSIG (EVAL_FALSE)
    ✓ should handle script test with cache:BIP66 example 3, with DERSIG (EVAL_FALSE)
    ✓ should handle script test without cache:BIP66 example 3, with DERSIG (EVAL_FALSE)
    ✓ should handle script test with cache:BIP66 example 4, without DERSIG (OK)
    ✓ should handle script test without cache:BIP66 example 4, without DERSIG (OK)
    ✓ should handle script test with cache:BIP66 example 4, with DERSIG (OK)
    ✓ should handle script test without cache:BIP66 example 4, with DERSIG (OK)
    ✓ should handle script test with cache:BIP66 example 4, with DERSIG, non-null DER-compliant signature (OK)
    ✓ should handle script test without cache:BIP66 example 4, with DERSIG, non-null DER-compliant signature (OK)
    ✓ should handle script test with cache:BIP66 example 4, with DERSIG and NULLFAIL (OK)
    ✓ should handle script test without cache:BIP66 example 4, with DERSIG and NULLFAIL (OK)
    ✓ should handle script test with cache:BIP66 example 4, with DERSIG and NULLFAIL, non-null DER-compliant signature (NULLFAIL)
    ✓ should handle script test without cache:BIP66 example 4, with DERSIG and NULLFAIL, non-null DER-compliant signature (NULLFAIL)
    ✓ should handle script test with cache:BIP66 example 5, without DERSIG (EVAL_FALSE)
    ✓ should handle script test without cache:BIP66 example 5, without DERSIG (EVAL_FALSE)
    ✓ should handle script test with cache:BIP66 example 5, with DERSIG (SIG_DER)
    ✓ should handle script test without cache:BIP66 example 5, with DERSIG (SIG_DER)
    ✓ should handle script test with cache:BIP66 example 6, without DERSIG (OK)
    ✓ should handle script test without cache:BIP66 example 6, without DERSIG (OK)
    ✓ should handle script test with cache:BIP66 example 6, with DERSIG (SIG_DER)
    ✓ should handle script test without cache:BIP66 example 6, with DERSIG (SIG_DER)
    ✓ should handle script test with cache:BIP66 example 7, without DERSIG (OK)
    ✓ should handle script test without cache:BIP66 example 7, without DERSIG (OK)
    ✓ should handle script test with cache:BIP66 example 7, with DERSIG (SIG_DER)
    ✓ should handle script test without cache:BIP66 example 7, with DERSIG (SIG_DER)
    ✓ should handle script test with cache:BIP66 example 8, without DERSIG (EVAL_FALSE)
    ✓ should handle script test without cache:BIP66 example 8, without DERSIG (EVAL_FALSE)
    ✓ should handle script test with cache:BIP66 example 8, with DERSIG (SIG_DER)
    ✓ should handle script test without cache:BIP66 example 8, with DERSIG (SIG_DER)
    ✓ should handle script test with cache:BIP66 example 9, without DERSIG (EVAL_FALSE)
    ✓ should handle script test without cache:BIP66 example 9, without DERSIG (EVAL_FALSE)
    ✓ should handle script test with cache:BIP66 example 9, with DERSIG (SIG_DER)
    ✓ should handle script test without cache:BIP66 example 9, with DERSIG (SIG_DER)
    ✓ should handle script test with cache:BIP66 example 10, without DERSIG (OK)
    ✓ should handle script test without cache:BIP66 example 10, without DERSIG (OK)
    ✓ should handle script test with cache:BIP66 example 10, with DERSIG (SIG_DER)
    ✓ should handle script test without cache:BIP66 example 10, with DERSIG (SIG_DER)
    ✓ should handle script test with cache:BIP66 example 11, without DERSIG (EVAL_FALSE)
    ✓ should handle script test without cache:BIP66 example 11, without DERSIG (EVAL_FALSE)
    ✓ should handle script test with cache:BIP66 example 11, with DERSIG (EVAL_FALSE)
    ✓ should handle script test without cache:BIP66 example 11, with DERSIG (EVAL_FALSE)
    ✓ should handle script test with cache:BIP66 example 12, without DERSIG (OK)
    ✓ should handle script test without cache:BIP66 example 12, without DERSIG (OK)
    ✓ should handle script test with cache:BIP66 example 12, with DERSIG (OK)
    ✓ should handle script test without cache:BIP66 example 12, with DERSIG (OK)
    ✓ should handle script test with cache:P2PK with multi-byte hashtype, without DERSIG (OK)
    ✓ should handle script test without cache:P2PK with multi-byte hashtype, without DERSIG (OK)
    ✓ should handle script test with cache:P2PK with multi-byte hashtype, with DERSIG (SIG_DER)
    ✓ should handle script test without cache:P2PK with multi-byte hashtype, with DERSIG (SIG_DER)
    ✓ should handle script test with cache:P2PK with high S but no LOW_S (OK)
    ✓ should handle script test without cache:P2PK with high S but no LOW_S (OK)
    ✓ should handle script test with cache:P2PK with high S (SIG_HIGH_S)
    ✓ should handle script test without cache:P2PK with high S (SIG_HIGH_S)
    ✓ should handle script test with cache:P2PK with hybrid pubkey but no STRICTENC (OK)
    ✓ should handle script test without cache:P2PK with hybrid pubkey but no STRICTENC (OK)
    ✓ should handle script test with cache:P2PK with hybrid pubkey (PUBKEYTYPE)
    ✓ should handle script test without cache:P2PK with hybrid pubkey (PUBKEYTYPE)
    ✓ should handle script test with cache:P2PK NOT with hybrid pubkey but no STRICTENC (EVAL_FALSE)
    ✓ should handle script test without cache:P2PK NOT with hybrid pubkey but no STRICTENC (EVAL_FALSE)
    ✓ should handle script test with cache:P2PK NOT with hybrid pubkey (PUBKEYTYPE)
    ✓ should handle script test without cache:P2PK NOT with hybrid pubkey (PUBKEYTYPE)
    ✓ should handle script test with cache:P2PK NOT with invalid hybrid pubkey but no STRICTENC (OK)
    ✓ should handle script test without cache:P2PK NOT with invalid hybrid pubkey but no STRICTENC (OK)
    ✓ should handle script test with cache:P2PK NOT with invalid hybrid pubkey (PUBKEYTYPE)
    ✓ should handle script test without cache:P2PK NOT with invalid hybrid pubkey (PUBKEYTYPE)
    ✓ should handle script test with cache:1-of-2 with the second 1 hybrid pubkey and no STRICTENC (OK)
    ✓ should handle script test without cache:1-of-2 with the second 1 hybrid pubkey and no STRICTENC (OK)
    ✓ should handle script test with cache:1-of-2 with the second 1 hybrid pubkey (OK)
    ✓ should handle script test without cache:1-of-2 with the second 1 hybrid pubkey (OK)
    ✓ should handle script test with cache:1-of-2 with the first 1 hybrid pubkey (PUBKEYTYPE)
    ✓ should handle script test without cache:1-of-2 with the first 1 hybrid pubkey (PUBKEYTYPE)
    ✓ should handle script test with cache:P2PK with undefined hashtype but no STRICTENC (OK)
    ✓ should handle script test without cache:P2PK with undefined hashtype but no STRICTENC (OK)
    ✓ should handle script test with cache:P2PK with undefined hashtype (SIG_HASHTYPE)
    ✓ should handle script test without cache:P2PK with undefined hashtype (SIG_HASHTYPE)
    ✓ should handle script test with cache:P2PK NOT with invalid sig and undefined hashtype but no STRICTENC (OK)
    ✓ should handle script test without cache:P2PK NOT with invalid sig and undefined hashtype but no STRICTENC (OK)
    ✓ should handle script test with cache:P2PK NOT with invalid sig and undefined hashtype (SIG_HASHTYPE)
    ✓ should handle script test without cache:P2PK NOT with invalid sig and undefined hashtype (SIG_HASHTYPE)
    ✓ should handle script test with cache:3-of-3 with nonzero dummy but no NULLDUMMY (OK)
    ✓ should handle script test without cache:3-of-3 with nonzero dummy but no NULLDUMMY (OK)
    ✓ should handle script test with cache:3-of-3 with nonzero dummy (SIG_NULLDUMMY)
    ✓ should handle script test without cache:3-of-3 with nonzero dummy (SIG_NULLDUMMY)
    ✓ should handle script test with cache:3-of-3 NOT with invalid sig and nonzero dummy but no NULLDUMMY (OK)
    ✓ should handle script test without cache:3-of-3 NOT with invalid sig and nonzero dummy but no NULLDUMMY (OK)
    ✓ should handle script test with cache:3-of-3 NOT with invalid sig with nonzero dummy (SIG_NULLDUMMY)
    ✓ should handle script test without cache:3-of-3 NOT with invalid sig with nonzero dummy (SIG_NULLDUMMY)
    ✓ should handle script test with cache:2-of-2 with two identical keys and sigs pushed using OP_DUP but no SIGPUSHONLY (OK)
    ✓ should handle script test without cache:2-of-2 with two identical keys and sigs pushed using OP_DUP but no SIGPUSHONLY (OK)
    ✓ should handle script test with cache:2-of-2 with two identical keys and sigs pushed using OP_DUP (SIG_PUSHONLY)
    ✓ should handle script test without cache:2-of-2 with two identical keys and sigs pushed using OP_DUP (SIG_PUSHONLY)
    ✓ should handle script test with cache:P2SH(P2PK) with non-push scriptSig but no P2SH or SIGPUSHONLY (OK)
    ✓ should handle script test without cache:P2SH(P2PK) with non-push scriptSig but no P2SH or SIGPUSHONLY (OK)
    ✓ should handle script test with cache:P2PK with non-push scriptSig but with P2SH validation (OK)
    ✓ should handle script test without cache:P2PK with non-push scriptSig but with P2SH validation (OK)
    ✓ should handle script test with cache:P2SH(P2PK) with non-push scriptSig but no SIGPUSHONLY (SIG_PUSHONLY)
    ✓ should handle script test without cache:P2SH(P2PK) with non-push scriptSig but no SIGPUSHONLY (SIG_PUSHONLY)
    ✓ should handle script test with cache:P2SH(P2PK) with non-push scriptSig but not P2SH (SIG_PUSHONLY)
    ✓ should handle script test without cache:P2SH(P2PK) with non-push scriptSig but not P2SH (SIG_PUSHONLY)
    ✓ should handle script test with cache:2-of-2 with two identical keys and sigs pushed (OK)
    ✓ should handle script test without cache:2-of-2 with two identical keys and sigs pushed (OK)
    ✓ should handle script test with cache:P2PK with unnecessary input but no CLEANSTACK (OK)
    ✓ should handle script test without cache:P2PK with unnecessary input but no CLEANSTACK (OK)
    ✓ should handle script test with cache:P2PK with unnecessary input (CLEANSTACK)
    ✓ should handle script test without cache:P2PK with unnecessary input (CLEANSTACK)
    ✓ should handle script test with cache:P2SH with unnecessary input but no CLEANSTACK (OK)
    ✓ should handle script test without cache:P2SH with unnecessary input but no CLEANSTACK (OK)
    ✓ should handle script test with cache:P2SH with unnecessary input (CLEANSTACK)
    ✓ should handle script test without cache:P2SH with unnecessary input (CLEANSTACK)
    ✓ should handle script test with cache:P2SH with CLEANSTACK (OK)
    ✓ should handle script test without cache:P2SH with CLEANSTACK (OK)
    ✓ should handle script test with cache:Basic P2WSH (OK)
    ✓ should handle script test without cache:Basic P2WSH (OK)
    ✓ should handle script test with cache:Basic P2WPKH (OK)
    ✓ should handle script test without cache:Basic P2WPKH (OK)
    ✓ should handle script test with cache:Basic P2SH(P2WSH) (OK)
    ✓ should handle script test without cache:Basic P2SH(P2WSH) (OK)
    ✓ should handle script test with cache:Basic P2SH(P2WPKH) (OK)
    ✓ should handle script test without cache:Basic P2SH(P2WPKH) (OK)
    ✓ should handle script test with cache:Basic P2WSH with the wrong key (EVAL_FALSE)
    ✓ should handle script test without cache:Basic P2WSH with the wrong key (EVAL_FALSE)
    ✓ should handle script test with cache:Basic P2WPKH with the wrong key (EVAL_FALSE)
    ✓ should handle script test without cache:Basic P2WPKH with the wrong key (EVAL_FALSE)
    ✓ should handle script test with cache:Basic P2SH(P2WSH) with the wrong key (EVAL_FALSE)
    ✓ should handle script test without cache:Basic P2SH(P2WSH) with the wrong key (EVAL_FALSE)
    ✓ should handle script test with cache:Basic P2SH(P2WPKH) with the wrong key (EVAL_FALSE)
    ✓ should handle script test without cache:Basic P2SH(P2WPKH) with the wrong key (EVAL_FALSE)
    ✓ should handle script test with cache:Basic P2WSH with the wrong key but no WITNESS (OK)
    ✓ should handle script test without cache:Basic P2WSH with the wrong key but no WITNESS (OK)
    ✓ should handle script test with cache:Basic P2WPKH with the wrong key but no WITNESS (OK)
    ✓ should handle script test without cache:Basic P2WPKH with the wrong key but no WITNESS (OK)
    ✓ should handle script test with cache:Basic P2SH(P2WSH) with the wrong key but no WITNESS (OK)
    ✓ should handle script test without cache:Basic P2SH(P2WSH) with the wrong key but no WITNESS (OK)
    ✓ should handle script test with cache:Basic P2SH(P2WPKH) with the wrong key but no WITNESS (OK)
    ✓ should handle script test without cache:Basic P2SH(P2WPKH) with the wrong key but no WITNESS (OK)
    ✓ should handle script test with cache:Basic P2WSH with wrong value (EVAL_FALSE)
    ✓ should handle script test without cache:Basic P2WSH with wrong value (EVAL_FALSE)
    ✓ should handle script test with cache:Basic P2WPKH with wrong value (EVAL_FALSE)
    ✓ should handle script test without cache:Basic P2WPKH with wrong value (EVAL_FALSE)
    ✓ should handle script test with cache:Basic P2SH(P2WSH) with wrong value (EVAL_FALSE)
    ✓ should handle script test without cache:Basic P2SH(P2WSH) with wrong value (EVAL_FALSE)
    ✓ should handle script test with cache:Basic P2SH(P2WPKH) with wrong value (EVAL_FALSE)
    ✓ should handle script test without cache:Basic P2SH(P2WPKH) with wrong value (EVAL_FALSE)
    ✓ should handle script test with cache:P2WPKH with future witness version (DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM)
    ✓ should handle script test without cache:P2WPKH with future witness version (DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM)
    ✓ should handle script test with cache:P2WPKH with wrong witness program length (WITNESS_PROGRAM_WRONG_LENGTH)
    ✓ should handle script test without cache:P2WPKH with wrong witness program length (WITNESS_PROGRAM_WRONG_LENGTH)
    ✓ should handle script test with cache:P2WSH with empty witness (WITNESS_PROGRAM_WITNESS_EMPTY)
    ✓ should handle script test without cache:P2WSH with empty witness (WITNESS_PROGRAM_WITNESS_EMPTY)
    ✓ should handle script test with cache:P2WSH with witness program mismatch (WITNESS_PROGRAM_MISMATCH)
    ✓ should handle script test without cache:P2WSH with witness program mismatch (WITNESS_PROGRAM_MISMATCH)
    ✓ should handle script test with cache:P2WPKH with witness program mismatch (WITNESS_PROGRAM_MISMATCH)
    ✓ should handle script test without cache:P2WPKH with witness program mismatch (WITNESS_PROGRAM_MISMATCH)
    ✓ should handle script test with cache:P2WPKH with non-empty scriptSig (WITNESS_MALLEATED)
    ✓ should handle script test without cache:P2WPKH with non-empty scriptSig (WITNESS_MALLEATED)
    ✓ should handle script test with cache:P2SH(P2WPKH) with superfluous push in scriptSig (WITNESS_MALLEATED_P2SH)
    ✓ should handle script test without cache:P2SH(P2WPKH) with superfluous push in scriptSig (WITNESS_MALLEATED_P2SH)
    ✓ should handle script test with cache:P2PK with witness (WITNESS_UNEXPECTED)
    ✓ should handle script test without cache:P2PK with witness (WITNESS_UNEXPECTED)
    ✓ should handle script test with cache:Basic P2WSH with compressed key (OK)
    ✓ should handle script test without cache:Basic P2WSH with compressed key (OK)
    ✓ should handle script test with cache:Basic P2WPKH with compressed key (OK)
    ✓ should handle script test without cache:Basic P2WPKH with compressed key (OK)
    ✓ should handle script test with cache:Basic P2SH(P2WSH) with compressed key (OK)
    ✓ should handle script test without cache:Basic P2SH(P2WSH) with compressed key (OK)
    ✓ should handle script test with cache:Basic P2SH(P2WPKH) with compressed key (OK)
    ✓ should handle script test without cache:Basic P2SH(P2WPKH) with compressed key (OK)
    ✓ should handle script test with cache:Basic P2WSH (WITNESS_PUBKEYTYPE)
    ✓ should handle script test without cache:Basic P2WSH (WITNESS_PUBKEYTYPE)
    ✓ should handle script test with cache:Basic P2WPKH (WITNESS_PUBKEYTYPE)
    ✓ should handle script test without cache:Basic P2WPKH (WITNESS_PUBKEYTYPE)
    ✓ should handle script test with cache:Basic P2SH(P2WSH) (WITNESS_PUBKEYTYPE)
    ✓ should handle script test without cache:Basic P2SH(P2WSH) (WITNESS_PUBKEYTYPE)
    ✓ should handle script test with cache:Basic P2SH(P2WPKH) (WITNESS_PUBKEYTYPE)
    ✓ should handle script test without cache:Basic P2SH(P2WPKH) (WITNESS_PUBKEYTYPE)
    ✓ should handle script test with cache:P2WSH CHECKMULTISIG with compressed keys (OK)
    ✓ should handle script test without cache:P2WSH CHECKMULTISIG with compressed keys (OK)
    ✓ should handle script test with cache:P2SH(P2WSH) CHECKMULTISIG with compressed keys (OK)
    ✓ should handle script test without cache:P2SH(P2WSH) CHECKMULTISIG with compressed keys (OK)
    ✓ should handle script test with cache:P2WSH CHECKMULTISIG with compressed keys (OK)
    ✓ should handle script test without cache:P2WSH CHECKMULTISIG with compressed keys (OK)
    ✓ should handle script test with cache:P2SH(P2WSH) CHECKMULTISIG with compressed keys (OK)
    ✓ should handle script test without cache:P2SH(P2WSH) CHECKMULTISIG with compressed keys (OK)
    ✓ should handle script test with cache:P2WSH CHECKMULTISIG with first key uncompressed and signing with the first key (OK)
    ✓ should handle script test without cache:P2WSH CHECKMULTISIG with first key uncompressed and signing with the first key (OK)
    ✓ should handle script test with cache:P2SH(P2WSH) CHECKMULTISIG first key uncompressed and signing with the first key (OK)
    ✓ should handle script test without cache:P2SH(P2WSH) CHECKMULTISIG first key uncompressed and signing with the first key (OK)
    ✓ should handle script test with cache:P2WSH CHECKMULTISIG with first key uncompressed and signing with the first key (WITNESS_PUBKEYTYPE)
    ✓ should handle script test without cache:P2WSH CHECKMULTISIG with first key uncompressed and signing with the first key (WITNESS_PUBKEYTYPE)
    ✓ should handle script test with cache:P2SH(P2WSH) CHECKMULTISIG with first key uncompressed and signing with the first key (WITNESS_PUBKEYTYPE)
    ✓ should handle script test without cache:P2SH(P2WSH) CHECKMULTISIG with first key uncompressed and signing with the first key (WITNESS_PUBKEYTYPE)
    ✓ should handle script test with cache:P2WSH CHECKMULTISIG with first key uncompressed and signing with the second key (OK)
    ✓ should handle script test without cache:P2WSH CHECKMULTISIG with first key uncompressed and signing with the second key (OK)
    ✓ should handle script test with cache:P2SH(P2WSH) CHECKMULTISIG with first key uncompressed and signing with the second key (OK)
    ✓ should handle script test without cache:P2SH(P2WSH) CHECKMULTISIG with first key uncompressed and signing with the second key (OK)
    ✓ should handle script test with cache:P2WSH CHECKMULTISIG with first key uncompressed and signing with the second key (WITNESS_PUBKEYTYPE)
    ✓ should handle script test without cache:P2WSH CHECKMULTISIG with first key uncompressed and signing with the second key (WITNESS_PUBKEYTYPE)
    ✓ should handle script test with cache:P2SH(P2WSH) CHECKMULTISIG with first key uncompressed and signing with the second key (WITNESS_PUBKEYTYPE)
    ✓ should handle script test without cache:P2SH(P2WSH) CHECKMULTISIG with first key uncompressed and signing with the second key (WITNESS_PUBKEYTYPE)
    ✓ should handle script test with cache:P2WSH CHECKMULTISIG with second key uncompressed and signing with the first key (OK)
    ✓ should handle script test without cache:P2WSH CHECKMULTISIG with second key uncompressed and signing with the first key (OK)
    ✓ should handle script test with cache:P2SH(P2WSH) CHECKMULTISIG second key uncompressed and signing with the first key (OK)
    ✓ should handle script test without cache:P2SH(P2WSH) CHECKMULTISIG second key uncompressed and signing with the first key (OK)
    ✓ should handle script test with cache:P2WSH CHECKMULTISIG with second key uncompressed and signing with the first key should pass as the uncompressed key is not used (OK)
    ✓ should handle script test without cache:P2WSH CHECKMULTISIG with second key uncompressed and signing with the first key should pass as the uncompressed key is not used (OK)
    ✓ should handle script test with cache:P2SH(P2WSH) CHECKMULTISIG with second key uncompressed and signing with the first key should pass as the uncompressed key is not used (OK)
    ✓ should handle script test without cache:P2SH(P2WSH) CHECKMULTISIG with second key uncompressed and signing with the first key should pass as the uncompressed key is not used (OK)
    ✓ should handle script test with cache:P2WSH CHECKMULTISIG with second key uncompressed and signing with the second key (OK)
    ✓ should handle script test without cache:P2WSH CHECKMULTISIG with second key uncompressed and signing with the second key (OK)
    ✓ should handle script test with cache:P2SH(P2WSH) CHECKMULTISIG with second key uncompressed and signing with the second key (OK)
    ✓ should handle script test without cache:P2SH(P2WSH) CHECKMULTISIG with second key uncompressed and signing with the second key (OK)
    ✓ should handle script test with cache:P2WSH CHECKMULTISIG with second key uncompressed and signing with the second key (WITNESS_PUBKEYTYPE)
    ✓ should handle script test without cache:P2WSH CHECKMULTISIG with second key uncompressed and signing with the second key (WITNESS_PUBKEYTYPE)
    ✓ should handle script test with cache:P2SH(P2WSH) CHECKMULTISIG with second key uncompressed and signing with the second key (WITNESS_PUBKEYTYPE)
    ✓ should handle script test without cache:P2SH(P2WSH) CHECKMULTISIG with second key uncompressed and signing with the second key (WITNESS_PUBKEYTYPE)
    ✓ should handle script test with cache:CSV automatically fails on an empty stack (INVALID_STACK_OPERATION)
    ✓ should handle script test without cache:CSV automatically fails on an empty stack (INVALID_STACK_OPERATION)
    ✓ should handle script test with cache:CSV automatically fails if stack top is negative (NEGATIVE_LOCKTIME)
    ✓ should handle script test without cache:CSV automatically fails if stack top is negative (NEGATIVE_LOCKTIME)
    ✓ should handle script test with cache:CSV fails if stack top is not minimally encoded (UNKNOWN_ERROR)
    ✓ should handle script test without cache:CSV fails if stack top is not minimally encoded (UNKNOWN_ERROR)
    ✓ should handle script test with cache:CSV fails if stack top bit 1 << 31 is set and the tx version < 2 (UNSATISFIED_LOCKTIME)
    ✓ should handle script test without cache:CSV fails if stack top bit 1 << 31 is set and the tx version < 2 (UNSATISFIED_LOCKTIME)
    ✓ should handle script test with cache:CSV fails if stack top bit 1 << 31 is not set, and tx version < 2 (UNSATISFIED_LOCKTIME)
    ✓ should handle script test without cache:CSV fails if stack top bit 1 << 31 is not set, and tx version < 2 (UNSATISFIED_LOCKTIME)
    ✓ should handle script test with cache:IF 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 1 ENDIF (OK)
    ✓ should handle script test without cache:IF 1 ENDIF (OK)
    ✓ should handle script test with cache:IF 1 ENDIF (EVAL_FALSE)
    ✓ should handle script test without cache:IF 1 ENDIF (EVAL_FALSE)
    ✓ should handle script test with cache:IF 1 ENDIF (EVAL_FALSE)
    ✓ should handle script test without cache:IF 1 ENDIF (EVAL_FALSE)
    ✓ should handle script test with cache:NOTIF 1 ENDIF (EVAL_FALSE)
    ✓ should handle script test without cache:NOTIF 1 ENDIF (EVAL_FALSE)
    ✓ should handle script test with cache:NOTIF 1 ENDIF (EVAL_FALSE)
    ✓ should handle script test without cache:NOTIF 1 ENDIF (EVAL_FALSE)
    ✓ should handle script test with cache:NOTIF 1 ENDIF (EVAL_FALSE)
    ✓ should handle script test without cache:NOTIF 1 ENDIF (EVAL_FALSE)
    ✓ should handle script test with cache:NOTIF 1 ENDIF (OK)
    ✓ should handle script test without cache:NOTIF 1 ENDIF (OK)
    ✓ should handle script test with cache:NOTIF 1 ENDIF (OK)
    ✓ should handle script test without cache:NOTIF 1 ENDIF (OK)
    ✓ should handle script test with cache:HASH160 0x14 0xe7309652a8e3f600f06f5d8d52d6df03d2176cc3 EQUA (OK)
    ✓ should handle script test without cache:HASH160 0x14 0xe7309652a8e3f600f06f5d8d52d6df03d2176cc3 EQUA (OK)
    ✓ should handle script test with cache:HASH160 0x14 0xe7309652a8e3f600f06f5d8d52d6df03d2176cc3 EQUA (OK)
    ✓ should handle script test without cache:HASH160 0x14 0xe7309652a8e3f600f06f5d8d52d6df03d2176cc3 EQUA (OK)
    ✓ should handle script test with cache:HASH160 0x14 0xe7309652a8e3f600f06f5d8d52d6df03d2176cc3 EQUA (OK)
    ✓ should handle script test without cache:HASH160 0x14 0xe7309652a8e3f600f06f5d8d52d6df03d2176cc3 EQUA (OK)
    ✓ should handle script test with cache:HASH160 0x14 0xe7309652a8e3f600f06f5d8d52d6df03d2176cc3 EQUA (EVAL_FALSE)
    ✓ should handle script test without cache:HASH160 0x14 0xe7309652a8e3f600f06f5d8d52d6df03d2176cc3 EQUA (EVAL_FALSE)
    ✓ should handle script test with cache:HASH160 0x14 0xe7309652a8e3f600f06f5d8d52d6df03d2176cc3 EQUA (EVAL_FALSE)
    ✓ should handle script test without cache:HASH160 0x14 0xe7309652a8e3f600f06f5d8d52d6df03d2176cc3 EQUA (EVAL_FALSE)
    ✓ should handle script test with cache:HASH160 0x14 0xe7309652a8e3f600f06f5d8d52d6df03d2176cc3 EQUA (UNBALANCED_CONDITIONAL)
    ✓ should handle script test without cache:HASH160 0x14 0xe7309652a8e3f600f06f5d8d52d6df03d2176cc3 EQUA (UNBALANCED_CONDITIONAL)
    ✓ should handle script test with cache:HASH160 0x14 0x0c3f8fe3d6ca266e76311ecda544c67d15fdd5b0 EQUA (EVAL_FALSE)
    ✓ should handle script test without cache:HASH160 0x14 0x0c3f8fe3d6ca266e76311ecda544c67d15fdd5b0 EQUA (EVAL_FALSE)
    ✓ should handle script test with cache:HASH160 0x14 0x0c3f8fe3d6ca266e76311ecda544c67d15fdd5b0 EQUA (EVAL_FALSE)
    ✓ should handle script test without cache:HASH160 0x14 0x0c3f8fe3d6ca266e76311ecda544c67d15fdd5b0 EQUA (EVAL_FALSE)
    ✓ should handle script test with cache:HASH160 0x14 0x0c3f8fe3d6ca266e76311ecda544c67d15fdd5b0 EQUA (EVAL_FALSE)
    ✓ should handle script test without cache:HASH160 0x14 0x0c3f8fe3d6ca266e76311ecda544c67d15fdd5b0 EQUA (EVAL_FALSE)
    ✓ should handle script test with cache:HASH160 0x14 0x0c3f8fe3d6ca266e76311ecda544c67d15fdd5b0 EQUA (OK)
    ✓ should handle script test without cache:HASH160 0x14 0x0c3f8fe3d6ca266e76311ecda544c67d15fdd5b0 EQUA (OK)
    ✓ should handle script test with cache:HASH160 0x14 0x0c3f8fe3d6ca266e76311ecda544c67d15fdd5b0 EQUA (OK)
    ✓ should handle script test without cache:HASH160 0x14 0x0c3f8fe3d6ca266e76311ecda544c67d15fdd5b0 EQUA (OK)
    ✓ should handle script test with cache:HASH160 0x14 0x0c3f8fe3d6ca266e76311ecda544c67d15fdd5b0 EQUA (UNBALANCED_CONDITIONAL)
    ✓ should handle script test without cache:HASH160 0x14 0x0c3f8fe3d6ca266e76311ecda544c67d15fdd5b0 EQUA (UNBALANCED_CONDITIONAL)
    ✓ should handle script test with cache:0 0x20 0xc7eaf06d5ae01a58e376e126eb1e6fab2036076922b96b2711f (OK)
    ✓ should handle script test without cache:0 0x20 0xc7eaf06d5ae01a58e376e126eb1e6fab2036076922b96b2711f (OK)
    ✓ should handle script test with cache:0 0x20 0xc7eaf06d5ae01a58e376e126eb1e6fab2036076922b96b2711f (OK)
    ✓ should handle script test without cache:0 0x20 0xc7eaf06d5ae01a58e376e126eb1e6fab2036076922b96b2711f (OK)
    ✓ should handle script test with cache:0 0x20 0xc7eaf06d5ae01a58e376e126eb1e6fab2036076922b96b2711f (OK)
    ✓ should handle script test without cache:0 0x20 0xc7eaf06d5ae01a58e376e126eb1e6fab2036076922b96b2711f (OK)
    ✓ should handle script test with cache:0 0x20 0xc7eaf06d5ae01a58e376e126eb1e6fab2036076922b96b2711f (EVAL_FALSE)
    ✓ should handle script test without cache:0 0x20 0xc7eaf06d5ae01a58e376e126eb1e6fab2036076922b96b2711f (EVAL_FALSE)
    ✓ should handle script test with cache:0 0x20 0xc7eaf06d5ae01a58e376e126eb1e6fab2036076922b96b2711f (EVAL_FALSE)
    ✓ should handle script test without cache:0 0x20 0xc7eaf06d5ae01a58e376e126eb1e6fab2036076922b96b2711f (EVAL_FALSE)
    ✓ should handle script test with cache:0 0x20 0xc7eaf06d5ae01a58e376e126eb1e6fab2036076922b96b2711f (OK)
    ✓ should handle script test without cache:0 0x20 0xc7eaf06d5ae01a58e376e126eb1e6fab2036076922b96b2711f (OK)
    ✓ should handle script test with cache:0 0x20 0xc7eaf06d5ae01a58e376e126eb1e6fab2036076922b96b2711f (MINIMALIF)
    ✓ should handle script test without cache:0 0x20 0xc7eaf06d5ae01a58e376e126eb1e6fab2036076922b96b2711f (MINIMALIF)
    ✓ should handle script test with cache:0 0x20 0xc7eaf06d5ae01a58e376e126eb1e6fab2036076922b96b2711f (MINIMALIF)
    ✓ should handle script test without cache:0 0x20 0xc7eaf06d5ae01a58e376e126eb1e6fab2036076922b96b2711f (MINIMALIF)
    ✓ should handle script test with cache:0 0x20 0xc7eaf06d5ae01a58e376e126eb1e6fab2036076922b96b2711f (EVAL_FALSE)
    ✓ should handle script test without cache:0 0x20 0xc7eaf06d5ae01a58e376e126eb1e6fab2036076922b96b2711f (EVAL_FALSE)
    ✓ should handle script test with cache:0 0x20 0xc7eaf06d5ae01a58e376e126eb1e6fab2036076922b96b2711f (MINIMALIF)
    ✓ should handle script test without cache:0 0x20 0xc7eaf06d5ae01a58e376e126eb1e6fab2036076922b96b2711f (MINIMALIF)
    ✓ should handle script test with cache:0 0x20 0xc7eaf06d5ae01a58e376e126eb1e6fab2036076922b96b2711f (UNBALANCED_CONDITIONAL)
    ✓ should handle script test without cache:0 0x20 0xc7eaf06d5ae01a58e376e126eb1e6fab2036076922b96b2711f (UNBALANCED_CONDITIONAL)
    ✓ should handle script test with cache:0 0x20 0xc7eaf06d5ae01a58e376e126eb1e6fab2036076922b96b2711f (UNBALANCED_CONDITIONAL)
    ✓ should handle script test without cache:0 0x20 0xc7eaf06d5ae01a58e376e126eb1e6fab2036076922b96b2711f (UNBALANCED_CONDITIONAL)
    ✓ should handle script test with cache:0 0x20 0xf913eacf2e38a5d6fc3a8311d72ae704cb83866350a984dd3e5 (EVAL_FALSE)
    ✓ should handle script test without cache:0 0x20 0xf913eacf2e38a5d6fc3a8311d72ae704cb83866350a984dd3e5 (EVAL_FALSE)
    ✓ should handle script test with cache:0 0x20 0xf913eacf2e38a5d6fc3a8311d72ae704cb83866350a984dd3e5 (EVAL_FALSE)
    ✓ should handle script test without cache:0 0x20 0xf913eacf2e38a5d6fc3a8311d72ae704cb83866350a984dd3e5 (EVAL_FALSE)
    ✓ should handle script test with cache:0 0x20 0xf913eacf2e38a5d6fc3a8311d72ae704cb83866350a984dd3e5 (EVAL_FALSE)
    ✓ should handle script test without cache:0 0x20 0xf913eacf2e38a5d6fc3a8311d72ae704cb83866350a984dd3e5 (EVAL_FALSE)
    ✓ should handle script test with cache:0 0x20 0xf913eacf2e38a5d6fc3a8311d72ae704cb83866350a984dd3e5 (OK)
    ✓ should handle script test without cache:0 0x20 0xf913eacf2e38a5d6fc3a8311d72ae704cb83866350a984dd3e5 (OK)
    ✓ should handle script test with cache:0 0x20 0xf913eacf2e38a5d6fc3a8311d72ae704cb83866350a984dd3e5 (OK)
    ✓ should handle script test without cache:0 0x20 0xf913eacf2e38a5d6fc3a8311d72ae704cb83866350a984dd3e5 (OK)
    ✓ should handle script test with cache:0 0x20 0xf913eacf2e38a5d6fc3a8311d72ae704cb83866350a984dd3e5 (EVAL_FALSE)
    ✓ should handle script test without cache:0 0x20 0xf913eacf2e38a5d6fc3a8311d72ae704cb83866350a984dd3e5 (EVAL_FALSE)
    ✓ should handle script test with cache:0 0x20 0xf913eacf2e38a5d6fc3a8311d72ae704cb83866350a984dd3e5 (MINIMALIF)
    ✓ should handle script test without cache:0 0x20 0xf913eacf2e38a5d6fc3a8311d72ae704cb83866350a984dd3e5 (MINIMALIF)
    ✓ should handle script test with cache:0 0x20 0xf913eacf2e38a5d6fc3a8311d72ae704cb83866350a984dd3e5 (MINIMALIF)
    ✓ should handle script test without cache:0 0x20 0xf913eacf2e38a5d6fc3a8311d72ae704cb83866350a984dd3e5 (MINIMALIF)
    ✓ should handle script test with cache:0 0x20 0xf913eacf2e38a5d6fc3a8311d72ae704cb83866350a984dd3e5 (OK)
    ✓ should handle script test without cache:0 0x20 0xf913eacf2e38a5d6fc3a8311d72ae704cb83866350a984dd3e5 (OK)
    ✓ should handle script test with cache:0 0x20 0xf913eacf2e38a5d6fc3a8311d72ae704cb83866350a984dd3e5 (MINIMALIF)
    ✓ should handle script test without cache:0 0x20 0xf913eacf2e38a5d6fc3a8311d72ae704cb83866350a984dd3e5 (MINIMALIF)
    ✓ should handle script test with cache:0 0x20 0xf913eacf2e38a5d6fc3a8311d72ae704cb83866350a984dd3e5 (UNBALANCED_CONDITIONAL)
    ✓ should handle script test without cache:0 0x20 0xf913eacf2e38a5d6fc3a8311d72ae704cb83866350a984dd3e5 (UNBALANCED_CONDITIONAL)
    ✓ should handle script test with cache:0 0x20 0xf913eacf2e38a5d6fc3a8311d72ae704cb83866350a984dd3e5 (UNBALANCED_CONDITIONAL)
    ✓ should handle script test without cache:0 0x20 0xf913eacf2e38a5d6fc3a8311d72ae704cb83866350a984dd3e5 (UNBALANCED_CONDITIONAL)
    ✓ should handle script test with cache:HASH160 0x14 0x9b27ee6d9010c21bf837b334d043be5d150e7ba7 EQUA (OK)
    ✓ should handle script test without cache:HASH160 0x14 0x9b27ee6d9010c21bf837b334d043be5d150e7ba7 EQUA (OK)
    ✓ should handle script test with cache:HASH160 0x14 0x9b27ee6d9010c21bf837b334d043be5d150e7ba7 EQUA (OK)
    ✓ should handle script test without cache:HASH160 0x14 0x9b27ee6d9010c21bf837b334d043be5d150e7ba7 EQUA (OK)
    ✓ should handle script test with cache:HASH160 0x14 0x9b27ee6d9010c21bf837b334d043be5d150e7ba7 EQUA (OK)
    ✓ should handle script test without cache:HASH160 0x14 0x9b27ee6d9010c21bf837b334d043be5d150e7ba7 EQUA (OK)
    ✓ should handle script test with cache:HASH160 0x14 0x9b27ee6d9010c21bf837b334d043be5d150e7ba7 EQUA (EVAL_FALSE)
    ✓ should handle script test without cache:HASH160 0x14 0x9b27ee6d9010c21bf837b334d043be5d150e7ba7 EQUA (EVAL_FALSE)
    ✓ should handle script test with cache:HASH160 0x14 0x9b27ee6d9010c21bf837b334d043be5d150e7ba7 EQUA (EVAL_FALSE)
    ✓ should handle script test without cache:HASH160 0x14 0x9b27ee6d9010c21bf837b334d043be5d150e7ba7 EQUA (EVAL_FALSE)
    ✓ should handle script test with cache:HASH160 0x14 0x9b27ee6d9010c21bf837b334d043be5d150e7ba7 EQUA (OK)
    ✓ should handle script test without cache:HASH160 0x14 0x9b27ee6d9010c21bf837b334d043be5d150e7ba7 EQUA (OK)
    ✓ should handle script test with cache:HASH160 0x14 0x9b27ee6d9010c21bf837b334d043be5d150e7ba7 EQUA (MINIMALIF)
    ✓ should handle script test without cache:HASH160 0x14 0x9b27ee6d9010c21bf837b334d043be5d150e7ba7 EQUA (MINIMALIF)
    ✓ should handle script test with cache:HASH160 0x14 0x9b27ee6d9010c21bf837b334d043be5d150e7ba7 EQUA (MINIMALIF)
    ✓ should handle script test without cache:HASH160 0x14 0x9b27ee6d9010c21bf837b334d043be5d150e7ba7 EQUA (MINIMALIF)
    ✓ should handle script test with cache:HASH160 0x14 0x9b27ee6d9010c21bf837b334d043be5d150e7ba7 EQUA (EVAL_FALSE)
    ✓ should handle script test without cache:HASH160 0x14 0x9b27ee6d9010c21bf837b334d043be5d150e7ba7 EQUA (EVAL_FALSE)
    ✓ should handle script test with cache:HASH160 0x14 0x9b27ee6d9010c21bf837b334d043be5d150e7ba7 EQUA (MINIMALIF)
    ✓ should handle script test without cache:HASH160 0x14 0x9b27ee6d9010c21bf837b334d043be5d150e7ba7 EQUA (MINIMALIF)
    ✓ should handle script test with cache:HASH160 0x14 0x9b27ee6d9010c21bf837b334d043be5d150e7ba7 EQUA (UNBALANCED_CONDITIONAL)
    ✓ should handle script test without cache:HASH160 0x14 0x9b27ee6d9010c21bf837b334d043be5d150e7ba7 EQUA (UNBALANCED_CONDITIONAL)
    ✓ should handle script test with cache:HASH160 0x14 0x9b27ee6d9010c21bf837b334d043be5d150e7ba7 EQUA (UNBALANCED_CONDITIONAL)
    ✓ should handle script test without cache:HASH160 0x14 0x9b27ee6d9010c21bf837b334d043be5d150e7ba7 EQUA (UNBALANCED_CONDITIONAL)
    ✓ should handle script test with cache:HASH160 0x14 0xdbb7d1c0a56b7a9c423300c8cca6e6e065baf1dc EQUA (EVAL_FALSE)
    ✓ should handle script test without cache:HASH160 0x14 0xdbb7d1c0a56b7a9c423300c8cca6e6e065baf1dc EQUA (EVAL_FALSE)
    ✓ should handle script test with cache:HASH160 0x14 0xdbb7d1c0a56b7a9c423300c8cca6e6e065baf1dc EQUA (EVAL_FALSE)
    ✓ should handle script test without cache:HASH160 0x14 0xdbb7d1c0a56b7a9c423300c8cca6e6e065baf1dc EQUA (EVAL_FALSE)
    ✓ should handle script test with cache:HASH160 0x14 0xdbb7d1c0a56b7a9c423300c8cca6e6e065baf1dc EQUA (EVAL_FALSE)
    ✓ should handle script test without cache:HASH160 0x14 0xdbb7d1c0a56b7a9c423300c8cca6e6e065baf1dc EQUA (EVAL_FALSE)
    ✓ should handle script test with cache:HASH160 0x14 0xdbb7d1c0a56b7a9c423300c8cca6e6e065baf1dc EQUA (OK)
    ✓ should handle script test without cache:HASH160 0x14 0xdbb7d1c0a56b7a9c423300c8cca6e6e065baf1dc EQUA (OK)
    ✓ should handle script test with cache:HASH160 0x14 0xdbb7d1c0a56b7a9c423300c8cca6e6e065baf1dc EQUA (OK)
    ✓ should handle script test without cache:HASH160 0x14 0xdbb7d1c0a56b7a9c423300c8cca6e6e065baf1dc EQUA (OK)
    ✓ should handle script test with cache:HASH160 0x14 0xdbb7d1c0a56b7a9c423300c8cca6e6e065baf1dc EQUA (EVAL_FALSE)
    ✓ should handle script test without cache:HASH160 0x14 0xdbb7d1c0a56b7a9c423300c8cca6e6e065baf1dc EQUA (EVAL_FALSE)
    ✓ should handle script test with cache:HASH160 0x14 0xdbb7d1c0a56b7a9c423300c8cca6e6e065baf1dc EQUA (MINIMALIF)
    ✓ should handle script test without cache:HASH160 0x14 0xdbb7d1c0a56b7a9c423300c8cca6e6e065baf1dc EQUA (MINIMALIF)
    ✓ should handle script test with cache:HASH160 0x14 0xdbb7d1c0a56b7a9c423300c8cca6e6e065baf1dc EQUA (MINIMALIF)
    ✓ should handle script test without cache:HASH160 0x14 0xdbb7d1c0a56b7a9c423300c8cca6e6e065baf1dc EQUA (MINIMALIF)
    ✓ should handle script test with cache:HASH160 0x14 0xdbb7d1c0a56b7a9c423300c8cca6e6e065baf1dc EQUA (OK)
    ✓ should handle script test without cache:HASH160 0x14 0xdbb7d1c0a56b7a9c423300c8cca6e6e065baf1dc EQUA (OK)
    ✓ should handle script test with cache:HASH160 0x14 0xdbb7d1c0a56b7a9c423300c8cca6e6e065baf1dc EQUA (MINIMALIF)
    ✓ should handle script test without cache:HASH160 0x14 0xdbb7d1c0a56b7a9c423300c8cca6e6e065baf1dc EQUA (MINIMALIF)
    ✓ should handle script test with cache:HASH160 0x14 0xdbb7d1c0a56b7a9c423300c8cca6e6e065baf1dc EQUA (UNBALANCED_CONDITIONAL)
    ✓ should handle script test without cache:HASH160 0x14 0xdbb7d1c0a56b7a9c423300c8cca6e6e065baf1dc EQUA (UNBALANCED_CONDITIONAL)
    ✓ should handle script test with cache:HASH160 0x14 0xdbb7d1c0a56b7a9c423300c8cca6e6e065baf1dc EQUA (UNBALANCED_CONDITIONAL)
    ✓ should handle script test without cache:HASH160 0x14 0xdbb7d1c0a56b7a9c423300c8cca6e6e065baf1dc EQUA (UNBALANCED_CONDITIONAL)
    ✓ should handle script test with cache:BIP66 and NULLFAIL-compliant (OK)
    ✓ should handle script test without cache:BIP66 and NULLFAIL-compliant (OK)
    ✓ should handle script test with cache:BIP66 and NULLFAIL-compliant (OK)
    ✓ should handle script test without cache:BIP66 and NULLFAIL-compliant (OK)
    ✓ should handle script test with cache:BIP66 and NULLFAIL-compliant, not NULLDUMMY-compliant (OK)
    ✓ should handle script test without cache:BIP66 and NULLFAIL-compliant, not NULLDUMMY-compliant (OK)
    ✓ should handle script test with cache:BIP66 and NULLFAIL-compliant, not NULLDUMMY-compliant (SIG_NULLDUMMY)
    ✓ should handle script test without cache:BIP66 and NULLFAIL-compliant, not NULLDUMMY-compliant (SIG_NULLDUMMY)
    ✓ should handle script test with cache:BIP66-compliant but not NULLFAIL-compliant (OK)
    ✓ should handle script test without cache:BIP66-compliant but not NULLFAIL-compliant (OK)
    ✓ should handle script test with cache:BIP66-compliant but not NULLFAIL-compliant (NULLFAIL)
    ✓ should handle script test without cache:BIP66-compliant but not NULLFAIL-compliant (NULLFAIL)
    ✓ should handle script test with cache:BIP66-compliant but not NULLFAIL-compliant (OK)
    ✓ should handle script test without cache:BIP66-compliant but not NULLFAIL-compliant (OK)
    ✓ should handle script test with cache:BIP66-compliant but not NULLFAIL-compliant (NULLFAIL)
    ✓ should handle script test without cache:BIP66-compliant but not NULLFAIL-compliant (NULLFAIL)

  TX
    ✓ should verify non-minimal output with cache
    ✓ should verify tx.version == 0 with cache
    ✓ should verify sighash_single bug w/ findanddelete with cache
    ✓ should verify high S value with only DERSIG enabled with cache
    ✓ should parse witness tx properly with cache
    ✓ should verify the coolest tx ever sent with cache
    ✓ should verify a historical transaction with cache
    ✓ should handle valid tx test with cache: The following are deserialized transactions which are valid. They are in the form [[[prevout hash, prevout index, prevout scriptPubKey, amount?], [input 2], ...], serializedTransaction, verifyFlags] Objects that are only a single string (like this one) are ignored The following is 23b397edccd3740a74adb603c9756370fafcde9bcc4483eb271ecad09a94dd63 It is of particular interest because it contains an invalidly-encoded signature which OpenSSL accepts See http://r6.ca/blog/20111119T211504Z.html It is also the first OP_CHECKMULTISIG transaction in standard form
    ✓ should handle valid tx test with cache: The following is a tweaked form of 23b397edccd3740a74adb603c9756370fafcde9bcc4483eb271ecad09a94dd63 It is an OP_CHECKMULTISIG with an arbitrary extra byte stuffed into the signature at pos length - 2 The dummy byte is fine however, so the NULLDUMMY flag should be happy
    ✓ should handle valid tx test with cache: The following is a tweaked form of 23b397edccd3740a74adb603c9756370fafcde9bcc4483eb271ecad09a94dd63 It is an OP_CHECKMULTISIG with the dummy value set to something other than an empty string
    ✓ should handle valid tx test with cache: As above, but using a OP_1
    ✓ should handle valid tx test with cache: As above, but using a OP_1NEGATE
    ✓ should handle valid tx test with cache: The following is c99c49da4c38af669dea436d3e73780dfdb6c1ecf9958baa52960e8baee30e73 It is of interest because it contains a 0-sequence as well as a signature of SIGHASH type 0 (which is not a real type)
    ✓ should handle valid tx test with cache: A nearly-standard transaction with CHECKSIGVERIFY 1 instead of CHECKSIG
    ✓ should handle valid tx test with cache: Same as above, but with the signature duplicated in the scriptPubKey with the proper pushdata prefix
    ✓ should handle valid tx test with cache: The following is f7fdd091fa6d8f5e7a8c2458f5c38faffff2d3f1406b6e4fe2c99dcc0d2d1cbb It caught a bug in the workaround for 23b397edccd3740a74adb603c9756370fafcde9bcc4483eb271ecad09a94dd63 in an overly simple implementation
    ✓ should handle valid tx test with cache: The following tests for the presence of a bug in the handling of SIGHASH_SINGLE It results in signing the constant 1, instead of something generated based on the transaction, when the input doing the signing has an index greater than the maximum output index
    ✓ should handle valid tx test with cache: An invalid P2SH Transaction
    ✓ should handle valid tx test with cache: A valid P2SH Transaction using the standard transaction type put forth in BIP 16
    ✓ should handle valid tx test with cache: Tests for CheckTransaction() MAX_MONEY output
    ✓ should handle valid tx test with cache: MAX_MONEY output + 0 output
    ✓ should handle valid tx test with cache: Coinbase of size 2 Note the input is just required to make the tester happy
    ✓ should handle valid tx test with cache: Coinbase of size 100 Note the input is just required to make the tester happy
    ✓ should handle valid tx test with cache: Simple transaction with first input is signed with SIGHASH_ALL, second with SIGHASH_ANYONECANPAY
    ✓ should handle valid tx test with cache: Same as above, but we change the sequence number of the first input to check that SIGHASH_ANYONECANPAY is being followed
    ✓ should handle valid tx test with cache: afd9c17f8913577ec3509520bd6e5d63e9c0fd2a5f70c787993b097ba6ca9fae which has several SIGHASH_SINGLE signatures
    ✓ should handle valid tx test with cache: ddc454a1c0c35c188c98976b17670f69e586d9c0f3593ea879928332f0a069e7, which spends an input that pushes using a PUSHDATA1 that is negative when read as signed
    ✓ should handle valid tx test with cache: Correct signature order Note the input is just required to make the tester happy
    ✓ should handle valid tx test with cache: cc60b1f899ec0a69b7c3f25ddf32c4524096a9c5b01cbd84c6d0312a0c478984, which is a fairly strange transaction which relies on OP_CHECKSIG returning 0 when checking a completely invalid sig of length 0
    ✓ should handle valid tx test with cache: Empty pubkey
    ✓ should handle valid tx test with cache: Empty signature
    ✓ should handle valid tx test with cache: <Script: OP_1 OP_0 0x21 0x02136b04758b0b6e363e7a6fbe83aaf527a153db2b060d36cc29f7f8309ba6e458 OP_2 OP_CHECKMULTISIG>
    ✓ should handle valid tx test with cache: <Script: OP_1 0x21 0x03905380c7013e36e6e19d305311c1b81fce6581f5ee1c86ef0627c68c9362fc9f OP_0 OP_2 OP_CHECKMULTISIG>
    ✓ should handle valid tx test with cache: <Script: OP_2 0x21 0x033bcaa0a602f0d44cc9d5637c6e515b0471db514c020883830b7cefd73af04194 0x21 0x03a88b326f8767f4f192ce252afe33c94d25ab1d24f27f159b3cb3aa691ffe1423 OP_2 OP_CHECKMULTISIG OP_NOT>
    ✓ should handle valid tx test with cache: <Script: OP_2 0x21 0x037c615d761e71d38903609bf4f46847266edc2fb37532047d747ba47eaae5ffe1 0x21 0x02edc823cd634f2c4033d94f5755207cb6b60c4b1f1f056ad7471c47de5f2e4d50 OP_2 OP_CHECKMULTISIG OP_NOT>
    ✓ should handle valid tx test with cache: OP_CODESEPARATOR tests Test that SignatureHash() removes OP_CODESEPARATOR with FindAndDelete()
    ✓ should handle valid tx test with cache: <Script: OP_CODESEPARATOR OP_CODESEPARATOR 0x21 0x038479a0fa998cd35259a2ef0a7a5c68662c1474f88ccb6d08a7677bbec7f22041 OP_CHECKSIG>
    ✓ should handle valid tx test with cache: Hashed data starts at the CODESEPARATOR
    ✓ should handle valid tx test with cache: But only if execution has reached it
    ✓ should handle valid tx test with cache: CODESEPARATOR in an unexecuted IF block does not change what is hashed
    ✓ should handle valid tx test with cache: As above, with the IF block executed
    ✓ should handle valid tx test with cache: CHECKSIG is legal in scriptSigs
    ✓ should handle valid tx test with cache: Same semantics for OP_CODESEPARATOR
    ✓ should handle valid tx test with cache: Signatures are removed from the script they are in by FindAndDelete() in the CHECKSIG code; even multiple instances of one signature can be removed.
    ✓ should handle valid tx test with cache: That also includes ahead of the opcode being executed.
    ✓ should handle valid tx test with cache: Finally CHECKMULTISIG removes all signatures prior to hashing the script containing those signatures. In conjunction with the SIGHASH_SINGLE bug this lets us test whether or not FindAndDelete() is actually present in scriptPubKey/redeemScript evaluation by including a signature of the digest 0x01 We can compute in advance for our pubkey, embed it in the scriptPubKey, and then also using a normal SIGHASH_ALL signature. If FindAndDelete() wasn't run, the 'bugged' signature would still be in the hashed script, and the normal signature would fail. Here's an example on mainnet within a P2SH redeemScript. Remarkably it's a standard transaction in <0.9
    ✓ should handle valid tx test with cache: Same idea, but with bare CHECKMULTISIG
    ✓ should handle valid tx test with cache: CHECKLOCKTIMEVERIFY tests By-height locks, with argument == 0 and == tx nLockTime
    ✓ should handle valid tx test with cache: <Script: 499999999 OP_CHECKLOCKTIMEVERIFY OP_1>
    ✓ should handle valid tx test with cache: <Script: OP_0 OP_CHECKLOCKTIMEVERIFY OP_1>
    ✓ should handle valid tx test with cache: By-time locks, with argument just beyond tx nLockTime (but within numerical boundaries)
    ✓ should handle valid tx test with cache: <Script: 0x05 0xffffffff00 OP_CHECKLOCKTIMEVERIFY OP_1>
    ✓ should handle valid tx test with cache: <Script: 500000000 OP_CHECKLOCKTIMEVERIFY OP_1>
    ✓ should handle valid tx test with cache: Any non-maxint nSequence is fine
    ✓ should handle valid tx test with cache: The argument can be calculated rather than created directly by a PUSHDATA
    ✓ should handle valid tx test with cache: Perhaps even by an ADD producing a 5-byte result that is out of bounds for other opcodes
    ✓ should handle valid tx test with cache: 5 byte non-minimally-encoded arguments are valid
    ✓ should handle valid tx test with cache: Valid CHECKLOCKTIMEVERIFY in scriptSig
    ✓ should handle valid tx test with cache: Valid CHECKLOCKTIMEVERIFY in redeemScript
    ✓ should handle valid tx test with cache: A transaction with a non-standard DER signature.
    ✓ should handle valid tx test with cache: CHECKSEQUENCEVERIFY tests By-height locks, with argument == 0 and == txin.nSequence
    ✓ should handle valid tx test with cache: <Script: 65535 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle valid tx test with cache: <Script: 65535 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle valid tx test with cache: <Script: OP_0 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle valid tx test with cache: By-time locks, with argument == 0 and == txin.nSequence
    ✓ should handle valid tx test with cache: <Script: 4259839 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle valid tx test with cache: <Script: 4259839 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle valid tx test with cache: <Script: 4194304 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle valid tx test with cache: Upper sequence with upper sequence is fine
    ✓ should handle valid tx test with cache: <Script: 0x05 0xffffffff00 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle valid tx test with cache: <Script: 0x05 0x0000008000 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle valid tx test with cache: <Script: 0x05 0xffffffff00 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle valid tx test with cache: <Script: 0x05 0x0000008000 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle valid tx test with cache: <Script: 0x05 0xffffffff00 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle valid tx test with cache: Argument 2^31 with various nSequence
    ✓ should handle valid tx test with cache: <Script: 0x05 0x0000008000 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle valid tx test with cache: <Script: 0x05 0x0000008000 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle valid tx test with cache: Argument 2^32-1 with various nSequence
    ✓ should handle valid tx test with cache: <Script: 0x05 0xffffffff00 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle valid tx test with cache: <Script: 0x05 0xffffffff00 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle valid tx test with cache: Argument 3<<31 with various nSequence
    ✓ should handle valid tx test with cache: <Script: 0x05 0x0000008001 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle valid tx test with cache: <Script: 0x05 0x0000008001 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle valid tx test with cache: 5 byte non-minimally-encoded operandss are valid
    ✓ should handle valid tx test with cache: The argument can be calculated rather than created directly by a PUSHDATA
    ✓ should handle valid tx test with cache: <Script: 4194304 OP_1SUB OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle valid tx test with cache: An ADD producing a 5-byte result that sets CTxIn::SEQUENCE_LOCKTIME_DISABLE_FLAG
    ✓ should handle valid tx test with cache: <Script: 2147483647 4259840 OP_ADD OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle valid tx test with cache: Valid CHECKSEQUENCEVERIFY in scriptSig
    ✓ should handle valid tx test with cache: Valid CHECKSEQUENCEVERIFY in redeemScript
    ✓ should handle valid tx test with cache: Valid P2WPKH (Private key of segwit tests is L5AQtV2HDm4xGsseLokK2VAT2EtYKcTm3c7HwqnJBFt9LdaQULsM)
    ✓ should handle valid tx test with cache: Valid P2WSH
    ✓ should handle valid tx test with cache: Valid P2SH(P2WPKH)
    ✓ should handle valid tx test with cache: Valid P2SH(P2WSH)
    ✓ should handle valid tx test with cache: Witness with SigHash Single|AnyoneCanPay
    ✓ should handle valid tx test with cache: Witness with SigHash Single|AnyoneCanPay (same signature as previous)
    ✓ should handle valid tx test with cache: Witness with SigHash Single
    ✓ should handle valid tx test with cache: Witness with SigHash Single (same signature as previous)
    ✓ should handle valid tx test with cache: Witness with SigHash None|AnyoneCanPay
    ✓ should handle valid tx test with cache: Witness with SigHash None|AnyoneCanPay (same signature as previous)
    ✓ should handle valid tx test with cache: Witness with SigHash None
    ✓ should handle valid tx test with cache: Witness with SigHash None (same signature as previous)
    ✓ should handle valid tx test with cache: Witness with SigHash None (same signature, only sequences changed)
    ✓ should handle valid tx test with cache: Witness with SigHash All|AnyoneCanPay
    ✓ should handle valid tx test with cache: Witness with SigHash All|AnyoneCanPay (same signature as previous)
    ✓ should handle valid tx test with cache: Unknown witness program version  (without DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM)
    ✓ should handle valid tx test with cache: Witness with a push of 520 bytes
    ✓ should handle valid tx test with cache: Transaction mixing all SigHash, segwit and normal inputs
    ✓ should handle valid tx test with cache: Unknown version witness program with empty witness
    ✓ should handle valid tx test with cache: Witness SIGHASH_SINGLE with output out of bound
    ✓ should handle valid tx test with cache: 1 byte push should not be considered a witness scriptPubKey
    ✓ should handle valid tx test with cache: 41 bytes push should not be considered a witness scriptPubKey
    ✓ should handle valid tx test with cache: The witness version must use OP_1 to OP_16 only
    ✓ should handle valid tx test with cache: The witness program push must be canonical
    ✓ should handle valid tx test with cache: Witness Single|AnyoneCanPay does not hash input's position
    ✓ should handle valid tx test with cache: Witness Single|AnyoneCanPay does not hash input's position (permutation)
    ✓ should handle valid tx test with cache: Non witness Single|AnyoneCanPay hash input's position
    ✓ should handle valid tx test with cache: BIP143 examples: details and private keys are available in BIP143 BIP143 example: P2WSH with OP_CODESEPARATOR and out-of-range SIGHASH_SINGLE.
    ✓ should handle valid tx test with cache: BIP143 example: P2WSH with unexecuted OP_CODESEPARATOR and SINGLE|ANYONECANPAY
    ✓ should handle valid tx test with cache: BIP143 example: Same as the previous example with input-output pairs swapped
    ✓ should handle valid tx test with cache: BIP143 example: P2SH-P2WSH 6-of-6 multisig signed with 6 different SIGHASH types
    ✓ should handle valid tx test with cache: FindAndDelete tests This is a test of FindAndDelete. The first tx is a spend of normal P2SH and the second tx is a spend of bare P2WSH. The redeemScript/witnessScript is CHECKSIGVERIFY <0x30450220487fb382c4974de3f7d834c1b617fe15860828c7f96454490edd6d891556dcc9022100baf95feb48f845d5bfc9882eb6aeefa1bc3790e39f59eaa46ff7f15ae626c53e01>. The signature is <0x30450220487fb382c4974de3f7d834c1b617fe15860828c7f96454490edd6d891556dcc9022100baf95feb48f845d5bfc9882eb6aeefa1bc3790e39f59eaa46ff7f15ae626c53e01> <pubkey>, where the pubkey is obtained through key recovery with sig and correct sighash. This is to show that FindAndDelete is applied only to non-segwit scripts Non-segwit: correct sighash (with FindAndDelete) = 1ba1fe3bc90c5d1265460e684ce6774e324f0fabdf67619eda729e64e8b6bc08
    ✓ should handle valid tx test with cache: BIP143: correct sighash (without FindAndDelete) = 71c9cd9b2869b9c70b01b1f0360c148f42dee72297db312638df136f43311f23
    ✓ should handle valid tx test with cache: This is multisig version of the FindAndDelete tests Script is 2 CHECKMULTISIGVERIFY <sig1> <sig2> DROP 52af4830450220487fb382c4974de3f7d834c1b617fe15860828c7f96454490edd6d891556dcc9022100baf95feb48f845d5bfc9882eb6aeefa1bc3790e39f59eaa46ff7f15ae626c53e0148304502205286f726690b2e9b0207f0345711e63fa7012045b9eb0f19c2458ce1db90cf43022100e89f17f86abc5b149eba4115d4f128bcf45d77fb3ecdd34f594091340c0395960175 Signature is 0 <sig1> <sig2> 2 <key1> <key2> Non-segwit: correct sighash (with FindAndDelete) = 1d50f00ba4db2917b903b0ec5002e017343bb38876398c9510570f5dce099295
    ✓ should handle valid tx test with cache: BIP143: correct sighash (without FindAndDelete) = c1628a1e7c67f14ca0c27c06e4fdeec2e6d1a73c7a91d7c046ff83e835aebb72
    ✓ should handle invalid tx test with cache: The following are deserialized transactions which are invalid. They are in the form [[[prevout hash, prevout index, prevout scriptPubKey, amount?], [input 2], ...], serializedTransaction, verifyFlags] Objects that are only a single string (like this one) are ignored 0e1b5688cf179cd9f7cbda1fac0090f6e684bbf8cd946660120197c3f3681809 but with extra junk appended to the end of the scriptPubKey
    ✓ should handle invalid tx test with cache: This is the nearly-standard transaction with CHECKSIGVERIFY 1 instead of CHECKSIG from tx_valid.json but with the signature duplicated in the scriptPubKey with a non-standard pushdata prefix See FindAndDelete, which will only remove if it uses the same pushdata prefix as is standard
    ✓ should handle invalid tx test with cache: Same as above, but with the sig in the scriptSig also pushed with the same non-standard OP_PUSHDATA
    ✓ should handle invalid tx test with cache: This is the nearly-standard transaction with CHECKSIGVERIFY 1 instead of CHECKSIG from tx_valid.json but with the signature duplicated in the scriptPubKey with a different hashtype suffix See FindAndDelete, which will only remove if the signature, including the hash type, matches
    ✓ should handle invalid tx test with cache: An invalid P2SH Transaction
    ✓ should handle invalid tx test with cache: Tests for CheckTransaction() No outputs
    ✓ should handle invalid tx test with cache: Negative output
    ✓ should handle invalid tx test with cache: MAX_MONEY + 1 output
    ✓ should handle invalid tx test with cache: MAX_MONEY output + 1 output
    ✓ should handle invalid tx test with cache: Duplicate inputs
    ✓ should handle invalid tx test with cache: Coinbase of size 1 Note the input is just required to make the tester happy
    ✓ should handle invalid tx test with cache: Coinbase of size 101 Note the input is just required to make the tester happy
    ✓ should handle invalid tx test with cache: Null txin, but without being a coinbase (because there are two inputs)
    ✓ should handle invalid tx test with cache: <Script: OP_1>
    ✓ should handle invalid tx test with cache: Same as the transactions in valid with one input SIGHASH_ALL and one SIGHASH_ANYONECANPAY, but we set the _ANYONECANPAY sequence number, invalidating the SIGHASH_ALL signature
    ✓ should handle invalid tx test with cache: CHECKMULTISIG with incorrect signature order Note the input is just required to make the tester happy
    ✓ should handle invalid tx test with cache: The following is a tweaked form of 23b397edccd3740a74adb603c9756370fafcde9bcc4483eb271ecad09a94dd63 It is an OP_CHECKMULTISIG with the dummy value missing
    ✓ should handle invalid tx test with cache: CHECKMULTISIG SCRIPT_VERIFY_NULLDUMMY tests: The following is a tweaked form of 23b397edccd3740a74adb603c9756370fafcde9bcc4483eb271ecad09a94dd63 It is an OP_CHECKMULTISIG with the dummy value set to something other than an empty string
    ✓ should handle invalid tx test with cache: As above, but using a OP_1
    ✓ should handle invalid tx test with cache: As above, but using a OP_1NEGATE
    ✓ should handle invalid tx test with cache: As above, but with the dummy byte missing
    ✓ should handle invalid tx test with cache: Empty stack when we try to run CHECKSIG
    ✓ should handle invalid tx test with cache: Inverted versions of tx_valid CODESEPARATOR IF block tests CODESEPARATOR in an unexecuted IF block does not change what is hashed
    ✓ should handle invalid tx test with cache: As above, with the IF block executed
    ✓ should handle invalid tx test with cache: CHECKLOCKTIMEVERIFY tests By-height locks, with argument just beyond tx nLockTime
    ✓ should handle invalid tx test with cache: <Script: 499999999 OP_CHECKLOCKTIMEVERIFY OP_1>
    ✓ should handle invalid tx test with cache: By-time locks, with argument just beyond tx nLockTime (but within numerical boundaries)
    ✓ should handle invalid tx test with cache: <Script: 0x05 0xffffffff00 OP_CHECKLOCKTIMEVERIFY OP_1>
    ✓ should handle invalid tx test with cache: Argument missing
    ✓ should handle invalid tx test with cache: <Script: OP_1>
    ✓ should handle invalid tx test with cache: Argument negative with by-blockheight nLockTime=0
    ✓ should handle invalid tx test with cache: Argument negative with by-blocktime nLockTime=500,000,000
    ✓ should handle invalid tx test with cache: <Script: OP_1>
    ✓ should handle invalid tx test with cache: Input locked
    ✓ should handle invalid tx test with cache: <Script: OP_0>
    ✓ should handle invalid tx test with cache: Another input being unlocked isn't sufficient; the CHECKLOCKTIMEVERIFY-using input must be unlocked
    ✓ should handle invalid tx test with cache: Argument/tx height/time mismatch, both versions
    ✓ should handle invalid tx test with cache: <Script: OP_0>
    ✓ should handle invalid tx test with cache: <Script: 499999999 OP_CHECKLOCKTIMEVERIFY OP_1>
    ✓ should handle invalid tx test with cache: <Script: 500000000 OP_CHECKLOCKTIMEVERIFY OP_1>
    ✓ should handle invalid tx test with cache: <Script: 500000000 OP_CHECKLOCKTIMEVERIFY OP_1>
    ✓ should handle invalid tx test with cache: Argument 2^32 with nLockTime=2^32-1
    ✓ should handle invalid tx test with cache: Same, but with nLockTime=2^31-1
    ✓ should handle invalid tx test with cache: 6 byte non-minimally-encoded arguments are invalid even if their contents are valid
    ✓ should handle invalid tx test with cache: Failure due to failing CHECKLOCKTIMEVERIFY in scriptSig
    ✓ should handle invalid tx test with cache: Failure due to failing CHECKLOCKTIMEVERIFY in redeemScript
    ✓ should handle invalid tx test with cache: A transaction with a non-standard DER signature.
    ✓ should handle invalid tx test with cache: CHECKSEQUENCEVERIFY tests By-height locks, with argument just beyond txin.nSequence
    ✓ should handle invalid tx test with cache: <Script: 4259839 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle invalid tx test with cache: By-time locks, with argument just beyond txin.nSequence (but within numerical boundries)
    ✓ should handle invalid tx test with cache: <Script: 4259839 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle invalid tx test with cache: Argument missing
    ✓ should handle invalid tx test with cache: Argument negative with by-blockheight txin.nSequence=0
    ✓ should handle invalid tx test with cache: Argument negative with by-blocktime txin.nSequence=CTxIn::SEQUENCE_LOCKTIME_TYPE_FLAG
    ✓ should handle invalid tx test with cache: Argument/tx height/time mismatch, both versions
    ✓ should handle invalid tx test with cache: <Script: 65535 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle invalid tx test with cache: <Script: 4194304 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle invalid tx test with cache: <Script: 4259839 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle invalid tx test with cache: 6 byte non-minimally-encoded arguments are invalid even if their contents are valid
    ✓ should handle invalid tx test with cache: Failure due to failing CHECKSEQUENCEVERIFY in scriptSig
    ✓ should handle invalid tx test with cache: Failure due to failing CHECKSEQUENCEVERIFY in redeemScript
    ✓ should handle invalid tx test with cache: Failure due to insufficient tx.nVersion (<2)
    ✓ should handle invalid tx test with cache: <Script: 4194304 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle invalid tx test with cache: Unknown witness program version (with DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM)
    ✓ should handle invalid tx test with cache: Unknown length for witness program v0
    ✓ should handle invalid tx test with cache: Witness with SigHash Single|AnyoneCanPay (same index output value changed)
    ✓ should handle invalid tx test with cache: Witness with SigHash None|AnyoneCanPay (input sequence changed)
    ✓ should handle invalid tx test with cache: Witness with SigHash All|AnyoneCanPay (third output value changed)
    ✓ should handle invalid tx test with cache: Witness with a push of 521 bytes
    ✓ should handle invalid tx test with cache: Witness with unknown version which push false on the stack should be invalid (even without DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM)
    ✓ should handle invalid tx test with cache: Witness program should leave clean stack
    ✓ should handle invalid tx test with cache: Witness v0 with a push of 2 bytes
    ✓ should handle invalid tx test with cache: Unknown witness version with non empty scriptSig
    ✓ should handle invalid tx test with cache: Non witness Single|AnyoneCanPay hash input's position (permutation)
    ✓ should handle invalid tx test with cache: P2WSH with a redeem representing a witness scriptPubKey should fail
    ✓ should handle invalid tx test with cache: 33 bytes push should be considered a witness scriptPubKey
    ✓ should handle invalid tx test with cache: FindAndDelete tests This is a test of FindAndDelete. The first tx is a spend of normal scriptPubKey and the second tx is a spend of bare P2WSH. The redeemScript/witnessScript is CHECKSIGVERIFY <0x30450220487fb382c4974de3f7d834c1b617fe15860828c7f96454490edd6d891556dcc9022100baf95feb48f845d5bfc9882eb6aeefa1bc3790e39f59eaa46ff7f15ae626c53e01>. The signature is <0x30450220487fb382c4974de3f7d834c1b617fe15860828c7f96454490edd6d891556dcc9022100baf95feb48f845d5bfc9882eb6aeefa1bc3790e39f59eaa46ff7f15ae626c53e01> <pubkey>, where the pubkey is obtained through key recovery with sig and the wrong sighash. This is to show that FindAndDelete is applied only to non-segwit scripts To show that the tests are 'correctly wrong', they should pass by modifying OP_CHECKSIG under interpreter.cpp by replacing (sigversion == SIGVERSION_BASE) with (sigversion != SIGVERSION_BASE) Non-segwit: wrong sighash (without FindAndDelete) = 1ba1fe3bc90c5d1265460e684ce6774e324f0fabdf67619eda729e64e8b6bc08
    ✓ should handle invalid tx test with cache: BIP143: wrong sighash (with FindAndDelete) = 71c9cd9b2869b9c70b01b1f0360c148f42dee72297db312638df136f43311f23
    ✓ should handle invalid tx test with cache: This is multisig version of the FindAndDelete tests Script is 2 CHECKMULTISIGVERIFY <sig1> <sig2> DROP 52af4830450220487fb382c4974de3f7d834c1b617fe15860828c7f96454490edd6d891556dcc9022100baf95feb48f845d5bfc9882eb6aeefa1bc3790e39f59eaa46ff7f15ae626c53e0148304502205286f726690b2e9b0207f0345711e63fa7012045b9eb0f19c2458ce1db90cf43022100e89f17f86abc5b149eba4115d4f128bcf45d77fb3ecdd34f594091340c0395960175 Signature is 0 <sig1> <sig2> 2 <key1> <key2> Should pass by replacing (sigversion == SIGVERSION_BASE) with (sigversion != SIGVERSION_BASE) under OP_CHECKMULTISIG Non-segwit: wrong sighash (without FindAndDelete) = 4bc6a53e8e16ef508c19e38bba08831daba85228b0211f323d4cb0999cf2a5e8
    ✓ should handle invalid tx test with cache: BIP143: wrong sighash (with FindAndDelete) = 17c50ec2181ecdfdc85ca081174b248199ba81fff730794d4f69b8ec031f2dce
    ✓ should get sighash of 31af167a6cf3f9d5f6875caa4d31704ceb0eba078d132b78dab52c3b8997317e (03) with cache
    ✓ should get sighash of 48d6a1bd2cd9eec54eb866fc71209418a950402b5d7e52363bfb75c98e141175 (00) with cache
    ✓ should get sighash of 2a3d95b09237b72034b23f2d2bb29fa32a58ab5c6aa72f6aafdfa178ab1dd01c (01) with cache
    ✓ should get sighash of 06e328de263a87b09beabe222a21627a6ea5c7f560030da31610c4611f4a46bc (81) with cache
    ✓ should get sighash of f03aa4fc5f97e826323d0daa03343ebf8a34ed67a1ce18631f8b88e5c992e798 (01) with cache
    ✓ should get sighash of 746306f322de2b4b58ffe7faae83f6a72433c22f88062cdde881d4dd8a5a4e2d (01) with cache
    ✓ should get sighash of 5c9d3a2ce9365bb72cfabbaa4579c843bb8abf200944612cf8ae4b56a908bcbd (80) with cache
    ✓ should get sighash of c336b2f7d3702fbbdeffc014d106c69e3413c7c71e436ba7562d8a7a2871f181 (01) with cache
    ✓ should get sighash of 29aa6d2d752d3310eba20442770ad345b7f6a35f96161ede5f07b33e92053e2a (83) with cache
    ✓ should get sighash of bf5fdc314ded2372a0ad078568d76c5064bf2affbde0764c335009e56634481b (02) with cache
    ✓ should get sighash of 191ab180b0d753763671717d051f138d4866b7cb0d1d4811472e64de595d2c70 (02) with cache
    ✓ should get sighash of b6632ac53578a741ae8c36d8b69e79f39b89913a2c781cdf1bf47a8c29d997a5 (81) with cache
    ✓ should get sighash of 6e3735d37a4b28c45919543aabcb732e7a3e1874db5315abb7cc6b143d62ff10 (02) with cache
    ✓ should get sighash of d76d0fc0abfa72d646df888bce08db957e627f72962647016eeae5a8412354cf (81) with cache
    ✓ should get sighash of 6e48f3da3a4ac07eb4043a232df9f84e110485d7c7669dd114f679c27d15b97e (82) with cache
    ✓ should get sighash of c6076b6a45e6fcfba14d3df47a34f6aadbacfba107e95621d8d7c9c0e40518ed (80) with cache
    ✓ should get sighash of aeb8c5a62e8a0b572c28f2029db32854c0b614dbecef0eaa726abebb42eebb8d (83) with cache
    ✓ should get sighash of a6e6cb69f409ec14e10dd476f39167c29e586e99bfac93a37ed2c230fcc1dbbe (01) with cache
    ✓ should get sighash of 7ca0f75e6530ec9f80d031fc3513ca4ecd67f20cb38b4dacc6a1d825c3cdbfdb (80) with cache
    ✓ should get sighash of 58294f0d7f2e68fe1fd30c01764fe1619bcc7961d68968944a0e263af6550437 (00) with cache
    ✓ should get sighash of 8b300032a1915a4ac05cea2f7d44c26f2a08d109a71602636f15866563eaafdc (81) with cache
    ✓ should get sighash of d55ed1e6c53510f2608716c12132a11fb5e662ec67421a513c074537eeccc34b (80) with cache
    ✓ should get sighash of 2765bbdcd3ebb8b1a316c04656b28d637f80bffbe9b040661481d3dc83eea6d6 (02) with cache
    ✓ should get sighash of 663c999a52288c9999bff36c9da2f8b78d5c61b8347538f76c164ccba9868d0a (01) with cache
    ✓ should get sighash of b9c3aee8515a4a3b439de1ffc9c156824bda12cb75bfe5bc863164e8fd31bd7a (01) with cache
    ✓ should get sighash of be567cb47170b34ff81c66c1142cb9d27f9b6898a384d6dfc4fce16b75b6cb14 (82) with cache
    ✓ should get sighash of 2149e79c3f4513da4e4378608e497dcfdfc7f27c21a826868f728abd2b8a637a (03) with cache
    ✓ should get sighash of 32db877b6b1ca556c9e859442329406f0f8246706522369839979a9f7a235a32 (02) with cache
    ✓ should get sighash of edf73e2396694e58f6b619f68595b0c1cdcb56a9b3147845b6d6afdb5a80b736 (00) with cache
    ✓ should get sighash of f0a2deee7fd8a3a9fad6927e763ded11c940ee47e9e6d410f94fda5001f82e0c (01) with cache
    ✓ should get sighash of aa418d096929394c9147be8818d8c9dafe6d105945ab9cd7ec682df537b5dd79 (01) with cache
    ✓ should get sighash of eb9ceecc3b401224cb79a44d23aa8f428e29f1405daf69b4e01910b848ef1523 (83) with cache
    ✓ should get sighash of 88fdee1c2d4aeead71d62396e28dc4d00e5a23498eea66844b9f5d26d1f21042 (03) with cache
    ✓ should get sighash of f6a1ecb50bd7c2594ebecea5a1aa23c905087553e40486dade793c2f127fdfae (80) with cache
    ✓ should get sighash of f7efb74b1dcc49d316b49c632301bc46f98d333c427e55338be60c7ef0d953be (80) with cache
    ✓ should get sighash of f2286001af0b0170cbdad92693d0a5ebaa8262a4a9d66e002f6d79a8c94026d1 (82) with cache
    ✓ should get sighash of 30df2473e1403e2b8e637e576825f785528d998af127d501556e5f7f5ed89a2a (00) with cache
    ✓ should get sighash of 7f21b62267ed52462e371a917eb3542569a4049b9dfca2de3c75872b39510b26 (81) with cache
    ✓ should get sighash of 8af0b4cbdbc011be848edf4dbd2cde96f0578d662cfebc42252495387114224a (01) with cache
    ✓ should get sighash of 40ed8e7bbbd893e15f3cce210ae02c97669818de5946ca37eefc7541116e2c78 (00) with cache
    ✓ should get sighash of 136beb95459fe6b126cd6cefd54eb5d971524b0e883e41a292a78f78015cb8d5 (83) with cache
    ✓ should get sighash of 9eb8adf2caecb4bf9ac59d7f46bd20e83258472db2f569ee91aba4cf5ee78e29 (01) with cache
    ✓ should get sighash of 5ca70e727d91b1a42b78488af2ed551642c32d3de4712a51679f60f1456a8647 (03) with cache
    ✓ should get sighash of 2be27a686eb7940dd32c44ff3a97c1b28feb7ab9c5c0b1593b2d762361cfc2db (01) with cache
    ✓ should get sighash of 49c8a6940a461cc7225637f1e512cdd174c99f96ec05935a59637ededc77124c (03) with cache
    ✓ should get sighash of 7f208df9a5507e98c62cebc5c1e2445eb632e95527594929b9577b53363e96f6 (80) with cache
    ✓ should get sighash of 5fa09d43c8aef6f6fa01c383a69a5a61a609cd06e37dce35a39dc9eae3ddfe6c (81) with cache
    ✓ should get sighash of 713ddeeefcfe04929e7b6593c792a4efbae88d2b5280d1f0835d2214eddcbad6 (03) with cache
    ✓ should get sighash of fe42f73a8742676e640698222b1bd6b9c338ff1ccd766d3d88d7d3c6c6ac987e (80) with cache
    ✓ should get sighash of 551ce975d58647f10adefb3e529d9bf9cda34751627ec45e690f135ef0034b95 (82) with cache
    ✓ should get sighash of 069f38fd5d47abff46f04ee3ae27db03275e9aa4737fa0d2f5394779f9654845 (82) with cache
    ✓ should get sighash of 6da32416deb45a0d720a1dbe6d357886eabc44029dd5db74d50feaffbe763245 (03) with cache
    ✓ should get sighash of 76c4013c40bfa1481badd9d342b6d4b8118de5ab497995fafbf73144469e5ff0 (01) with cache
    ✓ should get sighash of fb7eca81d816354b6aedec8cafc721d5b107336657acafd0d246049556f9e04b (82) with cache
    ✓ should get sighash of 8085e904164ab9a8c20f58f0d387f6adb3df85532e11662c03b53c3df8c943cb (03) with cache
    ✓ should get sighash of 9db4e320208185ee70edb4764ee195deca00ba46412d5527d9700c1cf1c3d057 (00) with cache
    ✓ should get sighash of 0133f1a161363b71dfb3a90065c7128c56bd0028b558b610142df79e055ab5c7 (01) with cache
    ✓ should get sighash of d1df1f4bba2484cff8a816012bb6ec91c693e8ca69fe85255e0031711081c46a (02) with cache
    ✓ should get sighash of 40b4f03c68288bdc996011b0f0ddb4b48dc3be6762db7388bdc826113266cd6c (00) with cache
    ✓ should get sighash of 2ef025e907f0fa454a2b48a4f3b81346ba2b252769b5c35d742d0c8985e0bf5e (80) with cache
    ✓ should get sighash of 1f8a3aca573a609f4aea0c69522a82fcb4e15835449da24a05886ddc601f4f6a (02) with cache
    ✓ should get sighash of 0d17a92c8d5041ba09b506ddf9fd48993be389d000aad54f9cc2a44fcc70426b (03) with cache
    ✓ should get sighash of 8221d5dfb75fc301a80e919e158e0b1d1e86ffb08870a326c89408d9bc17346b (00) with cache
    ✓ should get sighash of 13e8b5ab4e5b2ceeff0045c625e19898bda2d39fd7af682e2d1521303cfe1154 (02) with cache
    ✓ should get sighash of 87ddf1f9acb6640448e955bd1968f738b4b3e073983af7b83394ab7557f5cd61 (00) with cache
    ✓ should get sighash of da8405db28726dc4e0f82b61b2bfd82b1baa436b4e59300305cc3b090b157504 (03) with cache
    ✓ should get sighash of ed53cc766cf7cb8071cec9752460763b504b2183442328c5a9761eb005c69501 (02) with cache
    ✓ should get sighash of e1a256854099907050cfee7778f2018082e735a1f1a3d91437584850a74c87bb (81) with cache
    ✓ should get sighash of abe441209165d25bc6d8368f2e7e7dc21019056719fef1ace45542aa2ef282e2 (02) with cache
    ✓ should get sighash of 0dd1bd5c25533bf5f268aa316ce40f97452cca2061f0b126a59094ca5b65f7a0 (81) with cache
    ✓ should get sighash of 73fe22099c826c34a74edf45591f5d7b3a888c8178cd08facdfd96a9a681261c (82) with cache
    ✓ should get sighash of eea96a48ee572aea33d75d0587ce954fcfb425531a7da39df26ef9a6635201be (82) with cache
    ✓ should get sighash of 5ec805e74ee934aa815ca5f763425785ae390282d46b5f6ea076b6ad6255a842 (81) with cache
    ✓ should get sighash of 42f5ba6f5fe1e00e652a08c46715871dc4b40d89d9799fd7c0ea758f86eab6a7 (02) with cache
    ✓ should get sighash of 8449d5247071325e5f8edcc93cb9666c0fecabb130ce0e5bef050575488477eb (02) with cache
    ✓ should get sighash of f98f95d0c5ec3ac3e699d81f6c440d2e7843eab15393eb023bc5a62835d6dcea (82) with cache
    ✓ should get sighash of f79e6b776e2592bad45ca328c54abf14050c241d8f822d982c36ea890fd45757 (80) with cache
    ✓ should get sighash of 771d4d87f1591a13d77e51858c16d78f1956712fe09a46ff1abcabbc1e7af711 (01) with cache
    ✓ should get sighash of 726bb88cdf3af2f7603a31f33d2612562306d08972a4412a55dbbc0e3363721c (80) with cache
    ✓ should get sighash of 1e0da47eedbbb381b0e0debbb76e128d042e02e65b11125e17fd127305fc65cd (03) with cache
    ✓ should get sighash of 55591346aec652980885a558cc5fc2e3f8d21cbd09f314a798e5a7ead5113ea6 (83) with cache
    ✓ should get sighash of f5b38b0f06e246e47ce622e5ee27d5512c509f8ac0e39651b3389815eff2ab93 (01) with cache
    ✓ should get sighash of eb2d8dea38e9175d4d33df41f4087c6fea038a71572e3bad1ea166353bf22184 (01) with cache
    ✓ should get sighash of 13d12a51598b34851e7066cd93ab8c5212d60c6ed2dae09d91672c10ccd7f87c (01) with cache
    ✓ should get sighash of 53ab197fa7e27b8a3f99ff48305e67081eb90e95d89d7e92d80cee25a03a6689 (03) with cache
    ✓ should get sighash of 93c34627f526d73f4bea044392d1a99776b4409f7d3d835f23b03c358f5a61c2 (00) with cache
    ✓ should get sighash of bbc9069b8615f3a52ac8a77359098dcc6c1ba88c8372d5d5fe080b99eb781e55 (80) with cache
    ✓ should get sighash of 5848d93491044d7f21884eef7a244fe7d38886f8ae60df49ce0dfb2a342cd51a (80) with cache
    ✓ should get sighash of 603a9b61cd30fcea43ef0a5c18b88ca372690b971b379ee9e01909c336280511 (01) with cache
    ✓ should get sighash of 3b320dd47f2702452a49a1288bdc74a19a4b849b132b6cad9a1d945d87dfbb23 (81) with cache
    ✓ should get sighash of 079fa62e9d9d7654da8b74b065da3154f3e63c315f25751b4d896733a1d67807 (80) with cache
    ✓ should get sighash of 2921a0e5e3ba83c57ba57c25569380c17986bf34c366ec216d4188d5ba8b0b47 (02) with cache
    ✓ should get sighash of 4aae6648f856994bed252d319932d78db55da50d32b9008216d5366b44bfdf8a (00) with cache
    ✓ should get sighash of 3f988922d8cd11c7adff1a83ce9499019e5ab5f424752d8d361cf1762e04269b (00) with cache
    ✓ should get sighash of bd36a50e0e0a4ecbf2709e68daef41eddc1c0c9769efaee57910e99c0a1d1343 (01) with cache
    ✓ should get sighash of 41bead1b073e1e9fee065dd612a617ca0689e8f9d3fed9d0acfa97398ebb404c (00) with cache
    ✓ should get sighash of 71dfcd2eb7f2e6473aed47b16a6d5fcbd0af22813d892e9765023151e07771ec (01) with cache
    ✓ should get sighash of 0d31a221c69bd322ef7193dd7359ddfefec9e0a1521d4a8740326d46e44a5d6a (80) with cache
    ✓ should get sighash of daec2af5622bbe220c762da77bab14dc75e7d28aa1ade9b7f100798f7f0fd97a (02) with cache
    ✓ should get sighash of 75a7db0df41485a28bf6a77a37ca15fa8eccc95b5d6014a731fd8adb9ada0f12 (83) with cache
    ✓ should get sighash of ced7ef84aad4097e1eb96310e0d1c8e512cfcb392a01d9010713459b23bc0cf4 (00) with cache
    ✓ should get sighash of c503001c16fbff82a99a18d88fe18720af63656fccd8511bca1c3d0d69bd7fc0 (01) with cache
    ✓ should get sighash of e84444d91580da41c8a7dcf6d32229bb106f1be0c811b2292967ead5a96ce9d4 (03) with cache
    ✓ should get sighash of ef4bd7622eb7b2bbbbdc48663c1bc90e01d5bde90ff4cb946596f781eb420a0c (83) with cache
    ✓ should get sighash of 4012f5ff2f1238a0eb84854074670b4703238ebc15bfcdcd47ffa8498105fcd9 (02) with cache
    ✓ should get sighash of e1600e6df8a6160a79ac32aa40bb4644daa88b5f76c0d7d13bf003327223f70c (03) with cache
    ✓ should get sighash of 05cf0ec9c61f1a15f651a0b3c5c221aa543553ce6c804593f43bb5c50bb91ffb (00) with cache
    ✓ should get sighash of d309da5afd91b7afa257cfd62df3ca9df036b6a9f4b38f5697d1daa1f587312b (00) with cache
    ✓ should get sighash of 72b7da10704c3ca7d1deb60c31b718ee12c70dc9dfb9ae3461edce50789fe2ba (02) with cache
    ✓ should get sighash of 393aa6c758e0eed15fa4af6d9e2d7c63f49057246dbb92b4268ec24fc87301ca (80) with cache
    ✓ should get sighash of 60b7544319b42e4159976c35c32c2644f0adf42eff13be1dc2f726fc0b6bb492 (83) with cache
    ✓ should get sighash of 6a9ac3f7da4c7735fbc91f728b52ecbd602233208f96ac5592656074a5db118a (82) with cache
    ✓ should get sighash of cfe147982afacde044ce66008cbc5b1e9f0fd9b8ed52b59fc7c0fecf95a39b0e (02) with cache
    ✓ should get sighash of 35e94b3776a6729d20aa2f3ddeeb06d3aad1c14cc4cde52fd21a4efc212ea16c (03) with cache
    ✓ should get sighash of ee4ea49d2aae0dbba05f0b9785172da54408eb1ec67d36759ff7ed25bfc28766 (81) with cache
    ✓ should get sighash of 299dcaac2bdaa627eba0dfd74767ee6c6f27c9200b49da8ff6270b1041669e7e (82) with cache
    ✓ should get sighash of a4c0773204ab418a939e23f493bd4b3e817375d133d307609e9782f2cc38dbcf (82) with cache
    ✓ should get sighash of cc180c4f797c16a639962e7aec58ec4b209853d842010e4d090895b22e7a7863 (01) with cache
    ✓ should get sighash of 566953eb806d40a9fb684d46c1bf8c69dea86273424d562bd407b9461c8509af (80) with cache
    ✓ should get sighash of 6e6307cef4f3a9b386f751a6f40acebab12a0e7e17171d2989293cbec7fd45c2 (83) with cache
    ✓ should get sighash of 577bf2b3520b40aef44899a20d37833f1cded6b167e4d648fc5abe203e43b649 (80) with cache
    ✓ should get sighash of 730bc25699b46703d7718fd5f5c34c4b5f00f594a9968ddc247fa7d5175124ed (03) with cache
    ✓ should get sighash of 66c488603b2bc53f0d22994a1f0f66fb2958203102eba30fe1d37b27a55de7a5 (83) with cache
    ✓ should get sighash of 051c0df7ac688c2c930808dabde1f50300aea115f2bb3334f4753d5169b51e46 (80) with cache
    ✓ should get sighash of ddfd902bba312a06197810da96a0ddccb595f96670b28ded7dba88d8cd0469b8 (80) with cache
    ✓ should get sighash of 96c2b32f0a00a5925db7ba72d0b5d39922f30ea0f7443b22bc1b734808513c47 (00) with cache
    ✓ should get sighash of bf078519fa87b79f40abc38f1831731422722c59f88d86775535f209cb41b9b1 (01) with cache
    ✓ should get sighash of e33d5ee08c0f3c130a44d7ce29606450271b676f4a80c52ab9ffab00cecf67f8 (82) with cache
    ✓ should get sighash of 8b57a7c3170c6c02dd14ae1d392ce3d828197b20e9145c89c1cfd5de050e1562 (83) with cache
    ✓ should get sighash of 3cb5b030e7da0b60ccce5b4a7f3793e6ca56f03e3799fe2d6c3cc22d6d841dcb (00) with cache
    ✓ should get sighash of add7f5da27262f13da6a1e2cc2feafdc809bd66a67fb8ae2a6f5e6be95373b6f (83) with cache
    ✓ should get sighash of 883a6ea3b2cc53fe8a803c229106366ca14d25ffbab9fef8367340f65b201da6 (02) with cache
    ✓ should get sighash of b5dab912bcabedff5f63f6dd395fc2cf030d83eb4dd28214baba68a45b4bfff0 (81) with cache
    ✓ should get sighash of 7fc74de39ce6ca46ca25d760d3cec7bb21fd14f7efe1c443b5aa294f2cb5f546 (00) with cache
    ✓ should get sighash of ab6baa6da3b2bc853868d166f8996ad31d63ef981179f9104f49968fd61c8427 (00) with cache
    ✓ should get sighash of 91178482112f94d1c8e929de443e4b9c893e18682998d393ca9ca77950412586 (00) with cache
    ✓ should get sighash of 5e1849e7368cf4f042718586d9bd831d61479b775bab97aba9f450042bd9876a (83) with cache
    ✓ should get sighash of e9995065e1fddef72a796eef5274de62012249660dc9d233a4f24e02a2979c87 (83) with cache
    ✓ should get sighash of 0e9c47973ef2c292b2252c623f465bbb92046fe0b893eebf4e1c9e02cb01c397 (80) with cache
    ✓ should get sighash of 32154c09174a9906183abf26538c39e78468344ca0848bbd0785e24a3565d932 (83) with cache
    ✓ should get sighash of 4605ae5fd3d50f9c45d37db7118a81a9ef6eb475d2333f59df5d3e216f150d49 (82) with cache
    ✓ should get sighash of ff9d7394002f3f196ea25472ea6c46f753bd879a7244795157bb7235c9322902 (80) with cache
    ✓ should get sighash of 59fc2959bb7bb24576cc8a237961ed95bbb900679d94da6567734c4390cb6ef5 (80) with cache
    ✓ should get sighash of e9f53d531c12cce1c50abed4ac521a372b4449b6a12f9327c80020df6bff66c0 (83) with cache
    ✓ should get sighash of fb51eb9d7e47d32ff2086205214f90c7c139e08c257a64829ae4d2b301071c6a (01) with cache
    ✓ should get sighash of 57a34ddeb1bf36d28c7294dda0432e9228a9c9e5cc5c692db98b6ed2e218d825 (02) with cache
    ✓ should get sighash of edb7c74223d1f10f9b3b9c1db8064bc487321ff7bb346f287c6bc2fad83682de (80) with cache
    ✓ should get sighash of f0672638a0e568a919e9d8a9cbd7c0189a3e132940beeb52f111a89dcc2daa2c (83) with cache
    ✓ should get sighash of 722efdd69a7d51d3d77bed0ac5544502da67e475ea5857cd5af6bdf640a69945 (01) with cache
    ✓ should get sighash of 659cd3203095d4a8672646add7d77831a1926fc5b66128801979939383695a79 (83) with cache
    ✓ should get sighash of d82d4ccd9b67810f26a378ad9592eb7a30935cbbd27e859b00981aefd0a72e08 (83) with cache
    ✓ should get sighash of 8eebac87e60da524bbccaf285a44043e2c9232868dda6c6271a53c153e7f3a55 (83) with cache
    ✓ should get sighash of 046de666545330e50d53083eb78c9336416902f9b96c77cc8d8e543da6dfc7e4 (82) with cache
    ✓ should get sighash of 478ee06501b4965b40bdba6cbaad9b779b38555a970912bb791b86b7191c54bc (80) with cache
    ✓ should get sighash of db0329439490efc64b7104d6d009b03fbc6fac597cf54fd786fbbb5fd73b92b4 (81) with cache
    ✓ should get sighash of 92364ba3c7a85d4e88885b8cb9b520dd81fc29e9d2b750d0790690e9c1246673 (80) with cache
    ✓ should get sighash of 1f4209fd4ce7f13d175fdd522474ae9b34776fe11a5f17a27d0796c77a2a7a9d (00) with cache
    ✓ should get sighash of b596f206d7eba22b7e2d1b7a4f4cf69c7c541b6c84dcc943f84e19a99a923310 (80) with cache
    ✓ should get sighash of e19b796c14a0373674968e342f2741d8b51092a5f8409e9bff7dcd52e56fcbcb (80) with cache
    ✓ should get sighash of 6e3e5ba77f760b6b5b5557b13043f1262418f3dd2ce7f0298b012811fc8ad5bc (83) with cache
    ✓ should get sighash of fad092fc98f17c2c20e10ba9a8eb44cc2bcc964b006f4da45cb9ceb249c69698 (02) with cache
    ✓ should get sighash of 5418cf059b5f15774836edd93571e0eed3855ba67b2b08c99dccab69dc87d3e9 (81) with cache
    ✓ should get sighash of 0d66003aff5bf78cf492ecbc8fd40c92891acd58d0a271be9062e035897f317e (03) with cache
    ✓ should get sighash of 4e4c9a781f626b59b1d3ad8f2c488eb6dee8bb19b9bc138bf0dc33e7799210d4 (81) with cache
    ✓ should get sighash of a869c18a0edf563d6e5eddd5d5ae8686f41d07f394f95c9feb8b7e52761531ca (03) with cache
    ✓ should get sighash of b1c50d58b753e8f6c7513752158e9802cf0a729ebe432b99acc0fe5d9b4e9980 (83) with cache
    ✓ should get sighash of 6b1459536f51482f5dbf42d7e561896557461e1e3b6bf67871e2b51faae2832c (80) with cache
    ✓ should get sighash of 154ff7a9f0875edcfb9f8657a0b98dd9600fabee3c43eb88af37cf99286d516c (83) with cache
    ✓ should get sighash of 849033a2321b5755e56ef4527ae6f51e30e3bca50149d5707368479723d744f8 (01) with cache
    ✓ should get sighash of 8556fe52d1d0782361dc28baaf8774b13f3ce5ed486ae0f124b665111e08e3e3 (01) with cache
    ✓ should get sighash of d9684685c99ce48f398fb467a91a1a59629a850c429046fb3071f1fa9a5fe816 (01) with cache
    ✓ should get sighash of 7e975a72db5adaa3c48d525d9c28ac11cf116d0f8b16ce08f735ad75a80aec66 (03) with cache
    ✓ should get sighash of 47bc8ab070273e1f4a0789c37b45569a6e16f3f3092d1ce94dddc3c34a28f9f4 (00) with cache
    ✓ should get sighash of f3374253d64ac264055bdbcc32e27426416bd595b7c7915936c70f839e504010 (03) with cache
    ✓ should get sighash of 8d7794703dad18e2e40d83f3e65269834bb293e2d2b8525932d6921884b8f368 (80) with cache
    ✓ should get sighash of 4e6357da0057fb7ff79da2cc0f20c5df27ff8b2f8af4c1709e6530459f7972b0 (83) with cache
    ✓ should get sighash of 83deef4a698b62a79d4877dd9afebc3011a5275dbe06e89567e9ef84e8a4ee19 (80) with cache
    ✓ should get sighash of 98ccde2dc14d14f5d8b1eeea5364bd18fc84560fec2fcea8de4d88b49c00695e (03) with cache
    ✓ should get sighash of a903c84d8c5e71134d1ab6dc1e21ac307c4c1a32c90c90f556f257b8a0ec1bf5 (80) with cache
    ✓ should get sighash of 83c68b3c5a89260ce16ce8b4dbf02e1f573c532d9a72f5ea57ab419fa2630214 (03) with cache
    ✓ should get sighash of 9c5fa02abfd34d0f9dec32bf3edb1089fca70016debdb41f4f54affcb13a2a2a (01) with cache
    ✓ should get sighash of f0bd4ca8e97203b9b4e86bc24bdc8a1a726db5e99b91000a14519dc83fc55c29 (01) with cache
    ✓ should get sighash of 5509eba029cc11d7dd2808b8c9eb47a19022b8d8b7778893459bbc19ab7ea820 (80) with cache
    ✓ should get sighash of 4ca73da4fcd5f1b10da07998706ffe16408aa5dff7cec40b52081a6514e3827e (83) with cache
    ✓ should get sighash of fb018ae54206fdd20c83ae5873ec82b8e320a27ed0d0662db09cda8a071f9852 (02) with cache
    ✓ should get sighash of 001b0b176f0451dfe2d9787b42097ceb62c70d324e925ead4c58b09eebdf7f67 (01) with cache
    ✓ should get sighash of ac87b1b93a6baab6b2c6624f10e8ebf6849b0378ef9660a3329073e8f5553c8d (03) with cache
    ✓ should get sighash of 0767e09bba8cd66d55915677a1c781acd5054f530d5cf6de2d34320d6c467d80 (82) with cache
    ✓ should get sighash of de35c84a58f2458c33f564b9e58bc57c3e028d629f961ad1b3c10ee020166e5a (01) with cache
    ✓ should get sighash of e2fa3e1976aed82c0987ab30d4542da2cb1cffc2f73be13480132da8c8558d5c (81) with cache
    ✓ should get sighash of 7de4ba875b2e584a7b658818c112e51ee5e86226f5a80e5f6b15528c86400573 (82) with cache
    ✓ should get sighash of 6b77ca70cc452cc89acb83b69857cda98efbfc221688fe816ef4cb4faf152f86 (01) with cache
    ✓ should get sighash of bd7d26bb3a98fc8c90c972500618bf894cb1b4fe37bf5481ff60eef439d3b970 (00) with cache
    ✓ should get sighash of 355ccaf30697c9c5b966e619a554d3323d7494c3ea280a9b0dfb73f953f5c1cb (02) with cache
    ✓ should get sighash of 353ca9619ccb0210ae18b24d0e57efa7abf8e58fa6f7102738e51e8e72c9f0c4 (81) with cache
    ✓ should get sighash of b35bb1b72d02fab866ed6bbbea9726ab32d968d33a776686df3ac16aa445871e (81) with cache
    ✓ should get sighash of 7615b4a7b3be865633a31e346bc3db0bcc410502c8358a65b8127089d81b01f8 (81) with cache
    ✓ should get sighash of 4f2ccf981598639bec57f885b4c3d8ea8db445ea6e61cfd45789c69374862e5e (00) with cache
    ✓ should get sighash of 984efe0d8d12e43827b9e4b27e97b3777ece930fd1f589d616c6f9b71dab710e (80) with cache
    ✓ should get sighash of 4a74f365a161bc6c9bddd249cbd70f5dadbe3de70ef4bd745dcb6ee1cd299fbd (83) with cache
    ✓ should get sighash of 08bbb746a596991ab7f53a76e19acad087f19cf3e1db54054aab403c43682d09 (82) with cache
    ✓ should get sighash of 8ca11838775822f9a5beee57bdb352f4ee548f122de4a5ca61c21b01a1d50325 (83) with cache
    ✓ should get sighash of 9bc5bb772c553831fb40abe466074e59a469154679c7dee042b8ea3001c20393 (03) with cache
    ✓ should get sighash of 78eb6b24365ac1edc386aa4ffd15772f601059581c8776c34f92f8a7763c9ccf (03) with cache
    ✓ should get sighash of f6da59b9deac63e83728850ac791de61f5dfcaeed384ebcbb20e44afcd8c8910 (00) with cache
    ✓ should get sighash of 04c5ee48514cd033b82a28e336c4d051074f477ef2675ce0ce4bafe565ee9049 (82) with cache
    ✓ should get sighash of 2e42ead953c9f4f81b72c27557e6dc7d48c37ff2f5c46c1dbe9778fb0d79f5b2 (80) with cache
    ✓ should get sighash of d9096de94d70c6337da6202e6e588166f31bff5d51bb5adc9468594559d65695 (00) with cache
    ✓ should get sighash of ed5622ac642d11f90e68c0feea6a2fe36d880ecae6b8c0d89c4ea4b3d162bd90 (80) with cache
    ✓ should get sighash of f926d4036eac7f019a2b0b65356c4ee2fe50e089dd7a70f1843a9f7bc6997b35 (80) with cache
    ✓ should get sighash of 255c125b60ee85f4718b2972174c83588ee214958c3627f51f13b5fb56c8c317 (01) with cache
    ✓ should get sighash of 5a0a05e32ce4cd0558aabd5d79cd5fcbffa95c07137506e875a9afcba4bef5a2 (03) with cache
    ✓ should get sighash of 52b9e0778206af68998cbc4ebdaad5a9469e04d0a0a6cef251abfdbb74e2f031 (01) with cache
    ✓ should get sighash of b6b684e2d2ecec8a8dce4ed3fc1147f8b2e45732444222aa8f52d860c2a27a9d (02) with cache
    ✓ should get sighash of e5da9a416ea883be1f8b8b2d178463633f19de3fa82ae25d44ffb531e35bdbc8 (02) with cache
    ✓ should get sighash of 41ecca1e8152ec55074f4c39f8f2a7204dda48e9ec1e7f99d5e7e4044d159d43 (83) with cache
    ✓ should get sighash of ff8a4016dfdd918f53a45d3a1f62b12c407cd147d68ca5c92b7520e12c353ff5 (82) with cache
    ✓ should get sighash of bad77967f98941af4dd52a8517d5ad1e32307c0d511e15461e86465e1b8b5273 (82) with cache
    ✓ should get sighash of df1c87cf3ba70e754d19618a39fdbd2970def0c1bfc4576260cba5f025b87532 (81) with cache
    ✓ should get sighash of 71c294523c48fd7747eebefbf3ca06e25db7b36bff6d95b41c522fecb264a919 (83) with cache
    ✓ should get sighash of 110d90fea9470dfe6c5048f45c3af5e8cc0cb77dd58fd13d338268e1c24b1ccc (00) with cache
    ✓ should get sighash of 0322ca570446869ec7ec6ad66d9838cff95405002d474c0d3c17708c7ee039c6 (02) with cache
    ✓ should get sighash of 8b5b3d00d9c658f062fe6c5298e54b1fe4ed3a3eab2a87af4f3119edc47b1691 (83) with cache
    ✓ should get sighash of b79f31c289e95d9dadec48ebf88e27c1d920661e50d090e422957f90ff94cb6e (03) with cache
    ✓ should get sighash of 89ec7fab7cfe7d8d7d96956613c49dc48bf295269cfb4ea44f7333d88c170e62 (83) with cache
    ✓ should get sighash of 78e01310a228f645c23a2ad0acbb8d91cedff4ecdf7ca997662c6031eb702b11 (02) with cache
    ✓ should get sighash of 4cc85cbc2863ee7dbce15490d8ca2c5ded61998257b9eeaff968fe38e9f009ae (83) with cache
    ✓ should get sighash of 2d642ceee910abff0af2116af75b2e117ffb7469b2f19ad8fef08f558416d8f7 (00) with cache
    ✓ should get sighash of a17b66d6bb427f42653d08207a22b02353dd19ccf2c7de6a9a3a2bdb7c49c9e7 (82) with cache
    ✓ should get sighash of 8e221a6c4bf81ca0d8a0464562674dcd14a76a32a4b7baf99450dd9195d411e6 (03) with cache
    ✓ should get sighash of 714d8b14699835b26b2f94c58b6ea4c53da3f7adf0c62ea9966b1e1758272c47 (80) with cache
    ✓ should get sighash of 91082410630337a5d89ff19145097090f25d4a20bdd657b4b953927b2f62c73b (02) with cache
    ✓ should get sighash of 458aec3b5089a585b6bad9f99fd37a2b443dc5a2eefac2b7e8c5b06705efc9db (80) with cache
    ✓ should get sighash of bbed77ff0f808aa8abd946ba9e7ec1ddb003a969fa223dee0af779643cb841a9 (03) with cache
    ✓ should get sighash of 3212c6d6dd8d9d3b2ac959dec11f4638ccde9be6ed5d36955769294e23343da0 (01) with cache
    ✓ should get sighash of c40fd7dfa72321ac79516502500478d09a35cc22cc264d652c7d18b14400b739 (01) with cache
    ✓ should get sighash of 919144aada50db8675b7f9a6849c9d263b86450570293a03c245bd1e3095e292 (03) with cache
    ✓ should get sighash of 305fc8ff5dc04ebd9b6448b03c9a3d945a11567206c8d5214666b30ec6d0d6cc (80) with cache
    ✓ should get sighash of 2420dd722e229eccafae8508e7b8d75c6920bfdb3b5bac7cb8e23419480637c2 (80) with cache
    ✓ should get sighash of 4370d05c07e231d6515c7e454a4e401000b99329d22ed7def323976fa1d2eeb5 (03) with cache
    ✓ should get sighash of 2f9993e0a84a6ca560d6d1cc2b63ffe7fd71236d9cfe7d809491cef62bbfad84 (01) with cache
    ✓ should get sighash of 02040283ef2291d8e1f79bb71bdabe7c1546c40d7ed615c375643000a8b9600d (01) with cache
    ✓ should get sighash of f24be499c58295f3a07f5f1c6e5084496ae160450bd61fdb2934e615289448f1 (81) with cache
    ✓ should get sighash of 1c8655969b241e717b841526f87e6bd68b2329905ba3fc9e9f72526c0b3ea20c (80) with cache
    ✓ should get sighash of 94338cd47a4639be30a71e21a7103cee4c99ef7297e0edd56aaf57a068b004de (80) with cache
    ✓ should get sighash of 60caf46a7625f303c04706cec515a44b68ec319ee92273acb566cca4f66861c1 (02) with cache
    ✓ should get sighash of c834a5485e68dc13edb6c79948784712122440d7fa5bbaa5cd2fc3d4dac8185d (83) with cache
    ✓ should get sighash of 99b32b5679d91e0f9cdd6737afeb07459806e5acd7630c6a3b9ab5d550d0c003 (03) with cache
    ✓ should get sighash of 5071f8acf96aea41c7518bd1b5b6bbe16258b529df0c03f9e374b83c66b742c6 (01) with cache
    ✓ should get sighash of 9cb0dd04e9fe287b112e94a1647590d27e8b164ca13c4fe70c610fd13f82c2fd (00) with cache
    ✓ should get sighash of 47207b48777727532f62e09afcd4104ea6687e723c7657c30504fa2081331cc8 (01) with cache
    ✓ should get sighash of b8f3d255549909c07588ecba10a02e55a2d6f2206d831af9da1a7dae64cfbc8b (02) with cache
    ✓ should get sighash of ad01ec9d6dbae325ec3a8e1fd98e2d03b1188378210efef093dd8b0b0ef3f19d (01) with cache
    ✓ should get sighash of 595a3c02254564634e8085283ec4ea7c23808da97ce9c5da7aecd7b553e7fd7f (83) with cache
    ✓ should get sighash of 9c051a7092fe17fa62b1720bc2c4cb2ffc1527d9fb0b006d2e142bb8fe07bf3c (03) with cache
    ✓ should get sighash of 4d8efb3b99b9064d2f6be33b194a903ffabb9d0e7baa97a48fcec038072aac06 (82) with cache
    ✓ should get sighash of a638cc17fd91f4b1e77877e8d82448c84b2a4e100df1373f779de7ad32695112 (82) with cache
    ✓ should get sighash of c10ccc9db8a92d7d4b133a2980782dab9d9d1d633d0dde9f9612ada57771fd89 (03) with cache
    ✓ should get sighash of 0ca673a1ee66f9625ceb9ab278ebef772c113c188112b02824570c17fdf48194 (02) with cache
    ✓ should get sighash of 2c8be597620d95abd88f9c1cf4967c1ae3ca2309f3afec8928058c9598660e9e (82) with cache
    ✓ should get sighash of 26b22e18d5d9081fde9631594a4f7c49069ed2e429f3d08caf9d834f685ccab2 (83) with cache
    ✓ should get sighash of 8e0697d8cd8a9ccea837fd798cc6c5ed29f6fbd1892ee9bcb6c944772778af19 (02) with cache
    ✓ should get sighash of 7cda43f1ff9191c646c56a4e29b1a8c6cb3f7b331da6883ef2f0480a515d0861 (81) with cache
    ✓ should get sighash of 4435e62ff6531ac73529aac9cf878a7219e0b6e6cac79af8487c5355d1ad6d43 (03) with cache
    ✓ should get sighash of 913060c7454e6c80f5ba3835454b54db2188e37dc4ce72a16b37d11a430b3d23 (81) with cache
    ✓ should get sighash of bae189eb3d64aedbc28a6c28f6c0ccbd58472caaf0cf45a5aabae3e031dd1fea (03) with cache
    ✓ should get sighash of cfeaa36790bc398783d4ca45e6354e1ea52ee74e005df7f9ebd10a680e9607bf (80) with cache
    ✓ should get sighash of ec91eda1149f75bffb97612569a78855498c5d5386d473752a2c81454f297fa7 (81) with cache
    ✓ should get sighash of 3aad18a209fab8db44954eb55fd3cc7689b5ec9c77373a4d5f4dae8f7ae58d14 (03) with cache
    ✓ should get sighash of 86970af23c89b72a4f9d6281e46b9ef5220816bed71ebf1ae20df53f38fe16ff (01) with cache
    ✓ should get sighash of d0c4a780e4e0bc22e2f231e23f01c9d536b09f6e5be51c123d218e906ec518be (02) with cache
    ✓ should get sighash of fb4bd26a91b5cf225dd3f170eb09bad0eac314bc1e74503cc2a3f376833f183e (83) with cache
    ✓ should get sighash of 8e795aeef18f510d117dfa2b9f4a2bd2e2847a343205276cedd2ba14548fd63f (03) with cache
    ✓ should get sighash of b6ed4a3721be3c3c7305a5128c9d418efa58e419580cec0d83f133a93e3a22c5 (83) with cache
    ✓ should get sighash of 935892c6f02948f3b08bcd463b6acb769b02c1912be4450126768b055e8f183a (01) with cache
    ✓ should get sighash of 30c4cd4bd6b291f7e9489cc4b4440a083f93a7664ea1f93e77a9597dab8ded9c (02) with cache
    ✓ should get sighash of 2707ca714af09494bb4cf0794abe33c6cba5f29891d619e76070269d1fa8e690 (82) with cache
    ✓ should get sighash of 4abce77432a86dfe608e7c1646c18b5253a373392ff962e288e3ab96bba1ba1d (80) with cache
    ✓ should get sighash of 48411efeb133c6b7fec4e7bdbe613f827093cb06ea0dbcc2ffcfde3a9ac4356c (82) with cache
    ✓ should get sighash of b575a04b0bb56e38bbf26e1a396a76b99fb09db01527651673a073a75f0a7a34 (82) with cache
    ✓ should get sighash of fc93cc056c70d5e033933d730965f36ad81ef64f1762e57f0bc5506c5b507e24 (01) with cache
    ✓ should get sighash of e095003ca82af89738c1863f0f5488ec56a96fb81ea7df334f9344fcb1d0cf40 (01) with cache
    ✓ should get sighash of c6ec1b7cb5c16a1bfd8a3790db227d2acc836300534564252b57bd66acf95092 (80) with cache
    ✓ should get sighash of 5eeb03e03806cd7bfd44bbba69c30f84c2c5120df9e68cd8facc605fcfbc9693 (03) with cache
    ✓ should get sighash of b8db8d57fe40ab3a99cf2f8ed57da7a65050fcc1d34d4280e25faf10108d3110 (00) with cache
    ✓ should get sighash of c6675bf229737e005b5c8ffa6f81d9e2c4396840921b6151316f67c4315a4270 (00) with cache
    ✓ should get sighash of 205f3653f0142b35ce3ef39625442efebae98cde8cbf0516b97b51073bb0479f (01) with cache
    ✓ should get sighash of 3275e98dca37243b977525a07b5d8e369d6c3bdc08cb948029a635547d0d1a4e (03) with cache
    ✓ should get sighash of 508129278ef07b43112ac32faf00170ad38a500eed97615a860fd58baaad174b (81) with cache
    ✓ should get sighash of fe516df92299e995b8e6489be824c6839543071ec5e9286060b2600935bf1f20 (82) with cache
    ✓ should get sighash of d582c442e0ecc400c7ba33a56c93ad9c8cfd45af820350a13623594b793486f0 (83) with cache
    ✓ should get sighash of f151f1ec305f698d9fdce18ea292b145a58d931f1518cf2a4c83484d9a429638 (02) with cache
    ✓ should get sighash of d1b1d79001b4a0324962607b739972d6f39c1493c4500ce814fd3bd72d32a5a0 (00) with cache
    ✓ should get sighash of 1d25d16d84d5793be1ad5cda2de9c9cf70e04a66c3dae618f1a7ca4026198e7f (02) with cache
    ✓ should get sighash of f3bbab70b759fe6cfae1bf349ce10716dbc64f6e9b32916904be4386eb461f1f (83) with cache
    ✓ should get sighash of 41617b27321a830c712638dbb156dae23d4ef181c7a06728ccbf3153ec53d7dd (00) with cache
    ✓ should get sighash of 20fd0eee5b5716d6cbc0ddf852614b686e7a1534693570809f6719b6fcb0a626 (80) with cache
    ✓ should get sighash of ba0a2c987fcdd74b6915f6462f62c3f126a0750aa70048f7aa20f70726e6a20b (01) with cache
    ✓ should get sighash of 62cd3413d9d819fb7355336365cf8a2a997f7436cc050a7143972044343b3281 (81) with cache
    ✓ should get sighash of 37ed6fae36fcb3360c69cac8b359daa62230fc1419b2cf992a32d8f3e079dcff (81) with cache
    ✓ should get sighash of 1c9d6816c20865849078f9777544b5ddf37c8620fe7bd1618e4b72fb72dddca1 (82) with cache
    ✓ should get sighash of 249c4513a49076c6618aabf736dfd5ae2172be4311844a62cf313950b4ba94be (82) with cache
    ✓ should get sighash of 2cc1c7514fdc512fd45ca7ba4f7be8a9fe6d3318328bc1a61ae6e7675047e654 (01) with cache
    ✓ should get sighash of 6beca0e0388f824ca33bf3589087a3c8ad0857f9fe7b7609ae3704bef0eb83e2 (82) with cache
    ✓ should get sighash of 5990b139451847343c9bb89cdba0e6daee6850b60e5b7ea505b04efba15f5d92 (83) with cache
    ✓ should get sighash of dbc7935d718328d23d73f8a6dc4f53a267b8d4d9816d0091f33823bd1f0233e9 (83) with cache
    ✓ should get sighash of 793a3d3c37f6494fab79ff10c16702de002f63e34be25dd8561f424b0ea938c4 (03) with cache
    ✓ should get sighash of b5bd080bbcb8cd652f440484311d7a3cb6a973cd48f03c5c00fd6beb52dfc061 (01) with cache
    ✓ should get sighash of 0c1fd44476ff28bf603ad4f306e8b6c7f0135a441dc3194a6f227cb54598642a (01) with cache
    ✓ should get sighash of 86f26e23822afd1bdfc9fff92840fc1e60089f12f54439e3ab9e5167d0361dcf (01) with cache
    ✓ should get sighash of 3cd85f84aae6d702436f3f9b8980adcc1f8f202e957759540a27da0a32fc6c87 (82) with cache
    ✓ should get sighash of 961ff413850336d3987c550404fc1d923266ca36cc9ffee7113edb3a9fea7f30 (80) with cache
    ✓ should get sighash of e88ed2eea9143f2517b15c03db00767eb01a5ce12193b99b964a35700607e5f4 (02) with cache
    ✓ should get sighash of b8f1e1f35e3e1368bd17008c756e59cced216b3c699bcd7bebdb5b6c8eec4697 (00) with cache
    ✓ should get sighash of c49af297dffe2d80deddf10ceea84b99f8554bd2d55bbdc34e449728c31f0835 (01) with cache
    ✓ should get sighash of 18da6ceb011cd36f15ad7dd6c55ef07e6f6ed48881ce3bb31416d3c290d9a0e9 (02) with cache
    ✓ should get sighash of 3078b1d1a7713c6d101c64afe35adfae0977a5ab4c7e07a0b170b041258adbf2 (03) with cache
    ✓ should get sighash of 0e0bed1bf2ff255aef6e5c587f879ae0be6222ab33bd75ee365ec6fbb8acbe38 (81) with cache
    ✓ should get sighash of ab61497afd39e61fe06bc5677326919716f9b20083c9f3417dcea905090e0411 (03) with cache
    ✓ should get sighash of 680336db57347d8183b8898cd27a83f1ba5884155aeae5ce20b4840b75e12871 (01) with cache
    ✓ should get sighash of 1c29f110576f4a3b257f67454d99dfc0dee62ef5517ca702848ce4bd2ea1a1d7 (02) with cache
    ✓ should get sighash of c670219a93234929f662ecb9aa148a85a2d281e83f4e53d10509461cdea47979 (81) with cache
    ✓ should get sighash of 716a8180e417228f769dcb49e0491e3fda63badf3d5ea0ceeac7970d483dd7e2 (01) with cache
    ✓ should get sighash of d36ee79fc80db2e63e05cdc50357d186181b40ae20e3720878284228a13ee8b3 (03) with cache
    ✓ should get sighash of eacc47c5a53734d6ae3aedbc6a7c0a75a1565310851b29ef0342dc4745ceb607 (03) with cache
    ✓ should get sighash of 59a34b3ed3a1cce0b104de8f7d733f2d386ffc7445efae67680cd90bc915f7e0 (03) with cache
    ✓ should get sighash of 643a7b4c8d832e14d5c10762e74ec84f2c3f7ed96c03053157f1bed226614911 (00) with cache
    ✓ should get sighash of 56d29f5e300ddfed2cd8dcce5d79826e193981d0b70dc7487772c8a0b3b8d7b1 (83) with cache
    ✓ should get sighash of 1536da582a0b6de017862445e91ba14181bd6bf953f4de2f46b040d351a747c9 (01) with cache
    ✓ should get sighash of 6cf9cd409b7185b1f118171f0a34217af5b612ea54195ea186505b667c19337f (03) with cache
    ✓ should get sighash of 1efbf3d37a92bc03d9eb950b792f307e95504f7c4998f668aa250707ebb752ac (01) with cache
    ✓ should get sighash of 0898b26dd3ca08632a5131fa48eb55b44386d0c5070c24d6e329673d5e3693b8 (01) with cache
    ✓ should get sighash of 979782dc3f36d908d37d7e4046a38d306b4b08ddc60a5eba355fe3d6da1b29a9 (81) with cache
    ✓ should get sighash of 674a4bcb04247f8dc98780f1792cac86b8aee41a800fc1e6f5032f6e1dccde65 (00) with cache
    ✓ should get sighash of 3afacaca0ef6be9d39e71d7b1b118994f99e4ea5973c9107ca687d28d8eba485 (80) with cache
    ✓ should get sighash of 241a23e7b1982d5f78917ed97a8678087acbbffe7f624b81df78a5fe5e41e754 (83) with cache
    ✓ should get sighash of 1326a46f4c21e7619f30a992719a905aa1632aaf481a57e1cbd7d7c22139b41e (02) with cache
    ✓ should get sighash of 1ddaab7f973551d71f16bd70c4c4edbf7225e64e784a6da0ee7f7a9fe4f12a0b (03) with cache
    ✓ should get sighash of 925037c7dc7625f3f12dc83904755a37016560de8e1cdd153c88270a7201cf15 (02) with cache
    ✓ should get sighash of 7e058ca5dd07640e4aae7dea731cfb7d7fef1bfd0d6d7b6ce109d041f4ca2a31 (83) with cache
    ✓ should get sighash of 49870a961263354c9baf108c6979b28261f99b374e97605baa532d9fa3848797 (80) with cache
    ✓ should get sighash of eea7d2212bda2d408fff146f9ae5e85e6b640a93b9362622bb9d5e6e36798389 (83) with cache
    ✓ should get sighash of 0090803a20102a778ab967a74532faee13e03b702083b090b1497bc2267ee2fe (01) with cache
    ✓ should get sighash of 5c46f7ac3d6460af0da28468fcc5b3c87f2b9093d0f837954b7c8174b4d7b6e7 (83) with cache
    ✓ should get sighash of 9cf05990421ea853782e4a2c67118e03434629e7d52ab3f1d55c37cf7d72cdc4 (80) with cache
    ✓ should get sighash of fd44fc98639ca32c927929196fc3f3594578f4c4bd248156a25c04a65bf3a9f3 (80) with cache
    ✓ should get sighash of 9a95e692e1f78efd3e46bb98f178a1e3a0ef60bd0301d9f064c0e5703dc879c2 (81) with cache
    ✓ should get sighash of 62a36c6e8da037202fa8aeae03e533665376d5a4e0a854fc4624a75ec52e4eb1 (81) with cache
    ✓ should get sighash of 476868cecd1763c91dade98f17defa42d31049547df45acffa1cc5ae5c3d75d6 (03) with cache
    ✓ should get sighash of f64f805f0ff7f237359fa6b0e58085f3c766d1859003332223444fd29144112a (01) with cache
    ✓ should get sighash of c2cefaec2293134acbcf6d2a8bf2b3eb42e4ec04ee8f8bf30ff23e65680677c1 (00) with cache
    ✓ should get sighash of d66924d49f03a6960d3ca479f3415d638c45889ce9ab05e25b65ac260b51d634 (02) with cache
    ✓ should get sighash of 502967a6f999f7ee25610a443caf8653dda288e6d644a77537bcc115a8a29894 (01) with cache
    ✓ should get sighash of f58637277d2bc42e18358dc55f7e87e7043f5e33f4ce1fc974e715ef0d3d1c2a (82) with cache
    ✓ should get sighash of b098eb9aff1bbd375c70a0cbb9497882ab51f3abfebbf4e1f8d74c0739dc7717 (03) with cache
    ✓ should get sighash of 19dd32190ed2a37be22f0224a9b55b91e37290577c6c346d36d32774db0219a3 (82) with cache
    ✓ should get sighash of 3a1c6742d4c374f061b1ebe330b1e169a113a19792a1fdde979b53e094cc4a3c (82) with cache
    ✓ should get sighash of 9afe3f4978df6a86e9a8ebd62ef6a9d48a2203f02629349f1864ef2b8b92fd55 (83) with cache
    ✓ should get sighash of 6629a1e75c6ae8f4f9d5f734246b6a71682a5ea57246040ef0584f6b97916175 (03) with cache
    ✓ should get sighash of 818a7ceaf963f52b5c48a7f01681ac6653c26b63a9f491856f090d9d60f2ffe3 (82) with cache
    ✓ should get sighash of dfcf484111801989eb6df8dc2bafb944d7365ffeb36a575a08f3270d3ef24c9f (00) with cache
    ✓ should get sighash of d0f32a6db43378af84b063a6706d614e2d647031cf066997c48c04de3b493a94 (81) with cache
    ✓ should get sighash of 68c7bd717b399b1ee33a6562a916825a2fed3019cdf4920418bb72ffd7403c8c (81) with cache
    ✓ should get sighash of 978dc178ecd03d403b048213d904653979d11c51730381c96c4208e3ea24243a (02) with cache
    ✓ should get sighash of 0d936cceda2f56c7bb87d90a7b508f6208577014ff280910a710580357df25f3 (80) with cache
    ✓ should get sighash of 2f9b7348600336512686e7271c53015d1cb096ab1a5e0bce49acd35bceb42bc8 (03) with cache
    ✓ should get sighash of cfa4b7573559b3b199478880c8013fa713ca81ca8754a3fd68a6d7ee6147dc5a (00) with cache
    ✓ should get sighash of 880330ccde00991503ea598a6dfd81135c6cda9d317820352781417f89134d85 (03) with cache
    ✓ should get sighash of bde3dd0575164d7ece3b5783ce0783ffddb7df98f178fe6468683230314f285a (03) with cache
    ✓ should get sighash of a3d65a8cd0c1eea8558d01396b929520a2221c29d9f25f29035b8abae874447f (03) with cache
    ✓ should get sighash of 4eba3055bc2b58765593ec6e11775cea4b6493d8f785e28d01e2d5470ea71575 (00) with cache
    ✓ should get sighash of 6b80d74eb0e7ee59d14f06f30ba7d72a48d3a8ff2d68d3b99e770dec23e9284f (03) with cache
    ✓ should get sighash of 164c32a263f357e385bd744619b91c3f9e3ce6c256d6a827d6defcbdff38fa75 (00) with cache
    ✓ should get sighash of 8858bb47a042243f369f27d9ab4a9cd6216adeac1c1ac413ed0890e46f23d3f3 (81) with cache
    ✓ should get sighash of c84fcaf9d779df736a26cc3cabd04d0e61150d4d5472dd5358d6626e610be57f (81) with cache
    ✓ should get sighash of e562579d1a2b10d1c5e45c06513456002a6bec157d7eb42511d30b118103c052 (00) with cache
    ✓ should get sighash of fa4676c374ae3a417124b4c970d1ed3319dc3ac91fb36efca1aa9ed981a8aa1b (81) with cache
    ✓ should get sighash of e8e10ed162b1a43bfd23bd06b74a6c2f138b8dc1ab094ffb2fa11d5b22869bee (83) with cache
    ✓ should get sighash of a5bc0356f56b2b41a2314ec05bee7b91ef57f1074bcd2efc4da442222269d1a3 (80) with cache
    ✓ should get sighash of 556c3f90aa81f9b4df5b92a23399fe6432cf8fecf7bba66fd8fdb0246440036c (01) with cache
    ✓ should get sighash of 0ef7b6e87c782fa33fe109aab157a2d9cddc4472864f629510a1c92fa1fe7fc1 (80) with cache
    ✓ should get sighash of a7aa34bf8a5644f03c6dd8801f9b15ba2e07e07256dbf1e02dad59f0d3e17ea9 (80) with cache
    ✓ should get sighash of bc46f3f83058ddf5bebd9e1f2c117a673847c4dc5e31cfb24bac91adf30877cf (80) with cache
    ✓ should get sighash of f804fc4d81f039009ed1f2cccb5c91da797543f235ac71b214c20e763a6d86d7 (80) with cache
    ✓ should get sighash of 270445ab77258ced2e5e22a6d0d8c36ac7c30fff9beefa4b3e981867b03fa0ad (03) with cache
    ✓ should get sighash of 4a3415eb1677ae4e0c939644a4cfd5dc6299780b55cd0dc735967057b6b1526a (01) with cache
    ✓ should get sighash of d60bbadd2cc0674100baa08d0e0493ee4248f0304b3eb778da942041f503a896 (03) with cache
    ✓ should get sighash of b276584d3514e5b4e058167c41dc02915b9d97f6795936a51f40e894ed8508bc (00) with cache
    ✓ should get sighash of f1f2a489682e42a6fc20025dfc89584d17f150b2d7ae3ddedd2bf43d5e24f37f (03) with cache
    ✓ should get sighash of bdfaff8a4e775379c5dc26e024968efa805f923de53fa8272dd53ec582afa0c5 (02) with cache
    ✓ should get sighash of c629d93b02037f40aa110e46d903edb34107f64806aa0c418d435926feef68b8 (81) with cache
    ✓ should get sighash of c1c7df8206e661d593f6455db1d61a364a249407f88e99ecad05346e495b38d7 (81) with cache
    ✓ should get sighash of 39c2aaa2496212b3ab120ab7d7f37c5e852bfe38d20f5226413a2268663eeae8 (01) with cache
    ✓ should get sighash of 877e347ec7487497769e2581142276d1a8d813b652e4483cf9cc993d16354417 (02) with cache
    ✓ should get sighash of 47585dc25469d04ff3a60939d0a03779e3e81a411bf0ca18b91bb925ebd30718 (83) with cache
    ✓ should get sighash of 09ed6563a454814ab7e3b4c28d56d8751162b77df1825b37ba66c6147750b2a3 (80) with cache
    ✓ should get sighash of c19caada8e71535e29a86fa29cfd9b74a0c7412003fc722a121005e461e01636 (00) with cache
    ✓ should get sighash of 6a815ba155270af102322c882f26d22da11c5330a751f520807936b320b9af5d (01) with cache
    ✓ should get sighash of 552ff97d7924f51cda6d1b94be53483153ef725cc0a3a107adbef220c753f9a6 (80) with cache
    ✓ should get sighash of e9a7f21fc2d38be7be47095fbc8f1bf8923660aa4d71df6d797ae0ba5ca4d5b0 (00) with cache
    ✓ should get sighash of cdf51f6e3a9dc2be5a59ea4c00f5aac1e1426a5202c325e6cf2567d07d8d8de4 (01) with cache
    ✓ should get sighash of 62094f98234a05bf1b9c7078c5275ed085656856fb5bdfd1b48090e86b53dd85 (00) with cache
    ✓ should get sighash of d37532e7b2b8e7db5c7c534197600397ebcc15a750e3af07a3e2d2e4f84b024f (81) with cache
    ✓ should get sighash of 5cef9d8e18a2d5a70448f17b465d411a19dab78f0ddf1672ffd518b188f52433 (81) with cache
    ✓ should get sighash of 26dc2cba4bd5334e5c0b3a520b44cc1640c6b923d10e576062f1197171724097 (80) with cache
    ✓ should get sighash of 3e5aa0200248d8d86ede3b315ca1b857018b89184a4bd023bd88ab12e499f6e1 (00) with cache
    ✓ should get sighash of b5280b9610c0625a65b36a8c2402a95019a7bbb9dd3de77f7c3cb1d82c3263ba (81) with cache
    ✓ should get sighash of 04c9ef72f33668ca449c0415becf62cc0b8e0c75f9c8813852d42a58acf107c8 (02) with cache
    ✓ should get sighash of 8f07ece7d65e509f1e0780584ef8d271c1c61a13b10335d5faafc7afc8b5b8ec (02) with cache
    ✓ should get sighash of e2358dfb51831ee81d7b0bc602a65287d6cd2dbfacf55106e2bf597e22a4b573 (02) with cache
    ✓ should get sighash of 502a2435fd02898d2ff3ab08a3c19078414b32ec9b73d64a944834efc9dae10c (03) with cache
    ✓ should get sighash of 7ba99b289c04718a7283f150d831175ed6303081e191a0608ea81f78926c5bdf (80) with cache
    ✓ should get sighash of 92d53b4390262e6b288e8a32e0cfc36cd5adfdfabfe96c7bfd4a19d65e233761 (03) with cache
    ✓ should get sighash of 5d366a7f4346ae18aeb7c9fc4dab5af71173184aa20ed22fcb4ea8511ad25449 (01) with cache
    ✓ should get sighash of bbee941bbad950424bf40e3623457db47f60ed29deaa43c99dec702317cb3326 (03) with cache
    ✓ should get sighash of 5c5a9c3a5de7dc7a82bc171c9d3505913b8bcc450bc8b2d11772c1a1d781210b (80) with cache
    ✓ should get sighash of a3bdf8771c8990971bff9b4e7d59b7829b067ed0b8d3ac1ec203429811384668 (81) with cache
    ✓ should get sighash of 8c29ea8ef60c5a927fccdba8ea385db6b6b84d98e891db45f5d4ee3148d3f5a7 (80) with cache
    ✓ should get sighash of d5f1c1cb35956a5711d67bfb4cedbc67e77c089b912d688ad440ff735adb390d (03) with cache
    ✓ should get sighash of 37b794b05d0687c9b93d5917ab068f6b2f0e38406ff04e7154d104fc1fb14cdc (00) with cache
    ✓ should get sighash of ea117348e94de86381bb8ad1c7f93b8c623f0272104341701bb54e6cb433596c (82) with cache
    ✓ should get sighash of a7aff48f3b8aeb7a4bfe2e6017c80a84168487a69b69e46681e0d0d8e63a84b6 (80) with cache
    ✓ should get sighash of 0a281172d306b6a32e166e6fb2a2cc52c505c5d60ea448e9ba7029aa0a2211e1 (03) with cache
    ✓ should get sighash of 82ebc07b16cff0077e9c1a279373185b3494e39d08fd3194aae6a4a019377509 (02) with cache
    ✓ should get sighash of 418acc156c2bc76a5d7baa58db29f1b4cf6c266c9222ed167ef5b4d47f0e0f41 (82) with cache
    ✓ should get sighash of 228ca52a0a376fe0527a61cfa8da6d7baf87486bba92d49dfd3899cac8a1034f (83) with cache
    ✓ should get sighash of d2fa7e13c34cecda5105156bd2424c9b84ee0a07162642b0706f83243ff811a8 (00) with cache
    ✓ should get sighash of 499da7d74032388f820645191ac3c8d20f9dba8e8ded7fa3a5401ea2942392a1 (83) with cache
    ✓ should get sighash of 1125645b49202dca2df2d76dae51877387903a096a9d3f66b5ac80e042c95788 (03) with cache
    ✓ should get sighash of 5350a31ac954a0b49931239d0ecafbf34d035a537fd0c545816b8fdc355e9961 (01) with cache
    ✓ should get sighash of 3c05473a816621a3613f0e903faa1a1e44891dd40862b029e41fc520776350fa (81) with cache
    ✓ should get sighash of 936eff8cdfd771be24124da87c7b24feb48da7cbc2c25fb5ba13d1a23255d902 (81) with cache
    ✓ should get sighash of 69c0b30f4c630a6c878fde6ea6b74dae94f4eb3bcfbde2dc3649e1a9ada00757 (02) with cache
    ✓ should get sighash of f8757fbb4448ca34e0cd41b997685b37238d331e70316659a9cc9087d116169d (83) with cache
    ✓ should get sighash of e7d873aa079a19ec712b269a37d2670f60d8cb334c4f97e2e3fd10eeb8ee5f5e (01) with cache
    ✓ should get sighash of 311094b4d73e31aefc77e97859ef07ca2f07a7b7e4d7def80c69d3f5d58527e5 (00) with cache
    ✓ should get sighash of 06277201504e6bf8b8c94136fad81b6e3dadacb9d4a2c21a8e10017bfa929e0e (01) with cache
    ✓ should get sighash of 7912573937824058103cb921a59a7f910a854bf2682f4116a393a2045045a8c3 (03) with cache
    ✓ should get sighash of 24cb420a53b4f8bb477f7cbb293caabfd2fc47cc400ce37dbbab07f92d3a9575 (03) with cache
    ✓ should get sighash of 69264faadcd1a581f7000570a239a0a26b82f2ad40374c5b9c1f58730514de96 (81) with cache
    ✓ should get sighash of bd0e88829afa6bdc1e192bb8b2d9d14db69298a4d81d464cbd34df0302c634c6 (80) with cache
    ✓ should get sighash of f99c29a79f1d73d2a69c59abbb5798e987639e36d4c44125d8dc78a94ddcfb13 (00) with cache
    ✓ should get sighash of 9615541884dfb1feeb08073a6a6aa73ef694bc5076e52187fdf4138a369f94d9 (81) with cache
    ✓ should get sighash of 6e3f97955490d93d6a107c18d7fe402f1cada79993bb0ff0d096357261b3a724 (81) with cache
    ✓ should get sighash of b3b336de141d4f071313a2207b2a0c7cf54a070dd8d234a511b7f1d13e23b0c4 (80) with cache
    ✓ should get sighash of 7928ae8e86c0b0cad1b2c120ea313087437974382ee6d46443ca5ac3f5878b88 (80) with cache
    ✓ should get sighash of 4a92fec1eb03f5bd754ee9bfd70707dc4420cc13737374f4675f48529be518e4 (02) with cache
    ✓ should get sighash of 8b7dd0ff12ca0d8f4dbf9abf0abba00e897c2f6fd3b92c79f5f6a534e0b33b32 (83) with cache
    ✓ should get sighash of 8bb7a0129eaf4b8fc23e911c531b9b7637a21ab11a246352c6c053ff6e93fcb6 (80) with cache
    ✓ should get sighash of 55acd8293ed0be6792150a3d7ced6c5ccd153ca7daf09cee035c1b0dac92bb96 (02) with cache
    ✓ should get sighash of b362da5634f20be7267de78b545d81773d711b82fe9310f23cd0414a8280801d (83) with cache
    ✓ should get sighash of 2b822737c2affeefae13451d7c9db22ff98e06490005aba57013f6b9bbc97250 (80) with cache
    ✓ should get sighash of 20732d5073805419f275c53784e78db45e53332ee618a9fcf60a3417a6e2ca69 (02) with cache
    ✓ should get sighash of 685d67d84755906d67a007a7d4fa311519467b9bdc6a351913246a41e082a29f (02) with cache
    ✓ should get sighash of 123916c6485cf23bfea95654a8815fbf04ce4d21a3b7f862805c241472906658 (01) with cache
    ✓ should get sighash of f43378a0b7822ad672773944884e866d7a46579ee34f9afc17b20afc1f6cf197 (03) with cache
    ✓ should get sighash of ff18c5bffd086e00917c2234f880034d24e7ea2d1e1933a28973d134ca9e35d2 (02) with cache
    ✓ should get sighash of cb6e4322955af12eb29613c70e1a00ddbb559c887ba844df0bcdebed736dffbd (01) with cache
    ✓ should get sighash of e8d89a302ae626898d4775d103867a8d9e81f4fd387af07212adab99946311ef (00) with cache
    ✓ should get sighash of 0278adbcc476d135493ae9bdcd7b3c2002df17f2d81c17d631c50c73e546c264 (80) with cache
    ✓ should get sighash of b7ca991ab2e20d0158168df2d3dd842a57ab4a3b67cca8f45b07c4b7d1d11126 (82) with cache
    ✓ should get sighash of 437e89bb6f70fd2ed2feef33350b6f6483b891305e574da03e580b3efd81ae13 (00) with cache
    ✓ should get sighash of 535ba819d74770d4d613ee19369001576f98837e18e1777b8246238ff2381dd0 (83) with cache
    ✓ should get sighash of d4737f3b58f3e5081b35f36f91acde89dda00a6a09d447e516b523e7a99264d5 (02) with cache
    ✓ should get sighash of 3282a2ec6b8c87c9303e6060c17b421687db1bd35fbfa0345b48f2490e15b6cc (01) with cache
    ✓ should get sighash of 55611a5fb1483bce4c14c33ed15198130e788b72cd8929b2ceef4dd68b1806bf (01) with cache
    ✓ should get sighash of b3ff10f21e71ebc8b25fe058c4074c42f08617e0dcc03f9e75d20539d3242644 (82) with cache
    ✓ should get sighash of 9b360c3310d55c845ef537125662b9fe56840c72136891274e9fedfef56f9bb5 (03) with cache
    ✓ should get sighash of 2f482b97178f17286f693796a756f4d7bd2dfcdbecd4142528eec1c7a3e5101a (02) with cache
    ✓ should get sighash of 6390ab0963cf611e0cea35a71dc958b494b084e6fd71d22217fdc5524787ade6 (01) with cache
    ✓ should get sighash of f77c3322c97b1681c17b1eba461fa27b07e04c1534e8aaf735a49cab72c7c2e2 (01) with cache
    ✓ should get sighash of 5299b0fb7fc16f40a5d6b337e71fcd1eb04d2600aefd22c06fe9c71fe0b0ba54 (00) with cache
    ✓ should get sighash of 67483ee62516be17a2431a163e96fd88a08ff2ce8634a52e42c1bc04e30f3f8a (83) with cache
    ✓ should get sighash of 48315a95e49277ab6a2d561ee4626820b7bab919eea372b6bf4e9931ab221d04 (00) with cache
    ✓ should get sighash of 74d6a2fa7866fd8b74b2e34693e2d6fd690410384b7afdcd6461b1ae71d265ce (82) with cache
    ✓ should get sighash of 1bc8ad76f9b7c366c5d052dc479d6a8a2015566d3a42e93ab12f727692c89d65 (03) with cache
    ✓ should get sighash of a575fa4f59a8e90cd07de012c78fe8f981183bb170b9c50fcc292b8c164cbc3b (01) with cache
    ✓ should get sighash of a72a760b361af41832d2c667c7488dc9702091918d11e344afc234a4aea3ec44 (81) with cache
    ✓ should get sighash of 2c45d021db545df7167ac03c9ee56473f2398d9b2b739cf3ff3e074501d324f8 (01) with cache
    ✓ should get sighash of 32f3c012eca9a823bebb9b282240aec40ca65df9f38da43b1dcfa0cac0c0df7e (80) with cache
    ✓ should get sighash of c76146f68f43037289aaeb2bacf47408cddc0fb326b350eb4f5ef6f0f8564793 (81) with cache
    ✓ should get sighash of 1d849b92eedb9bf26bd4ced52ce9cb0595164295b0526842ab1096001fcd31b1 (83) with cache
    ✓ should get sighash of bbee17c8582514744bab5df50012c94b0db4aff5984d2e13a8d09421674404e2 (02) with cache
    ✓ should get sighash of 84af1623366c4db68d81f452b86346832344734492b9c23fbb89015e516c60b2 (01) with cache
    ✓ should get sighash of ccfdba36d9445f4451fb7cbf0752cc89c23d4fc6fff0f3930d20e116f9db0b95 (02) with cache
    ✓ should get sighash of 5532717402a2da01a1da912d824964024185ca7e8d4ad1748659dc393a14182b (80) with cache
    ✓ should get sighash of 9a0435996cc58bdba09643927fe48c1fc908d491a050abbef8daec87f323c58f (81) with cache
    ✓ should get sighash of 1d1757a782cb5860302128bcbe9398243124a2f82d671a113f74f8e582c7a182 (80) with cache
    ✓ should get sighash of e69dba3efb5c02af2ab1087d0a990678784671f4744d01ca097d71aec14dd8e9 (00) with cache
    ✓ should get sighash of b0dc030661783dd9939e4bf1a6dfcba809da2017e1b315a6312e5942d714cf05 (03) with cache
    ✓ should get sighash of 1dec0d5eb921bf5b2df39c8576e19c38d0c17254a4a0b78ac4b5422bcc426258 (02) with cache
    ✓ should get sighash of 0a2ff41f6d155d8d0e37cd9438f3b270df9f9214cda8e95c76d5a239ca189df2 (83) with cache
    ✓ should get sighash of e05e3d383631a7ed1b78210c13c2eb26564e5577db7ddfcea2583c7c014091d4 (80) with cache
    ✓ should get sighash of e657e2c8ec4ebc769ddd3198a83267b47d4f2a419fc737e813812acefad92ff7 (80) with cache
    ✓ should get sighash of da86c260d42a692358f46893d6f91563985d86eeb9ea9e21cd38c2d8ffcfcc4d (03) with cache
    ✓ should get sighash of 397c68803b7ce953666830b0221a5e2bcf897aa2ded8e36a6b76c497dcb1a2e1 (83) with cache
    ✓ should get sighash of fe1dc9e8554deecf8f50c417c670b839cc9d650722ebaaf36572418756075d58 (82) with cache
    ✓ should get sighash of 950f4b4f72ccdf8a6a0f381265d6c8842fdb7e8b3df3e9742905f643b2432b69 (02) with cache
    ✓ should get sighash of d5981bd4467817c1330da72ddb8760d6c2556cd809264b2d85e6d274609fc3a3 (00) with cache
    ✓ should get sighash of 076b9f844f6ae429de228a2c337c704df1652c292b6c6494882190638dad9efd (02) with cache
    ✓ should verify non-minimal output without cache
    ✓ should verify tx.version == 0 without cache
    ✓ should verify sighash_single bug w/ findanddelete without cache
    ✓ should verify high S value with only DERSIG enabled without cache
    ✓ should parse witness tx properly without cache
    ✓ should verify the coolest tx ever sent without cache
    ✓ should verify a historical transaction without cache
    ✓ should handle valid tx test without cache: The following are deserialized transactions which are valid. They are in the form [[[prevout hash, prevout index, prevout scriptPubKey, amount?], [input 2], ...], serializedTransaction, verifyFlags] Objects that are only a single string (like this one) are ignored The following is 23b397edccd3740a74adb603c9756370fafcde9bcc4483eb271ecad09a94dd63 It is of particular interest because it contains an invalidly-encoded signature which OpenSSL accepts See http://r6.ca/blog/20111119T211504Z.html It is also the first OP_CHECKMULTISIG transaction in standard form
    ✓ should handle valid tx test without cache: The following is a tweaked form of 23b397edccd3740a74adb603c9756370fafcde9bcc4483eb271ecad09a94dd63 It is an OP_CHECKMULTISIG with an arbitrary extra byte stuffed into the signature at pos length - 2 The dummy byte is fine however, so the NULLDUMMY flag should be happy
    ✓ should handle valid tx test without cache: The following is a tweaked form of 23b397edccd3740a74adb603c9756370fafcde9bcc4483eb271ecad09a94dd63 It is an OP_CHECKMULTISIG with the dummy value set to something other than an empty string
    ✓ should handle valid tx test without cache: As above, but using a OP_1
    ✓ should handle valid tx test without cache: As above, but using a OP_1NEGATE
    ✓ should handle valid tx test without cache: The following is c99c49da4c38af669dea436d3e73780dfdb6c1ecf9958baa52960e8baee30e73 It is of interest because it contains a 0-sequence as well as a signature of SIGHASH type 0 (which is not a real type)
    ✓ should handle valid tx test without cache: A nearly-standard transaction with CHECKSIGVERIFY 1 instead of CHECKSIG
    ✓ should handle valid tx test without cache: Same as above, but with the signature duplicated in the scriptPubKey with the proper pushdata prefix
    ✓ should handle valid tx test without cache: The following is f7fdd091fa6d8f5e7a8c2458f5c38faffff2d3f1406b6e4fe2c99dcc0d2d1cbb It caught a bug in the workaround for 23b397edccd3740a74adb603c9756370fafcde9bcc4483eb271ecad09a94dd63 in an overly simple implementation
    ✓ should handle valid tx test without cache: The following tests for the presence of a bug in the handling of SIGHASH_SINGLE It results in signing the constant 1, instead of something generated based on the transaction, when the input doing the signing has an index greater than the maximum output index
    ✓ should handle valid tx test without cache: An invalid P2SH Transaction
    ✓ should handle valid tx test without cache: A valid P2SH Transaction using the standard transaction type put forth in BIP 16
    ✓ should handle valid tx test without cache: Tests for CheckTransaction() MAX_MONEY output
    ✓ should handle valid tx test without cache: MAX_MONEY output + 0 output
    ✓ should handle valid tx test without cache: Coinbase of size 2 Note the input is just required to make the tester happy
    ✓ should handle valid tx test without cache: Coinbase of size 100 Note the input is just required to make the tester happy
    ✓ should handle valid tx test without cache: Simple transaction with first input is signed with SIGHASH_ALL, second with SIGHASH_ANYONECANPAY
    ✓ should handle valid tx test without cache: Same as above, but we change the sequence number of the first input to check that SIGHASH_ANYONECANPAY is being followed
    ✓ should handle valid tx test without cache: afd9c17f8913577ec3509520bd6e5d63e9c0fd2a5f70c787993b097ba6ca9fae which has several SIGHASH_SINGLE signatures
    ✓ should handle valid tx test without cache: ddc454a1c0c35c188c98976b17670f69e586d9c0f3593ea879928332f0a069e7, which spends an input that pushes using a PUSHDATA1 that is negative when read as signed
    ✓ should handle valid tx test without cache: Correct signature order Note the input is just required to make the tester happy
    ✓ should handle valid tx test without cache: cc60b1f899ec0a69b7c3f25ddf32c4524096a9c5b01cbd84c6d0312a0c478984, which is a fairly strange transaction which relies on OP_CHECKSIG returning 0 when checking a completely invalid sig of length 0
    ✓ should handle valid tx test without cache: Empty pubkey
    ✓ should handle valid tx test without cache: Empty signature
    ✓ should handle valid tx test without cache: <Script: OP_1 OP_0 0x21 0x02136b04758b0b6e363e7a6fbe83aaf527a153db2b060d36cc29f7f8309ba6e458 OP_2 OP_CHECKMULTISIG>
    ✓ should handle valid tx test without cache: <Script: OP_1 0x21 0x03905380c7013e36e6e19d305311c1b81fce6581f5ee1c86ef0627c68c9362fc9f OP_0 OP_2 OP_CHECKMULTISIG>
    ✓ should handle valid tx test without cache: <Script: OP_2 0x21 0x033bcaa0a602f0d44cc9d5637c6e515b0471db514c020883830b7cefd73af04194 0x21 0x03a88b326f8767f4f192ce252afe33c94d25ab1d24f27f159b3cb3aa691ffe1423 OP_2 OP_CHECKMULTISIG OP_NOT>
    ✓ should handle valid tx test without cache: <Script: OP_2 0x21 0x037c615d761e71d38903609bf4f46847266edc2fb37532047d747ba47eaae5ffe1 0x21 0x02edc823cd634f2c4033d94f5755207cb6b60c4b1f1f056ad7471c47de5f2e4d50 OP_2 OP_CHECKMULTISIG OP_NOT>
    ✓ should handle valid tx test without cache: OP_CODESEPARATOR tests Test that SignatureHash() removes OP_CODESEPARATOR with FindAndDelete()
    ✓ should handle valid tx test without cache: <Script: OP_CODESEPARATOR OP_CODESEPARATOR 0x21 0x038479a0fa998cd35259a2ef0a7a5c68662c1474f88ccb6d08a7677bbec7f22041 OP_CHECKSIG>
    ✓ should handle valid tx test without cache: Hashed data starts at the CODESEPARATOR
    ✓ should handle valid tx test without cache: But only if execution has reached it
    ✓ should handle valid tx test without cache: CODESEPARATOR in an unexecuted IF block does not change what is hashed
    ✓ should handle valid tx test without cache: As above, with the IF block executed
    ✓ should handle valid tx test without cache: CHECKSIG is legal in scriptSigs
    ✓ should handle valid tx test without cache: Same semantics for OP_CODESEPARATOR
    ✓ should handle valid tx test without cache: Signatures are removed from the script they are in by FindAndDelete() in the CHECKSIG code; even multiple instances of one signature can be removed.
    ✓ should handle valid tx test without cache: That also includes ahead of the opcode being executed.
    ✓ should handle valid tx test without cache: Finally CHECKMULTISIG removes all signatures prior to hashing the script containing those signatures. In conjunction with the SIGHASH_SINGLE bug this lets us test whether or not FindAndDelete() is actually present in scriptPubKey/redeemScript evaluation by including a signature of the digest 0x01 We can compute in advance for our pubkey, embed it in the scriptPubKey, and then also using a normal SIGHASH_ALL signature. If FindAndDelete() wasn't run, the 'bugged' signature would still be in the hashed script, and the normal signature would fail. Here's an example on mainnet within a P2SH redeemScript. Remarkably it's a standard transaction in <0.9
    ✓ should handle valid tx test without cache: Same idea, but with bare CHECKMULTISIG
    ✓ should handle valid tx test without cache: CHECKLOCKTIMEVERIFY tests By-height locks, with argument == 0 and == tx nLockTime
    ✓ should handle valid tx test without cache: <Script: 499999999 OP_CHECKLOCKTIMEVERIFY OP_1>
    ✓ should handle valid tx test without cache: <Script: OP_0 OP_CHECKLOCKTIMEVERIFY OP_1>
    ✓ should handle valid tx test without cache: By-time locks, with argument just beyond tx nLockTime (but within numerical boundaries)
    ✓ should handle valid tx test without cache: <Script: 0x05 0xffffffff00 OP_CHECKLOCKTIMEVERIFY OP_1>
    ✓ should handle valid tx test without cache: <Script: 500000000 OP_CHECKLOCKTIMEVERIFY OP_1>
    ✓ should handle valid tx test without cache: Any non-maxint nSequence is fine
    ✓ should handle valid tx test without cache: The argument can be calculated rather than created directly by a PUSHDATA
    ✓ should handle valid tx test without cache: Perhaps even by an ADD producing a 5-byte result that is out of bounds for other opcodes
    ✓ should handle valid tx test without cache: 5 byte non-minimally-encoded arguments are valid
    ✓ should handle valid tx test without cache: Valid CHECKLOCKTIMEVERIFY in scriptSig
    ✓ should handle valid tx test without cache: Valid CHECKLOCKTIMEVERIFY in redeemScript
    ✓ should handle valid tx test without cache: A transaction with a non-standard DER signature.
    ✓ should handle valid tx test without cache: CHECKSEQUENCEVERIFY tests By-height locks, with argument == 0 and == txin.nSequence
    ✓ should handle valid tx test without cache: <Script: 65535 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle valid tx test without cache: <Script: 65535 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle valid tx test without cache: <Script: OP_0 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle valid tx test without cache: By-time locks, with argument == 0 and == txin.nSequence
    ✓ should handle valid tx test without cache: <Script: 4259839 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle valid tx test without cache: <Script: 4259839 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle valid tx test without cache: <Script: 4194304 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle valid tx test without cache: Upper sequence with upper sequence is fine
    ✓ should handle valid tx test without cache: <Script: 0x05 0xffffffff00 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle valid tx test without cache: <Script: 0x05 0x0000008000 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle valid tx test without cache: <Script: 0x05 0xffffffff00 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle valid tx test without cache: <Script: 0x05 0x0000008000 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle valid tx test without cache: <Script: 0x05 0xffffffff00 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle valid tx test without cache: Argument 2^31 with various nSequence
    ✓ should handle valid tx test without cache: <Script: 0x05 0x0000008000 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle valid tx test without cache: <Script: 0x05 0x0000008000 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle valid tx test without cache: Argument 2^32-1 with various nSequence
    ✓ should handle valid tx test without cache: <Script: 0x05 0xffffffff00 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle valid tx test without cache: <Script: 0x05 0xffffffff00 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle valid tx test without cache: Argument 3<<31 with various nSequence
    ✓ should handle valid tx test without cache: <Script: 0x05 0x0000008001 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle valid tx test without cache: <Script: 0x05 0x0000008001 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle valid tx test without cache: 5 byte non-minimally-encoded operandss are valid
    ✓ should handle valid tx test without cache: The argument can be calculated rather than created directly by a PUSHDATA
    ✓ should handle valid tx test without cache: <Script: 4194304 OP_1SUB OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle valid tx test without cache: An ADD producing a 5-byte result that sets CTxIn::SEQUENCE_LOCKTIME_DISABLE_FLAG
    ✓ should handle valid tx test without cache: <Script: 2147483647 4259840 OP_ADD OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle valid tx test without cache: Valid CHECKSEQUENCEVERIFY in scriptSig
    ✓ should handle valid tx test without cache: Valid CHECKSEQUENCEVERIFY in redeemScript
    ✓ should handle valid tx test without cache: Valid P2WPKH (Private key of segwit tests is L5AQtV2HDm4xGsseLokK2VAT2EtYKcTm3c7HwqnJBFt9LdaQULsM)
    ✓ should handle valid tx test without cache: Valid P2WSH
    ✓ should handle valid tx test without cache: Valid P2SH(P2WPKH)
    ✓ should handle valid tx test without cache: Valid P2SH(P2WSH)
    ✓ should handle valid tx test without cache: Witness with SigHash Single|AnyoneCanPay
    ✓ should handle valid tx test without cache: Witness with SigHash Single|AnyoneCanPay (same signature as previous)
    ✓ should handle valid tx test without cache: Witness with SigHash Single
    ✓ should handle valid tx test without cache: Witness with SigHash Single (same signature as previous)
    ✓ should handle valid tx test without cache: Witness with SigHash None|AnyoneCanPay
    ✓ should handle valid tx test without cache: Witness with SigHash None|AnyoneCanPay (same signature as previous)
    ✓ should handle valid tx test without cache: Witness with SigHash None
    ✓ should handle valid tx test without cache: Witness with SigHash None (same signature as previous)
    ✓ should handle valid tx test without cache: Witness with SigHash None (same signature, only sequences changed)
    ✓ should handle valid tx test without cache: Witness with SigHash All|AnyoneCanPay
    ✓ should handle valid tx test without cache: Witness with SigHash All|AnyoneCanPay (same signature as previous)
    ✓ should handle valid tx test without cache: Unknown witness program version  (without DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM)
    ✓ should handle valid tx test without cache: Witness with a push of 520 bytes
    ✓ should handle valid tx test without cache: Transaction mixing all SigHash, segwit and normal inputs
    ✓ should handle valid tx test without cache: Unknown version witness program with empty witness
    ✓ should handle valid tx test without cache: Witness SIGHASH_SINGLE with output out of bound
    ✓ should handle valid tx test without cache: 1 byte push should not be considered a witness scriptPubKey
    ✓ should handle valid tx test without cache: 41 bytes push should not be considered a witness scriptPubKey
    ✓ should handle valid tx test without cache: The witness version must use OP_1 to OP_16 only
    ✓ should handle valid tx test without cache: The witness program push must be canonical
    ✓ should handle valid tx test without cache: Witness Single|AnyoneCanPay does not hash input's position
    ✓ should handle valid tx test without cache: Witness Single|AnyoneCanPay does not hash input's position (permutation)
    ✓ should handle valid tx test without cache: Non witness Single|AnyoneCanPay hash input's position
    ✓ should handle valid tx test without cache: BIP143 examples: details and private keys are available in BIP143 BIP143 example: P2WSH with OP_CODESEPARATOR and out-of-range SIGHASH_SINGLE.
    ✓ should handle valid tx test without cache: BIP143 example: P2WSH with unexecuted OP_CODESEPARATOR and SINGLE|ANYONECANPAY
    ✓ should handle valid tx test without cache: BIP143 example: Same as the previous example with input-output pairs swapped
    ✓ should handle valid tx test without cache: BIP143 example: P2SH-P2WSH 6-of-6 multisig signed with 6 different SIGHASH types
    ✓ should handle valid tx test without cache: FindAndDelete tests This is a test of FindAndDelete. The first tx is a spend of normal P2SH and the second tx is a spend of bare P2WSH. The redeemScript/witnessScript is CHECKSIGVERIFY <0x30450220487fb382c4974de3f7d834c1b617fe15860828c7f96454490edd6d891556dcc9022100baf95feb48f845d5bfc9882eb6aeefa1bc3790e39f59eaa46ff7f15ae626c53e01>. The signature is <0x30450220487fb382c4974de3f7d834c1b617fe15860828c7f96454490edd6d891556dcc9022100baf95feb48f845d5bfc9882eb6aeefa1bc3790e39f59eaa46ff7f15ae626c53e01> <pubkey>, where the pubkey is obtained through key recovery with sig and correct sighash. This is to show that FindAndDelete is applied only to non-segwit scripts Non-segwit: correct sighash (with FindAndDelete) = 1ba1fe3bc90c5d1265460e684ce6774e324f0fabdf67619eda729e64e8b6bc08
    ✓ should handle valid tx test without cache: BIP143: correct sighash (without FindAndDelete) = 71c9cd9b2869b9c70b01b1f0360c148f42dee72297db312638df136f43311f23
    ✓ should handle valid tx test without cache: This is multisig version of the FindAndDelete tests Script is 2 CHECKMULTISIGVERIFY <sig1> <sig2> DROP 52af4830450220487fb382c4974de3f7d834c1b617fe15860828c7f96454490edd6d891556dcc9022100baf95feb48f845d5bfc9882eb6aeefa1bc3790e39f59eaa46ff7f15ae626c53e0148304502205286f726690b2e9b0207f0345711e63fa7012045b9eb0f19c2458ce1db90cf43022100e89f17f86abc5b149eba4115d4f128bcf45d77fb3ecdd34f594091340c0395960175 Signature is 0 <sig1> <sig2> 2 <key1> <key2> Non-segwit: correct sighash (with FindAndDelete) = 1d50f00ba4db2917b903b0ec5002e017343bb38876398c9510570f5dce099295
    ✓ should handle valid tx test without cache: BIP143: correct sighash (without FindAndDelete) = c1628a1e7c67f14ca0c27c06e4fdeec2e6d1a73c7a91d7c046ff83e835aebb72
    ✓ should handle invalid tx test without cache: The following are deserialized transactions which are invalid. They are in the form [[[prevout hash, prevout index, prevout scriptPubKey, amount?], [input 2], ...], serializedTransaction, verifyFlags] Objects that are only a single string (like this one) are ignored 0e1b5688cf179cd9f7cbda1fac0090f6e684bbf8cd946660120197c3f3681809 but with extra junk appended to the end of the scriptPubKey
    ✓ should handle invalid tx test without cache: This is the nearly-standard transaction with CHECKSIGVERIFY 1 instead of CHECKSIG from tx_valid.json but with the signature duplicated in the scriptPubKey with a non-standard pushdata prefix See FindAndDelete, which will only remove if it uses the same pushdata prefix as is standard
    ✓ should handle invalid tx test without cache: Same as above, but with the sig in the scriptSig also pushed with the same non-standard OP_PUSHDATA
    ✓ should handle invalid tx test without cache: This is the nearly-standard transaction with CHECKSIGVERIFY 1 instead of CHECKSIG from tx_valid.json but with the signature duplicated in the scriptPubKey with a different hashtype suffix See FindAndDelete, which will only remove if the signature, including the hash type, matches
    ✓ should handle invalid tx test without cache: An invalid P2SH Transaction
    ✓ should handle invalid tx test without cache: Tests for CheckTransaction() No outputs
    ✓ should handle invalid tx test without cache: Negative output
    ✓ should handle invalid tx test without cache: MAX_MONEY + 1 output
    ✓ should handle invalid tx test without cache: MAX_MONEY output + 1 output
    ✓ should handle invalid tx test without cache: Duplicate inputs
    ✓ should handle invalid tx test without cache: Coinbase of size 1 Note the input is just required to make the tester happy
    ✓ should handle invalid tx test without cache: Coinbase of size 101 Note the input is just required to make the tester happy
    ✓ should handle invalid tx test without cache: Null txin, but without being a coinbase (because there are two inputs)
    ✓ should handle invalid tx test without cache: <Script: OP_1>
    ✓ should handle invalid tx test without cache: Same as the transactions in valid with one input SIGHASH_ALL and one SIGHASH_ANYONECANPAY, but we set the _ANYONECANPAY sequence number, invalidating the SIGHASH_ALL signature
    ✓ should handle invalid tx test without cache: CHECKMULTISIG with incorrect signature order Note the input is just required to make the tester happy
    ✓ should handle invalid tx test without cache: The following is a tweaked form of 23b397edccd3740a74adb603c9756370fafcde9bcc4483eb271ecad09a94dd63 It is an OP_CHECKMULTISIG with the dummy value missing
    ✓ should handle invalid tx test without cache: CHECKMULTISIG SCRIPT_VERIFY_NULLDUMMY tests: The following is a tweaked form of 23b397edccd3740a74adb603c9756370fafcde9bcc4483eb271ecad09a94dd63 It is an OP_CHECKMULTISIG with the dummy value set to something other than an empty string
    ✓ should handle invalid tx test without cache: As above, but using a OP_1
    ✓ should handle invalid tx test without cache: As above, but using a OP_1NEGATE
    ✓ should handle invalid tx test without cache: As above, but with the dummy byte missing
    ✓ should handle invalid tx test without cache: Empty stack when we try to run CHECKSIG
    ✓ should handle invalid tx test without cache: Inverted versions of tx_valid CODESEPARATOR IF block tests CODESEPARATOR in an unexecuted IF block does not change what is hashed
    ✓ should handle invalid tx test without cache: As above, with the IF block executed
    ✓ should handle invalid tx test without cache: CHECKLOCKTIMEVERIFY tests By-height locks, with argument just beyond tx nLockTime
    ✓ should handle invalid tx test without cache: <Script: 499999999 OP_CHECKLOCKTIMEVERIFY OP_1>
    ✓ should handle invalid tx test without cache: By-time locks, with argument just beyond tx nLockTime (but within numerical boundaries)
    ✓ should handle invalid tx test without cache: <Script: 0x05 0xffffffff00 OP_CHECKLOCKTIMEVERIFY OP_1>
    ✓ should handle invalid tx test without cache: Argument missing
    ✓ should handle invalid tx test without cache: <Script: OP_1>
    ✓ should handle invalid tx test without cache: Argument negative with by-blockheight nLockTime=0
    ✓ should handle invalid tx test without cache: Argument negative with by-blocktime nLockTime=500,000,000
    ✓ should handle invalid tx test without cache: <Script: OP_1>
    ✓ should handle invalid tx test without cache: Input locked
    ✓ should handle invalid tx test without cache: <Script: OP_0>
    ✓ should handle invalid tx test without cache: Another input being unlocked isn't sufficient; the CHECKLOCKTIMEVERIFY-using input must be unlocked
    ✓ should handle invalid tx test without cache: Argument/tx height/time mismatch, both versions
    ✓ should handle invalid tx test without cache: <Script: OP_0>
    ✓ should handle invalid tx test without cache: <Script: 499999999 OP_CHECKLOCKTIMEVERIFY OP_1>
    ✓ should handle invalid tx test without cache: <Script: 500000000 OP_CHECKLOCKTIMEVERIFY OP_1>
    ✓ should handle invalid tx test without cache: <Script: 500000000 OP_CHECKLOCKTIMEVERIFY OP_1>
    ✓ should handle invalid tx test without cache: Argument 2^32 with nLockTime=2^32-1
    ✓ should handle invalid tx test without cache: Same, but with nLockTime=2^31-1
    ✓ should handle invalid tx test without cache: 6 byte non-minimally-encoded arguments are invalid even if their contents are valid
    ✓ should handle invalid tx test without cache: Failure due to failing CHECKLOCKTIMEVERIFY in scriptSig
    ✓ should handle invalid tx test without cache: Failure due to failing CHECKLOCKTIMEVERIFY in redeemScript
    ✓ should handle invalid tx test without cache: A transaction with a non-standard DER signature.
    ✓ should handle invalid tx test without cache: CHECKSEQUENCEVERIFY tests By-height locks, with argument just beyond txin.nSequence
    ✓ should handle invalid tx test without cache: <Script: 4259839 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle invalid tx test without cache: By-time locks, with argument just beyond txin.nSequence (but within numerical boundries)
    ✓ should handle invalid tx test without cache: <Script: 4259839 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle invalid tx test without cache: Argument missing
    ✓ should handle invalid tx test without cache: Argument negative with by-blockheight txin.nSequence=0
    ✓ should handle invalid tx test without cache: Argument negative with by-blocktime txin.nSequence=CTxIn::SEQUENCE_LOCKTIME_TYPE_FLAG
    ✓ should handle invalid tx test without cache: Argument/tx height/time mismatch, both versions
    ✓ should handle invalid tx test without cache: <Script: 65535 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle invalid tx test without cache: <Script: 4194304 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle invalid tx test without cache: <Script: 4259839 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle invalid tx test without cache: 6 byte non-minimally-encoded arguments are invalid even if their contents are valid
    ✓ should handle invalid tx test without cache: Failure due to failing CHECKSEQUENCEVERIFY in scriptSig
    ✓ should handle invalid tx test without cache: Failure due to failing CHECKSEQUENCEVERIFY in redeemScript
    ✓ should handle invalid tx test without cache: Failure due to insufficient tx.nVersion (<2)
    ✓ should handle invalid tx test without cache: <Script: 4194304 OP_CHECKSEQUENCEVERIFY OP_1>
    ✓ should handle invalid tx test without cache: Unknown witness program version (with DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM)
    ✓ should handle invalid tx test without cache: Unknown length for witness program v0
    ✓ should handle invalid tx test without cache: Witness with SigHash Single|AnyoneCanPay (same index output value changed)
    ✓ should handle invalid tx test without cache: Witness with SigHash None|AnyoneCanPay (input sequence changed)
    ✓ should handle invalid tx test without cache: Witness with SigHash All|AnyoneCanPay (third output value changed)
    ✓ should handle invalid tx test without cache: Witness with a push of 521 bytes
    ✓ should handle invalid tx test without cache: Witness with unknown version which push false on the stack should be invalid (even without DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM)
    ✓ should handle invalid tx test without cache: Witness program should leave clean stack
    ✓ should handle invalid tx test without cache: Witness v0 with a push of 2 bytes
    ✓ should handle invalid tx test without cache: Unknown witness version with non empty scriptSig
    ✓ should handle invalid tx test without cache: Non witness Single|AnyoneCanPay hash input's position (permutation)
    ✓ should handle invalid tx test without cache: P2WSH with a redeem representing a witness scriptPubKey should fail
    ✓ should handle invalid tx test without cache: 33 bytes push should be considered a witness scriptPubKey
    ✓ should handle invalid tx test without cache: FindAndDelete tests This is a test of FindAndDelete. The first tx is a spend of normal scriptPubKey and the second tx is a spend of bare P2WSH. The redeemScript/witnessScript is CHECKSIGVERIFY <0x30450220487fb382c4974de3f7d834c1b617fe15860828c7f96454490edd6d891556dcc9022100baf95feb48f845d5bfc9882eb6aeefa1bc3790e39f59eaa46ff7f15ae626c53e01>. The signature is <0x30450220487fb382c4974de3f7d834c1b617fe15860828c7f96454490edd6d891556dcc9022100baf95feb48f845d5bfc9882eb6aeefa1bc3790e39f59eaa46ff7f15ae626c53e01> <pubkey>, where the pubkey is obtained through key recovery with sig and the wrong sighash. This is to show that FindAndDelete is applied only to non-segwit scripts To show that the tests are 'correctly wrong', they should pass by modifying OP_CHECKSIG under interpreter.cpp by replacing (sigversion == SIGVERSION_BASE) with (sigversion != SIGVERSION_BASE) Non-segwit: wrong sighash (without FindAndDelete) = 1ba1fe3bc90c5d1265460e684ce6774e324f0fabdf67619eda729e64e8b6bc08
    ✓ should handle invalid tx test without cache: BIP143: wrong sighash (with FindAndDelete) = 71c9cd9b2869b9c70b01b1f0360c148f42dee72297db312638df136f43311f23
    ✓ should handle invalid tx test without cache: This is multisig version of the FindAndDelete tests Script is 2 CHECKMULTISIGVERIFY <sig1> <sig2> DROP 52af4830450220487fb382c4974de3f7d834c1b617fe15860828c7f96454490edd6d891556dcc9022100baf95feb48f845d5bfc9882eb6aeefa1bc3790e39f59eaa46ff7f15ae626c53e0148304502205286f726690b2e9b0207f0345711e63fa7012045b9eb0f19c2458ce1db90cf43022100e89f17f86abc5b149eba4115d4f128bcf45d77fb3ecdd34f594091340c0395960175 Signature is 0 <sig1> <sig2> 2 <key1> <key2> Should pass by replacing (sigversion == SIGVERSION_BASE) with (sigversion != SIGVERSION_BASE) under OP_CHECKMULTISIG Non-segwit: wrong sighash (without FindAndDelete) = 4bc6a53e8e16ef508c19e38bba08831daba85228b0211f323d4cb0999cf2a5e8
    ✓ should handle invalid tx test without cache: BIP143: wrong sighash (with FindAndDelete) = 17c50ec2181ecdfdc85ca081174b248199ba81fff730794d4f69b8ec031f2dce
    ✓ should get sighash of 31af167a6cf3f9d5f6875caa4d31704ceb0eba078d132b78dab52c3b8997317e (03) without cache
    ✓ should get sighash of 48d6a1bd2cd9eec54eb866fc71209418a950402b5d7e52363bfb75c98e141175 (00) without cache
    ✓ should get sighash of 2a3d95b09237b72034b23f2d2bb29fa32a58ab5c6aa72f6aafdfa178ab1dd01c (01) without cache
    ✓ should get sighash of 06e328de263a87b09beabe222a21627a6ea5c7f560030da31610c4611f4a46bc (81) without cache
    ✓ should get sighash of f03aa4fc5f97e826323d0daa03343ebf8a34ed67a1ce18631f8b88e5c992e798 (01) without cache
    ✓ should get sighash of 746306f322de2b4b58ffe7faae83f6a72433c22f88062cdde881d4dd8a5a4e2d (01) without cache
    ✓ should get sighash of 5c9d3a2ce9365bb72cfabbaa4579c843bb8abf200944612cf8ae4b56a908bcbd (80) without cache
    ✓ should get sighash of c336b2f7d3702fbbdeffc014d106c69e3413c7c71e436ba7562d8a7a2871f181 (01) without cache
    ✓ should get sighash of 29aa6d2d752d3310eba20442770ad345b7f6a35f96161ede5f07b33e92053e2a (83) without cache
    ✓ should get sighash of bf5fdc314ded2372a0ad078568d76c5064bf2affbde0764c335009e56634481b (02) without cache
    ✓ should get sighash of 191ab180b0d753763671717d051f138d4866b7cb0d1d4811472e64de595d2c70 (02) without cache
    ✓ should get sighash of b6632ac53578a741ae8c36d8b69e79f39b89913a2c781cdf1bf47a8c29d997a5 (81) without cache
    ✓ should get sighash of 6e3735d37a4b28c45919543aabcb732e7a3e1874db5315abb7cc6b143d62ff10 (02) without cache
    ✓ should get sighash of d76d0fc0abfa72d646df888bce08db957e627f72962647016eeae5a8412354cf (81) without cache
    ✓ should get sighash of 6e48f3da3a4ac07eb4043a232df9f84e110485d7c7669dd114f679c27d15b97e (82) without cache
    ✓ should get sighash of c6076b6a45e6fcfba14d3df47a34f6aadbacfba107e95621d8d7c9c0e40518ed (80) without cache
    ✓ should get sighash of aeb8c5a62e8a0b572c28f2029db32854c0b614dbecef0eaa726abebb42eebb8d (83) without cache
    ✓ should get sighash of a6e6cb69f409ec14e10dd476f39167c29e586e99bfac93a37ed2c230fcc1dbbe (01) without cache
    ✓ should get sighash of 7ca0f75e6530ec9f80d031fc3513ca4ecd67f20cb38b4dacc6a1d825c3cdbfdb (80) without cache
    ✓ should get sighash of 58294f0d7f2e68fe1fd30c01764fe1619bcc7961d68968944a0e263af6550437 (00) without cache
    ✓ should get sighash of 8b300032a1915a4ac05cea2f7d44c26f2a08d109a71602636f15866563eaafdc (81) without cache
    ✓ should get sighash of d55ed1e6c53510f2608716c12132a11fb5e662ec67421a513c074537eeccc34b (80) without cache
    ✓ should get sighash of 2765bbdcd3ebb8b1a316c04656b28d637f80bffbe9b040661481d3dc83eea6d6 (02) without cache
    ✓ should get sighash of 663c999a52288c9999bff36c9da2f8b78d5c61b8347538f76c164ccba9868d0a (01) without cache
    ✓ should get sighash of b9c3aee8515a4a3b439de1ffc9c156824bda12cb75bfe5bc863164e8fd31bd7a (01) without cache
    ✓ should get sighash of be567cb47170b34ff81c66c1142cb9d27f9b6898a384d6dfc4fce16b75b6cb14 (82) without cache
    ✓ should get sighash of 2149e79c3f4513da4e4378608e497dcfdfc7f27c21a826868f728abd2b8a637a (03) without cache
    ✓ should get sighash of 32db877b6b1ca556c9e859442329406f0f8246706522369839979a9f7a235a32 (02) without cache
    ✓ should get sighash of edf73e2396694e58f6b619f68595b0c1cdcb56a9b3147845b6d6afdb5a80b736 (00) without cache
    ✓ should get sighash of f0a2deee7fd8a3a9fad6927e763ded11c940ee47e9e6d410f94fda5001f82e0c (01) without cache
    ✓ should get sighash of aa418d096929394c9147be8818d8c9dafe6d105945ab9cd7ec682df537b5dd79 (01) without cache
    ✓ should get sighash of eb9ceecc3b401224cb79a44d23aa8f428e29f1405daf69b4e01910b848ef1523 (83) without cache
    ✓ should get sighash of 88fdee1c2d4aeead71d62396e28dc4d00e5a23498eea66844b9f5d26d1f21042 (03) without cache
    ✓ should get sighash of f6a1ecb50bd7c2594ebecea5a1aa23c905087553e40486dade793c2f127fdfae (80) without cache
    ✓ should get sighash of f7efb74b1dcc49d316b49c632301bc46f98d333c427e55338be60c7ef0d953be (80) without cache
    ✓ should get sighash of f2286001af0b0170cbdad92693d0a5ebaa8262a4a9d66e002f6d79a8c94026d1 (82) without cache
    ✓ should get sighash of 30df2473e1403e2b8e637e576825f785528d998af127d501556e5f7f5ed89a2a (00) without cache
    ✓ should get sighash of 7f21b62267ed52462e371a917eb3542569a4049b9dfca2de3c75872b39510b26 (81) without cache
    ✓ should get sighash of 8af0b4cbdbc011be848edf4dbd2cde96f0578d662cfebc42252495387114224a (01) without cache
    ✓ should get sighash of 40ed8e7bbbd893e15f3cce210ae02c97669818de5946ca37eefc7541116e2c78 (00) without cache
    ✓ should get sighash of 136beb95459fe6b126cd6cefd54eb5d971524b0e883e41a292a78f78015cb8d5 (83) without cache
    ✓ should get sighash of 9eb8adf2caecb4bf9ac59d7f46bd20e83258472db2f569ee91aba4cf5ee78e29 (01) without cache
    ✓ should get sighash of 5ca70e727d91b1a42b78488af2ed551642c32d3de4712a51679f60f1456a8647 (03) without cache
    ✓ should get sighash of 2be27a686eb7940dd32c44ff3a97c1b28feb7ab9c5c0b1593b2d762361cfc2db (01) without cache
    ✓ should get sighash of 49c8a6940a461cc7225637f1e512cdd174c99f96ec05935a59637ededc77124c (03) without cache
    ✓ should get sighash of 7f208df9a5507e98c62cebc5c1e2445eb632e95527594929b9577b53363e96f6 (80) without cache
    ✓ should get sighash of 5fa09d43c8aef6f6fa01c383a69a5a61a609cd06e37dce35a39dc9eae3ddfe6c (81) without cache
    ✓ should get sighash of 713ddeeefcfe04929e7b6593c792a4efbae88d2b5280d1f0835d2214eddcbad6 (03) without cache
    ✓ should get sighash of fe42f73a8742676e640698222b1bd6b9c338ff1ccd766d3d88d7d3c6c6ac987e (80) without cache
    ✓ should get sighash of 551ce975d58647f10adefb3e529d9bf9cda34751627ec45e690f135ef0034b95 (82) without cache
    ✓ should get sighash of 069f38fd5d47abff46f04ee3ae27db03275e9aa4737fa0d2f5394779f9654845 (82) without cache
    ✓ should get sighash of 6da32416deb45a0d720a1dbe6d357886eabc44029dd5db74d50feaffbe763245 (03) without cache
    ✓ should get sighash of 76c4013c40bfa1481badd9d342b6d4b8118de5ab497995fafbf73144469e5ff0 (01) without cache
    ✓ should get sighash of fb7eca81d816354b6aedec8cafc721d5b107336657acafd0d246049556f9e04b (82) without cache
    ✓ should get sighash of 8085e904164ab9a8c20f58f0d387f6adb3df85532e11662c03b53c3df8c943cb (03) without cache
    ✓ should get sighash of 9db4e320208185ee70edb4764ee195deca00ba46412d5527d9700c1cf1c3d057 (00) without cache
    ✓ should get sighash of 0133f1a161363b71dfb3a90065c7128c56bd0028b558b610142df79e055ab5c7 (01) without cache
    ✓ should get sighash of d1df1f4bba2484cff8a816012bb6ec91c693e8ca69fe85255e0031711081c46a (02) without cache
    ✓ should get sighash of 40b4f03c68288bdc996011b0f0ddb4b48dc3be6762db7388bdc826113266cd6c (00) without cache
    ✓ should get sighash of 2ef025e907f0fa454a2b48a4f3b81346ba2b252769b5c35d742d0c8985e0bf5e (80) without cache
    ✓ should get sighash of 1f8a3aca573a609f4aea0c69522a82fcb4e15835449da24a05886ddc601f4f6a (02) without cache
    ✓ should get sighash of 0d17a92c8d5041ba09b506ddf9fd48993be389d000aad54f9cc2a44fcc70426b (03) without cache
    ✓ should get sighash of 8221d5dfb75fc301a80e919e158e0b1d1e86ffb08870a326c89408d9bc17346b (00) without cache
    ✓ should get sighash of 13e8b5ab4e5b2ceeff0045c625e19898bda2d39fd7af682e2d1521303cfe1154 (02) without cache
    ✓ should get sighash of 87ddf1f9acb6640448e955bd1968f738b4b3e073983af7b83394ab7557f5cd61 (00) without cache
    ✓ should get sighash of da8405db28726dc4e0f82b61b2bfd82b1baa436b4e59300305cc3b090b157504 (03) without cache
    ✓ should get sighash of ed53cc766cf7cb8071cec9752460763b504b2183442328c5a9761eb005c69501 (02) without cache
    ✓ should get sighash of e1a256854099907050cfee7778f2018082e735a1f1a3d91437584850a74c87bb (81) without cache
    ✓ should get sighash of abe441209165d25bc6d8368f2e7e7dc21019056719fef1ace45542aa2ef282e2 (02) without cache
    ✓ should get sighash of 0dd1bd5c25533bf5f268aa316ce40f97452cca2061f0b126a59094ca5b65f7a0 (81) without cache
    ✓ should get sighash of 73fe22099c826c34a74edf45591f5d7b3a888c8178cd08facdfd96a9a681261c (82) without cache
    ✓ should get sighash of eea96a48ee572aea33d75d0587ce954fcfb425531a7da39df26ef9a6635201be (82) without cache
    ✓ should get sighash of 5ec805e74ee934aa815ca5f763425785ae390282d46b5f6ea076b6ad6255a842 (81) without cache
    ✓ should get sighash of 42f5ba6f5fe1e00e652a08c46715871dc4b40d89d9799fd7c0ea758f86eab6a7 (02) without cache
    ✓ should get sighash of 8449d5247071325e5f8edcc93cb9666c0fecabb130ce0e5bef050575488477eb (02) without cache
    ✓ should get sighash of f98f95d0c5ec3ac3e699d81f6c440d2e7843eab15393eb023bc5a62835d6dcea (82) without cache
    ✓ should get sighash of f79e6b776e2592bad45ca328c54abf14050c241d8f822d982c36ea890fd45757 (80) without cache
    ✓ should get sighash of 771d4d87f1591a13d77e51858c16d78f1956712fe09a46ff1abcabbc1e7af711 (01) without cache
    ✓ should get sighash of 726bb88cdf3af2f7603a31f33d2612562306d08972a4412a55dbbc0e3363721c (80) without cache
    ✓ should get sighash of 1e0da47eedbbb381b0e0debbb76e128d042e02e65b11125e17fd127305fc65cd (03) without cache
    ✓ should get sighash of 55591346aec652980885a558cc5fc2e3f8d21cbd09f314a798e5a7ead5113ea6 (83) without cache
    ✓ should get sighash of f5b38b0f06e246e47ce622e5ee27d5512c509f8ac0e39651b3389815eff2ab93 (01) without cache
    ✓ should get sighash of eb2d8dea38e9175d4d33df41f4087c6fea038a71572e3bad1ea166353bf22184 (01) without cache
    ✓ should get sighash of 13d12a51598b34851e7066cd93ab8c5212d60c6ed2dae09d91672c10ccd7f87c (01) without cache
    ✓ should get sighash of 53ab197fa7e27b8a3f99ff48305e67081eb90e95d89d7e92d80cee25a03a6689 (03) without cache
    ✓ should get sighash of 93c34627f526d73f4bea044392d1a99776b4409f7d3d835f23b03c358f5a61c2 (00) without cache
    ✓ should get sighash of bbc9069b8615f3a52ac8a77359098dcc6c1ba88c8372d5d5fe080b99eb781e55 (80) without cache
    ✓ should get sighash of 5848d93491044d7f21884eef7a244fe7d38886f8ae60df49ce0dfb2a342cd51a (80) without cache
    ✓ should get sighash of 603a9b61cd30fcea43ef0a5c18b88ca372690b971b379ee9e01909c336280511 (01) without cache
    ✓ should get sighash of 3b320dd47f2702452a49a1288bdc74a19a4b849b132b6cad9a1d945d87dfbb23 (81) without cache
    ✓ should get sighash of 079fa62e9d9d7654da8b74b065da3154f3e63c315f25751b4d896733a1d67807 (80) without cache
    ✓ should get sighash of 2921a0e5e3ba83c57ba57c25569380c17986bf34c366ec216d4188d5ba8b0b47 (02) without cache
    ✓ should get sighash of 4aae6648f856994bed252d319932d78db55da50d32b9008216d5366b44bfdf8a (00) without cache
    ✓ should get sighash of 3f988922d8cd11c7adff1a83ce9499019e5ab5f424752d8d361cf1762e04269b (00) without cache
    ✓ should get sighash of bd36a50e0e0a4ecbf2709e68daef41eddc1c0c9769efaee57910e99c0a1d1343 (01) without cache
    ✓ should get sighash of 41bead1b073e1e9fee065dd612a617ca0689e8f9d3fed9d0acfa97398ebb404c (00) without cache
    ✓ should get sighash of 71dfcd2eb7f2e6473aed47b16a6d5fcbd0af22813d892e9765023151e07771ec (01) without cache
    ✓ should get sighash of 0d31a221c69bd322ef7193dd7359ddfefec9e0a1521d4a8740326d46e44a5d6a (80) without cache
    ✓ should get sighash of daec2af5622bbe220c762da77bab14dc75e7d28aa1ade9b7f100798f7f0fd97a (02) without cache
    ✓ should get sighash of 75a7db0df41485a28bf6a77a37ca15fa8eccc95b5d6014a731fd8adb9ada0f12 (83) without cache
    ✓ should get sighash of ced7ef84aad4097e1eb96310e0d1c8e512cfcb392a01d9010713459b23bc0cf4 (00) without cache
    ✓ should get sighash of c503001c16fbff82a99a18d88fe18720af63656fccd8511bca1c3d0d69bd7fc0 (01) without cache
    ✓ should get sighash of e84444d91580da41c8a7dcf6d32229bb106f1be0c811b2292967ead5a96ce9d4 (03) without cache
    ✓ should get sighash of ef4bd7622eb7b2bbbbdc48663c1bc90e01d5bde90ff4cb946596f781eb420a0c (83) without cache
    ✓ should get sighash of 4012f5ff2f1238a0eb84854074670b4703238ebc15bfcdcd47ffa8498105fcd9 (02) without cache
    ✓ should get sighash of e1600e6df8a6160a79ac32aa40bb4644daa88b5f76c0d7d13bf003327223f70c (03) without cache
    ✓ should get sighash of 05cf0ec9c61f1a15f651a0b3c5c221aa543553ce6c804593f43bb5c50bb91ffb (00) without cache
    ✓ should get sighash of d309da5afd91b7afa257cfd62df3ca9df036b6a9f4b38f5697d1daa1f587312b (00) without cache
    ✓ should get sighash of 72b7da10704c3ca7d1deb60c31b718ee12c70dc9dfb9ae3461edce50789fe2ba (02) without cache
    ✓ should get sighash of 393aa6c758e0eed15fa4af6d9e2d7c63f49057246dbb92b4268ec24fc87301ca (80) without cache
    ✓ should get sighash of 60b7544319b42e4159976c35c32c2644f0adf42eff13be1dc2f726fc0b6bb492 (83) without cache
    ✓ should get sighash of 6a9ac3f7da4c7735fbc91f728b52ecbd602233208f96ac5592656074a5db118a (82) without cache
    ✓ should get sighash of cfe147982afacde044ce66008cbc5b1e9f0fd9b8ed52b59fc7c0fecf95a39b0e (02) without cache
    ✓ should get sighash of 35e94b3776a6729d20aa2f3ddeeb06d3aad1c14cc4cde52fd21a4efc212ea16c (03) without cache
    ✓ should get sighash of ee4ea49d2aae0dbba05f0b9785172da54408eb1ec67d36759ff7ed25bfc28766 (81) without cache
    ✓ should get sighash of 299dcaac2bdaa627eba0dfd74767ee6c6f27c9200b49da8ff6270b1041669e7e (82) without cache
    ✓ should get sighash of a4c0773204ab418a939e23f493bd4b3e817375d133d307609e9782f2cc38dbcf (82) without cache
    ✓ should get sighash of cc180c4f797c16a639962e7aec58ec4b209853d842010e4d090895b22e7a7863 (01) without cache
    ✓ should get sighash of 566953eb806d40a9fb684d46c1bf8c69dea86273424d562bd407b9461c8509af (80) without cache
    ✓ should get sighash of 6e6307cef4f3a9b386f751a6f40acebab12a0e7e17171d2989293cbec7fd45c2 (83) without cache
    ✓ should get sighash of 577bf2b3520b40aef44899a20d37833f1cded6b167e4d648fc5abe203e43b649 (80) without cache
    ✓ should get sighash of 730bc25699b46703d7718fd5f5c34c4b5f00f594a9968ddc247fa7d5175124ed (03) without cache
    ✓ should get sighash of 66c488603b2bc53f0d22994a1f0f66fb2958203102eba30fe1d37b27a55de7a5 (83) without cache
    ✓ should get sighash of 051c0df7ac688c2c930808dabde1f50300aea115f2bb3334f4753d5169b51e46 (80) without cache
    ✓ should get sighash of ddfd902bba312a06197810da96a0ddccb595f96670b28ded7dba88d8cd0469b8 (80) without cache
    ✓ should get sighash of 96c2b32f0a00a5925db7ba72d0b5d39922f30ea0f7443b22bc1b734808513c47 (00) without cache
    ✓ should get sighash of bf078519fa87b79f40abc38f1831731422722c59f88d86775535f209cb41b9b1 (01) without cache
    ✓ should get sighash of e33d5ee08c0f3c130a44d7ce29606450271b676f4a80c52ab9ffab00cecf67f8 (82) without cache
    ✓ should get sighash of 8b57a7c3170c6c02dd14ae1d392ce3d828197b20e9145c89c1cfd5de050e1562 (83) without cache
    ✓ should get sighash of 3cb5b030e7da0b60ccce5b4a7f3793e6ca56f03e3799fe2d6c3cc22d6d841dcb (00) without cache
    ✓ should get sighash of add7f5da27262f13da6a1e2cc2feafdc809bd66a67fb8ae2a6f5e6be95373b6f (83) without cache
    ✓ should get sighash of 883a6ea3b2cc53fe8a803c229106366ca14d25ffbab9fef8367340f65b201da6 (02) without cache
    ✓ should get sighash of b5dab912bcabedff5f63f6dd395fc2cf030d83eb4dd28214baba68a45b4bfff0 (81) without cache
    ✓ should get sighash of 7fc74de39ce6ca46ca25d760d3cec7bb21fd14f7efe1c443b5aa294f2cb5f546 (00) without cache
    ✓ should get sighash of ab6baa6da3b2bc853868d166f8996ad31d63ef981179f9104f49968fd61c8427 (00) without cache
    ✓ should get sighash of 91178482112f94d1c8e929de443e4b9c893e18682998d393ca9ca77950412586 (00) without cache
    ✓ should get sighash of 5e1849e7368cf4f042718586d9bd831d61479b775bab97aba9f450042bd9876a (83) without cache
    ✓ should get sighash of e9995065e1fddef72a796eef5274de62012249660dc9d233a4f24e02a2979c87 (83) without cache
    ✓ should get sighash of 0e9c47973ef2c292b2252c623f465bbb92046fe0b893eebf4e1c9e02cb01c397 (80) without cache
    ✓ should get sighash of 32154c09174a9906183abf26538c39e78468344ca0848bbd0785e24a3565d932 (83) without cache
    ✓ should get sighash of 4605ae5fd3d50f9c45d37db7118a81a9ef6eb475d2333f59df5d3e216f150d49 (82) without cache
    ✓ should get sighash of ff9d7394002f3f196ea25472ea6c46f753bd879a7244795157bb7235c9322902 (80) without cache
    ✓ should get sighash of 59fc2959bb7bb24576cc8a237961ed95bbb900679d94da6567734c4390cb6ef5 (80) without cache
    ✓ should get sighash of e9f53d531c12cce1c50abed4ac521a372b4449b6a12f9327c80020df6bff66c0 (83) without cache
    ✓ should get sighash of fb51eb9d7e47d32ff2086205214f90c7c139e08c257a64829ae4d2b301071c6a (01) without cache
    ✓ should get sighash of 57a34ddeb1bf36d28c7294dda0432e9228a9c9e5cc5c692db98b6ed2e218d825 (02) without cache
    ✓ should get sighash of edb7c74223d1f10f9b3b9c1db8064bc487321ff7bb346f287c6bc2fad83682de (80) without cache
    ✓ should get sighash of f0672638a0e568a919e9d8a9cbd7c0189a3e132940beeb52f111a89dcc2daa2c (83) without cache
    ✓ should get sighash of 722efdd69a7d51d3d77bed0ac5544502da67e475ea5857cd5af6bdf640a69945 (01) without cache
    ✓ should get sighash of 659cd3203095d4a8672646add7d77831a1926fc5b66128801979939383695a79 (83) without cache
    ✓ should get sighash of d82d4ccd9b67810f26a378ad9592eb7a30935cbbd27e859b00981aefd0a72e08 (83) without cache
    ✓ should get sighash of 8eebac87e60da524bbccaf285a44043e2c9232868dda6c6271a53c153e7f3a55 (83) without cache
    ✓ should get sighash of 046de666545330e50d53083eb78c9336416902f9b96c77cc8d8e543da6dfc7e4 (82) without cache
    ✓ should get sighash of 478ee06501b4965b40bdba6cbaad9b779b38555a970912bb791b86b7191c54bc (80) without cache
    ✓ should get sighash of db0329439490efc64b7104d6d009b03fbc6fac597cf54fd786fbbb5fd73b92b4 (81) without cache
    ✓ should get sighash of 92364ba3c7a85d4e88885b8cb9b520dd81fc29e9d2b750d0790690e9c1246673 (80) without cache
    ✓ should get sighash of 1f4209fd4ce7f13d175fdd522474ae9b34776fe11a5f17a27d0796c77a2a7a9d (00) without cache
    ✓ should get sighash of b596f206d7eba22b7e2d1b7a4f4cf69c7c541b6c84dcc943f84e19a99a923310 (80) without cache
    ✓ should get sighash of e19b796c14a0373674968e342f2741d8b51092a5f8409e9bff7dcd52e56fcbcb (80) without cache
    ✓ should get sighash of 6e3e5ba77f760b6b5b5557b13043f1262418f3dd2ce7f0298b012811fc8ad5bc (83) without cache
    ✓ should get sighash of fad092fc98f17c2c20e10ba9a8eb44cc2bcc964b006f4da45cb9ceb249c69698 (02) without cache
    ✓ should get sighash of 5418cf059b5f15774836edd93571e0eed3855ba67b2b08c99dccab69dc87d3e9 (81) without cache
    ✓ should get sighash of 0d66003aff5bf78cf492ecbc8fd40c92891acd58d0a271be9062e035897f317e (03) without cache
    ✓ should get sighash of 4e4c9a781f626b59b1d3ad8f2c488eb6dee8bb19b9bc138bf0dc33e7799210d4 (81) without cache
    ✓ should get sighash of a869c18a0edf563d6e5eddd5d5ae8686f41d07f394f95c9feb8b7e52761531ca (03) without cache
    ✓ should get sighash of b1c50d58b753e8f6c7513752158e9802cf0a729ebe432b99acc0fe5d9b4e9980 (83) without cache
    ✓ should get sighash of 6b1459536f51482f5dbf42d7e561896557461e1e3b6bf67871e2b51faae2832c (80) without cache
    ✓ should get sighash of 154ff7a9f0875edcfb9f8657a0b98dd9600fabee3c43eb88af37cf99286d516c (83) without cache
    ✓ should get sighash of 849033a2321b5755e56ef4527ae6f51e30e3bca50149d5707368479723d744f8 (01) without cache
    ✓ should get sighash of 8556fe52d1d0782361dc28baaf8774b13f3ce5ed486ae0f124b665111e08e3e3 (01) without cache
    ✓ should get sighash of d9684685c99ce48f398fb467a91a1a59629a850c429046fb3071f1fa9a5fe816 (01) without cache
    ✓ should get sighash of 7e975a72db5adaa3c48d525d9c28ac11cf116d0f8b16ce08f735ad75a80aec66 (03) without cache
    ✓ should get sighash of 47bc8ab070273e1f4a0789c37b45569a6e16f3f3092d1ce94dddc3c34a28f9f4 (00) without cache
    ✓ should get sighash of f3374253d64ac264055bdbcc32e27426416bd595b7c7915936c70f839e504010 (03) without cache
    ✓ should get sighash of 8d7794703dad18e2e40d83f3e65269834bb293e2d2b8525932d6921884b8f368 (80) without cache
    ✓ should get sighash of 4e6357da0057fb7ff79da2cc0f20c5df27ff8b2f8af4c1709e6530459f7972b0 (83) without cache
    ✓ should get sighash of 83deef4a698b62a79d4877dd9afebc3011a5275dbe06e89567e9ef84e8a4ee19 (80) without cache
    ✓ should get sighash of 98ccde2dc14d14f5d8b1eeea5364bd18fc84560fec2fcea8de4d88b49c00695e (03) without cache
    ✓ should get sighash of a903c84d8c5e71134d1ab6dc1e21ac307c4c1a32c90c90f556f257b8a0ec1bf5 (80) without cache
    ✓ should get sighash of 83c68b3c5a89260ce16ce8b4dbf02e1f573c532d9a72f5ea57ab419fa2630214 (03) without cache
    ✓ should get sighash of 9c5fa02abfd34d0f9dec32bf3edb1089fca70016debdb41f4f54affcb13a2a2a (01) without cache
    ✓ should get sighash of f0bd4ca8e97203b9b4e86bc24bdc8a1a726db5e99b91000a14519dc83fc55c29 (01) without cache
    ✓ should get sighash of 5509eba029cc11d7dd2808b8c9eb47a19022b8d8b7778893459bbc19ab7ea820 (80) without cache
    ✓ should get sighash of 4ca73da4fcd5f1b10da07998706ffe16408aa5dff7cec40b52081a6514e3827e (83) without cache
    ✓ should get sighash of fb018ae54206fdd20c83ae5873ec82b8e320a27ed0d0662db09cda8a071f9852 (02) without cache
    ✓ should get sighash of 001b0b176f0451dfe2d9787b42097ceb62c70d324e925ead4c58b09eebdf7f67 (01) without cache
    ✓ should get sighash of ac87b1b93a6baab6b2c6624f10e8ebf6849b0378ef9660a3329073e8f5553c8d (03) without cache
    ✓ should get sighash of 0767e09bba8cd66d55915677a1c781acd5054f530d5cf6de2d34320d6c467d80 (82) without cache
    ✓ should get sighash of de35c84a58f2458c33f564b9e58bc57c3e028d629f961ad1b3c10ee020166e5a (01) without cache
    ✓ should get sighash of e2fa3e1976aed82c0987ab30d4542da2cb1cffc2f73be13480132da8c8558d5c (81) without cache
    ✓ should get sighash of 7de4ba875b2e584a7b658818c112e51ee5e86226f5a80e5f6b15528c86400573 (82) without cache
    ✓ should get sighash of 6b77ca70cc452cc89acb83b69857cda98efbfc221688fe816ef4cb4faf152f86 (01) without cache
    ✓ should get sighash of bd7d26bb3a98fc8c90c972500618bf894cb1b4fe37bf5481ff60eef439d3b970 (00) without cache
    ✓ should get sighash of 355ccaf30697c9c5b966e619a554d3323d7494c3ea280a9b0dfb73f953f5c1cb (02) without cache
    ✓ should get sighash of 353ca9619ccb0210ae18b24d0e57efa7abf8e58fa6f7102738e51e8e72c9f0c4 (81) without cache
    ✓ should get sighash of b35bb1b72d02fab866ed6bbbea9726ab32d968d33a776686df3ac16aa445871e (81) without cache
    ✓ should get sighash of 7615b4a7b3be865633a31e346bc3db0bcc410502c8358a65b8127089d81b01f8 (81) without cache
    ✓ should get sighash of 4f2ccf981598639bec57f885b4c3d8ea8db445ea6e61cfd45789c69374862e5e (00) without cache
    ✓ should get sighash of 984efe0d8d12e43827b9e4b27e97b3777ece930fd1f589d616c6f9b71dab710e (80) without cache
    ✓ should get sighash of 4a74f365a161bc6c9bddd249cbd70f5dadbe3de70ef4bd745dcb6ee1cd299fbd (83) without cache
    ✓ should get sighash of 08bbb746a596991ab7f53a76e19acad087f19cf3e1db54054aab403c43682d09 (82) without cache
    ✓ should get sighash of 8ca11838775822f9a5beee57bdb352f4ee548f122de4a5ca61c21b01a1d50325 (83) without cache
    ✓ should get sighash of 9bc5bb772c553831fb40abe466074e59a469154679c7dee042b8ea3001c20393 (03) without cache
    ✓ should get sighash of 78eb6b24365ac1edc386aa4ffd15772f601059581c8776c34f92f8a7763c9ccf (03) without cache
    ✓ should get sighash of f6da59b9deac63e83728850ac791de61f5dfcaeed384ebcbb20e44afcd8c8910 (00) without cache
    ✓ should get sighash of 04c5ee48514cd033b82a28e336c4d051074f477ef2675ce0ce4bafe565ee9049 (82) without cache
    ✓ should get sighash of 2e42ead953c9f4f81b72c27557e6dc7d48c37ff2f5c46c1dbe9778fb0d79f5b2 (80) without cache
    ✓ should get sighash of d9096de94d70c6337da6202e6e588166f31bff5d51bb5adc9468594559d65695 (00) without cache
    ✓ should get sighash of ed5622ac642d11f90e68c0feea6a2fe36d880ecae6b8c0d89c4ea4b3d162bd90 (80) without cache
    ✓ should get sighash of f926d4036eac7f019a2b0b65356c4ee2fe50e089dd7a70f1843a9f7bc6997b35 (80) without cache
    ✓ should get sighash of 255c125b60ee85f4718b2972174c83588ee214958c3627f51f13b5fb56c8c317 (01) without cache
    ✓ should get sighash of 5a0a05e32ce4cd0558aabd5d79cd5fcbffa95c07137506e875a9afcba4bef5a2 (03) without cache
    ✓ should get sighash of 52b9e0778206af68998cbc4ebdaad5a9469e04d0a0a6cef251abfdbb74e2f031 (01) without cache
    ✓ should get sighash of b6b684e2d2ecec8a8dce4ed3fc1147f8b2e45732444222aa8f52d860c2a27a9d (02) without cache
    ✓ should get sighash of e5da9a416ea883be1f8b8b2d178463633f19de3fa82ae25d44ffb531e35bdbc8 (02) without cache
    ✓ should get sighash of 41ecca1e8152ec55074f4c39f8f2a7204dda48e9ec1e7f99d5e7e4044d159d43 (83) without cache
    ✓ should get sighash of ff8a4016dfdd918f53a45d3a1f62b12c407cd147d68ca5c92b7520e12c353ff5 (82) without cache
    ✓ should get sighash of bad77967f98941af4dd52a8517d5ad1e32307c0d511e15461e86465e1b8b5273 (82) without cache
    ✓ should get sighash of df1c87cf3ba70e754d19618a39fdbd2970def0c1bfc4576260cba5f025b87532 (81) without cache
    ✓ should get sighash of 71c294523c48fd7747eebefbf3ca06e25db7b36bff6d95b41c522fecb264a919 (83) without cache
    ✓ should get sighash of 110d90fea9470dfe6c5048f45c3af5e8cc0cb77dd58fd13d338268e1c24b1ccc (00) without cache
    ✓ should get sighash of 0322ca570446869ec7ec6ad66d9838cff95405002d474c0d3c17708c7ee039c6 (02) without cache
    ✓ should get sighash of 8b5b3d00d9c658f062fe6c5298e54b1fe4ed3a3eab2a87af4f3119edc47b1691 (83) without cache
    ✓ should get sighash of b79f31c289e95d9dadec48ebf88e27c1d920661e50d090e422957f90ff94cb6e (03) without cache
    ✓ should get sighash of 89ec7fab7cfe7d8d7d96956613c49dc48bf295269cfb4ea44f7333d88c170e62 (83) without cache
    ✓ should get sighash of 78e01310a228f645c23a2ad0acbb8d91cedff4ecdf7ca997662c6031eb702b11 (02) without cache
    ✓ should get sighash of 4cc85cbc2863ee7dbce15490d8ca2c5ded61998257b9eeaff968fe38e9f009ae (83) without cache
    ✓ should get sighash of 2d642ceee910abff0af2116af75b2e117ffb7469b2f19ad8fef08f558416d8f7 (00) without cache
    ✓ should get sighash of a17b66d6bb427f42653d08207a22b02353dd19ccf2c7de6a9a3a2bdb7c49c9e7 (82) without cache
    ✓ should get sighash of 8e221a6c4bf81ca0d8a0464562674dcd14a76a32a4b7baf99450dd9195d411e6 (03) without cache
    ✓ should get sighash of 714d8b14699835b26b2f94c58b6ea4c53da3f7adf0c62ea9966b1e1758272c47 (80) without cache
    ✓ should get sighash of 91082410630337a5d89ff19145097090f25d4a20bdd657b4b953927b2f62c73b (02) without cache
    ✓ should get sighash of 458aec3b5089a585b6bad9f99fd37a2b443dc5a2eefac2b7e8c5b06705efc9db (80) without cache
    ✓ should get sighash of bbed77ff0f808aa8abd946ba9e7ec1ddb003a969fa223dee0af779643cb841a9 (03) without cache
    ✓ should get sighash of 3212c6d6dd8d9d3b2ac959dec11f4638ccde9be6ed5d36955769294e23343da0 (01) without cache
    ✓ should get sighash of c40fd7dfa72321ac79516502500478d09a35cc22cc264d652c7d18b14400b739 (01) without cache
    ✓ should get sighash of 919144aada50db8675b7f9a6849c9d263b86450570293a03c245bd1e3095e292 (03) without cache
    ✓ should get sighash of 305fc8ff5dc04ebd9b6448b03c9a3d945a11567206c8d5214666b30ec6d0d6cc (80) without cache
    ✓ should get sighash of 2420dd722e229eccafae8508e7b8d75c6920bfdb3b5bac7cb8e23419480637c2 (80) without cache
    ✓ should get sighash of 4370d05c07e231d6515c7e454a4e401000b99329d22ed7def323976fa1d2eeb5 (03) without cache
    ✓ should get sighash of 2f9993e0a84a6ca560d6d1cc2b63ffe7fd71236d9cfe7d809491cef62bbfad84 (01) without cache
    ✓ should get sighash of 02040283ef2291d8e1f79bb71bdabe7c1546c40d7ed615c375643000a8b9600d (01) without cache
    ✓ should get sighash of f24be499c58295f3a07f5f1c6e5084496ae160450bd61fdb2934e615289448f1 (81) without cache
    ✓ should get sighash of 1c8655969b241e717b841526f87e6bd68b2329905ba3fc9e9f72526c0b3ea20c (80) without cache
    ✓ should get sighash of 94338cd47a4639be30a71e21a7103cee4c99ef7297e0edd56aaf57a068b004de (80) without cache
    ✓ should get sighash of 60caf46a7625f303c04706cec515a44b68ec319ee92273acb566cca4f66861c1 (02) without cache
    ✓ should get sighash of c834a5485e68dc13edb6c79948784712122440d7fa5bbaa5cd2fc3d4dac8185d (83) without cache
    ✓ should get sighash of 99b32b5679d91e0f9cdd6737afeb07459806e5acd7630c6a3b9ab5d550d0c003 (03) without cache
    ✓ should get sighash of 5071f8acf96aea41c7518bd1b5b6bbe16258b529df0c03f9e374b83c66b742c6 (01) without cache
    ✓ should get sighash of 9cb0dd04e9fe287b112e94a1647590d27e8b164ca13c4fe70c610fd13f82c2fd (00) without cache
    ✓ should get sighash of 47207b48777727532f62e09afcd4104ea6687e723c7657c30504fa2081331cc8 (01) without cache
    ✓ should get sighash of b8f3d255549909c07588ecba10a02e55a2d6f2206d831af9da1a7dae64cfbc8b (02) without cache
    ✓ should get sighash of ad01ec9d6dbae325ec3a8e1fd98e2d03b1188378210efef093dd8b0b0ef3f19d (01) without cache
    ✓ should get sighash of 595a3c02254564634e8085283ec4ea7c23808da97ce9c5da7aecd7b553e7fd7f (83) without cache
    ✓ should get sighash of 9c051a7092fe17fa62b1720bc2c4cb2ffc1527d9fb0b006d2e142bb8fe07bf3c (03) without cache
    ✓ should get sighash of 4d8efb3b99b9064d2f6be33b194a903ffabb9d0e7baa97a48fcec038072aac06 (82) without cache
    ✓ should get sighash of a638cc17fd91f4b1e77877e8d82448c84b2a4e100df1373f779de7ad32695112 (82) without cache
    ✓ should get sighash of c10ccc9db8a92d7d4b133a2980782dab9d9d1d633d0dde9f9612ada57771fd89 (03) without cache
    ✓ should get sighash of 0ca673a1ee66f9625ceb9ab278ebef772c113c188112b02824570c17fdf48194 (02) without cache
    ✓ should get sighash of 2c8be597620d95abd88f9c1cf4967c1ae3ca2309f3afec8928058c9598660e9e (82) without cache
    ✓ should get sighash of 26b22e18d5d9081fde9631594a4f7c49069ed2e429f3d08caf9d834f685ccab2 (83) without cache
    ✓ should get sighash of 8e0697d8cd8a9ccea837fd798cc6c5ed29f6fbd1892ee9bcb6c944772778af19 (02) without cache
    ✓ should get sighash of 7cda43f1ff9191c646c56a4e29b1a8c6cb3f7b331da6883ef2f0480a515d0861 (81) without cache
    ✓ should get sighash of 4435e62ff6531ac73529aac9cf878a7219e0b6e6cac79af8487c5355d1ad6d43 (03) without cache
    ✓ should get sighash of 913060c7454e6c80f5ba3835454b54db2188e37dc4ce72a16b37d11a430b3d23 (81) without cache
    ✓ should get sighash of bae189eb3d64aedbc28a6c28f6c0ccbd58472caaf0cf45a5aabae3e031dd1fea (03) without cache
    ✓ should get sighash of cfeaa36790bc398783d4ca45e6354e1ea52ee74e005df7f9ebd10a680e9607bf (80) without cache
    ✓ should get sighash of ec91eda1149f75bffb97612569a78855498c5d5386d473752a2c81454f297fa7 (81) without cache
    ✓ should get sighash of 3aad18a209fab8db44954eb55fd3cc7689b5ec9c77373a4d5f4dae8f7ae58d14 (03) without cache
    ✓ should get sighash of 86970af23c89b72a4f9d6281e46b9ef5220816bed71ebf1ae20df53f38fe16ff (01) without cache
    ✓ should get sighash of d0c4a780e4e0bc22e2f231e23f01c9d536b09f6e5be51c123d218e906ec518be (02) without cache
    ✓ should get sighash of fb4bd26a91b5cf225dd3f170eb09bad0eac314bc1e74503cc2a3f376833f183e (83) without cache
    ✓ should get sighash of 8e795aeef18f510d117dfa2b9f4a2bd2e2847a343205276cedd2ba14548fd63f (03) without cache
    ✓ should get sighash of b6ed4a3721be3c3c7305a5128c9d418efa58e419580cec0d83f133a93e3a22c5 (83) without cache
    ✓ should get sighash of 935892c6f02948f3b08bcd463b6acb769b02c1912be4450126768b055e8f183a (01) without cache
    ✓ should get sighash of 30c4cd4bd6b291f7e9489cc4b4440a083f93a7664ea1f93e77a9597dab8ded9c (02) without cache
    ✓ should get sighash of 2707ca714af09494bb4cf0794abe33c6cba5f29891d619e76070269d1fa8e690 (82) without cache
    ✓ should get sighash of 4abce77432a86dfe608e7c1646c18b5253a373392ff962e288e3ab96bba1ba1d (80) without cache
    ✓ should get sighash of 48411efeb133c6b7fec4e7bdbe613f827093cb06ea0dbcc2ffcfde3a9ac4356c (82) without cache
    ✓ should get sighash of b575a04b0bb56e38bbf26e1a396a76b99fb09db01527651673a073a75f0a7a34 (82) without cache
    ✓ should get sighash of fc93cc056c70d5e033933d730965f36ad81ef64f1762e57f0bc5506c5b507e24 (01) without cache
    ✓ should get sighash of e095003ca82af89738c1863f0f5488ec56a96fb81ea7df334f9344fcb1d0cf40 (01) without cache
    ✓ should get sighash of c6ec1b7cb5c16a1bfd8a3790db227d2acc836300534564252b57bd66acf95092 (80) without cache
    ✓ should get sighash of 5eeb03e03806cd7bfd44bbba69c30f84c2c5120df9e68cd8facc605fcfbc9693 (03) without cache
    ✓ should get sighash of b8db8d57fe40ab3a99cf2f8ed57da7a65050fcc1d34d4280e25faf10108d3110 (00) without cache
    ✓ should get sighash of c6675bf229737e005b5c8ffa6f81d9e2c4396840921b6151316f67c4315a4270 (00) without cache
    ✓ should get sighash of 205f3653f0142b35ce3ef39625442efebae98cde8cbf0516b97b51073bb0479f (01) without cache
    ✓ should get sighash of 3275e98dca37243b977525a07b5d8e369d6c3bdc08cb948029a635547d0d1a4e (03) without cache
    ✓ should get sighash of 508129278ef07b43112ac32faf00170ad38a500eed97615a860fd58baaad174b (81) without cache
    ✓ should get sighash of fe516df92299e995b8e6489be824c6839543071ec5e9286060b2600935bf1f20 (82) without cache
    ✓ should get sighash of d582c442e0ecc400c7ba33a56c93ad9c8cfd45af820350a13623594b793486f0 (83) without cache
    ✓ should get sighash of f151f1ec305f698d9fdce18ea292b145a58d931f1518cf2a4c83484d9a429638 (02) without cache
    ✓ should get sighash of d1b1d79001b4a0324962607b739972d6f39c1493c4500ce814fd3bd72d32a5a0 (00) without cache
    ✓ should get sighash of 1d25d16d84d5793be1ad5cda2de9c9cf70e04a66c3dae618f1a7ca4026198e7f (02) without cache
    ✓ should get sighash of f3bbab70b759fe6cfae1bf349ce10716dbc64f6e9b32916904be4386eb461f1f (83) without cache
    ✓ should get sighash of 41617b27321a830c712638dbb156dae23d4ef181c7a06728ccbf3153ec53d7dd (00) without cache
    ✓ should get sighash of 20fd0eee5b5716d6cbc0ddf852614b686e7a1534693570809f6719b6fcb0a626 (80) without cache
    ✓ should get sighash of ba0a2c987fcdd74b6915f6462f62c3f126a0750aa70048f7aa20f70726e6a20b (01) without cache
    ✓ should get sighash of 62cd3413d9d819fb7355336365cf8a2a997f7436cc050a7143972044343b3281 (81) without cache
    ✓ should get sighash of 37ed6fae36fcb3360c69cac8b359daa62230fc1419b2cf992a32d8f3e079dcff (81) without cache
    ✓ should get sighash of 1c9d6816c20865849078f9777544b5ddf37c8620fe7bd1618e4b72fb72dddca1 (82) without cache
    ✓ should get sighash of 249c4513a49076c6618aabf736dfd5ae2172be4311844a62cf313950b4ba94be (82) without cache
    ✓ should get sighash of 2cc1c7514fdc512fd45ca7ba4f7be8a9fe6d3318328bc1a61ae6e7675047e654 (01) without cache
    ✓ should get sighash of 6beca0e0388f824ca33bf3589087a3c8ad0857f9fe7b7609ae3704bef0eb83e2 (82) without cache
    ✓ should get sighash of 5990b139451847343c9bb89cdba0e6daee6850b60e5b7ea505b04efba15f5d92 (83) without cache
    ✓ should get sighash of dbc7935d718328d23d73f8a6dc4f53a267b8d4d9816d0091f33823bd1f0233e9 (83) without cache
    ✓ should get sighash of 793a3d3c37f6494fab79ff10c16702de002f63e34be25dd8561f424b0ea938c4 (03) without cache
    ✓ should get sighash of b5bd080bbcb8cd652f440484311d7a3cb6a973cd48f03c5c00fd6beb52dfc061 (01) without cache
    ✓ should get sighash of 0c1fd44476ff28bf603ad4f306e8b6c7f0135a441dc3194a6f227cb54598642a (01) without cache
    ✓ should get sighash of 86f26e23822afd1bdfc9fff92840fc1e60089f12f54439e3ab9e5167d0361dcf (01) without cache
    ✓ should get sighash of 3cd85f84aae6d702436f3f9b8980adcc1f8f202e957759540a27da0a32fc6c87 (82) without cache
    ✓ should get sighash of 961ff413850336d3987c550404fc1d923266ca36cc9ffee7113edb3a9fea7f30 (80) without cache
    ✓ should get sighash of e88ed2eea9143f2517b15c03db00767eb01a5ce12193b99b964a35700607e5f4 (02) without cache
    ✓ should get sighash of b8f1e1f35e3e1368bd17008c756e59cced216b3c699bcd7bebdb5b6c8eec4697 (00) without cache
    ✓ should get sighash of c49af297dffe2d80deddf10ceea84b99f8554bd2d55bbdc34e449728c31f0835 (01) without cache
    ✓ should get sighash of 18da6ceb011cd36f15ad7dd6c55ef07e6f6ed48881ce3bb31416d3c290d9a0e9 (02) without cache
    ✓ should get sighash of 3078b1d1a7713c6d101c64afe35adfae0977a5ab4c7e07a0b170b041258adbf2 (03) without cache
    ✓ should get sighash of 0e0bed1bf2ff255aef6e5c587f879ae0be6222ab33bd75ee365ec6fbb8acbe38 (81) without cache
    ✓ should get sighash of ab61497afd39e61fe06bc5677326919716f9b20083c9f3417dcea905090e0411 (03) without cache
    ✓ should get sighash of 680336db57347d8183b8898cd27a83f1ba5884155aeae5ce20b4840b75e12871 (01) without cache
    ✓ should get sighash of 1c29f110576f4a3b257f67454d99dfc0dee62ef5517ca702848ce4bd2ea1a1d7 (02) without cache
    ✓ should get sighash of c670219a93234929f662ecb9aa148a85a2d281e83f4e53d10509461cdea47979 (81) without cache
    ✓ should get sighash of 716a8180e417228f769dcb49e0491e3fda63badf3d5ea0ceeac7970d483dd7e2 (01) without cache
    ✓ should get sighash of d36ee79fc80db2e63e05cdc50357d186181b40ae20e3720878284228a13ee8b3 (03) without cache
    ✓ should get sighash of eacc47c5a53734d6ae3aedbc6a7c0a75a1565310851b29ef0342dc4745ceb607 (03) without cache
    ✓ should get sighash of 59a34b3ed3a1cce0b104de8f7d733f2d386ffc7445efae67680cd90bc915f7e0 (03) without cache
    ✓ should get sighash of 643a7b4c8d832e14d5c10762e74ec84f2c3f7ed96c03053157f1bed226614911 (00) without cache
    ✓ should get sighash of 56d29f5e300ddfed2cd8dcce5d79826e193981d0b70dc7487772c8a0b3b8d7b1 (83) without cache
    ✓ should get sighash of 1536da582a0b6de017862445e91ba14181bd6bf953f4de2f46b040d351a747c9 (01) without cache
    ✓ should get sighash of 6cf9cd409b7185b1f118171f0a34217af5b612ea54195ea186505b667c19337f (03) without cache
    ✓ should get sighash of 1efbf3d37a92bc03d9eb950b792f307e95504f7c4998f668aa250707ebb752ac (01) without cache
    ✓ should get sighash of 0898b26dd3ca08632a5131fa48eb55b44386d0c5070c24d6e329673d5e3693b8 (01) without cache
    ✓ should get sighash of 979782dc3f36d908d37d7e4046a38d306b4b08ddc60a5eba355fe3d6da1b29a9 (81) without cache
    ✓ should get sighash of 674a4bcb04247f8dc98780f1792cac86b8aee41a800fc1e6f5032f6e1dccde65 (00) without cache
    ✓ should get sighash of 3afacaca0ef6be9d39e71d7b1b118994f99e4ea5973c9107ca687d28d8eba485 (80) without cache
    ✓ should get sighash of 241a23e7b1982d5f78917ed97a8678087acbbffe7f624b81df78a5fe5e41e754 (83) without cache
    ✓ should get sighash of 1326a46f4c21e7619f30a992719a905aa1632aaf481a57e1cbd7d7c22139b41e (02) without cache
    ✓ should get sighash of 1ddaab7f973551d71f16bd70c4c4edbf7225e64e784a6da0ee7f7a9fe4f12a0b (03) without cache
    ✓ should get sighash of 925037c7dc7625f3f12dc83904755a37016560de8e1cdd153c88270a7201cf15 (02) without cache
    ✓ should get sighash of 7e058ca5dd07640e4aae7dea731cfb7d7fef1bfd0d6d7b6ce109d041f4ca2a31 (83) without cache
    ✓ should get sighash of 49870a961263354c9baf108c6979b28261f99b374e97605baa532d9fa3848797 (80) without cache
    ✓ should get sighash of eea7d2212bda2d408fff146f9ae5e85e6b640a93b9362622bb9d5e6e36798389 (83) without cache
    ✓ should get sighash of 0090803a20102a778ab967a74532faee13e03b702083b090b1497bc2267ee2fe (01) without cache
    ✓ should get sighash of 5c46f7ac3d6460af0da28468fcc5b3c87f2b9093d0f837954b7c8174b4d7b6e7 (83) without cache
    ✓ should get sighash of 9cf05990421ea853782e4a2c67118e03434629e7d52ab3f1d55c37cf7d72cdc4 (80) without cache
    ✓ should get sighash of fd44fc98639ca32c927929196fc3f3594578f4c4bd248156a25c04a65bf3a9f3 (80) without cache
    ✓ should get sighash of 9a95e692e1f78efd3e46bb98f178a1e3a0ef60bd0301d9f064c0e5703dc879c2 (81) without cache
    ✓ should get sighash of 62a36c6e8da037202fa8aeae03e533665376d5a4e0a854fc4624a75ec52e4eb1 (81) without cache
    ✓ should get sighash of 476868cecd1763c91dade98f17defa42d31049547df45acffa1cc5ae5c3d75d6 (03) without cache
    ✓ should get sighash of f64f805f0ff7f237359fa6b0e58085f3c766d1859003332223444fd29144112a (01) without cache
    ✓ should get sighash of c2cefaec2293134acbcf6d2a8bf2b3eb42e4ec04ee8f8bf30ff23e65680677c1 (00) without cache
    ✓ should get sighash of d66924d49f03a6960d3ca479f3415d638c45889ce9ab05e25b65ac260b51d634 (02) without cache
    ✓ should get sighash of 502967a6f999f7ee25610a443caf8653dda288e6d644a77537bcc115a8a29894 (01) without cache
    ✓ should get sighash of f58637277d2bc42e18358dc55f7e87e7043f5e33f4ce1fc974e715ef0d3d1c2a (82) without cache
    ✓ should get sighash of b098eb9aff1bbd375c70a0cbb9497882ab51f3abfebbf4e1f8d74c0739dc7717 (03) without cache
    ✓ should get sighash of 19dd32190ed2a37be22f0224a9b55b91e37290577c6c346d36d32774db0219a3 (82) without cache
    ✓ should get sighash of 3a1c6742d4c374f061b1ebe330b1e169a113a19792a1fdde979b53e094cc4a3c (82) without cache
    ✓ should get sighash of 9afe3f4978df6a86e9a8ebd62ef6a9d48a2203f02629349f1864ef2b8b92fd55 (83) without cache
    ✓ should get sighash of 6629a1e75c6ae8f4f9d5f734246b6a71682a5ea57246040ef0584f6b97916175 (03) without cache
    ✓ should get sighash of 818a7ceaf963f52b5c48a7f01681ac6653c26b63a9f491856f090d9d60f2ffe3 (82) without cache
    ✓ should get sighash of dfcf484111801989eb6df8dc2bafb944d7365ffeb36a575a08f3270d3ef24c9f (00) without cache
    ✓ should get sighash of d0f32a6db43378af84b063a6706d614e2d647031cf066997c48c04de3b493a94 (81) without cache
    ✓ should get sighash of 68c7bd717b399b1ee33a6562a916825a2fed3019cdf4920418bb72ffd7403c8c (81) without cache
    ✓ should get sighash of 978dc178ecd03d403b048213d904653979d11c51730381c96c4208e3ea24243a (02) without cache
    ✓ should get sighash of 0d936cceda2f56c7bb87d90a7b508f6208577014ff280910a710580357df25f3 (80) without cache
    ✓ should get sighash of 2f9b7348600336512686e7271c53015d1cb096ab1a5e0bce49acd35bceb42bc8 (03) without cache
    ✓ should get sighash of cfa4b7573559b3b199478880c8013fa713ca81ca8754a3fd68a6d7ee6147dc5a (00) without cache
    ✓ should get sighash of 880330ccde00991503ea598a6dfd81135c6cda9d317820352781417f89134d85 (03) without cache
    ✓ should get sighash of bde3dd0575164d7ece3b5783ce0783ffddb7df98f178fe6468683230314f285a (03) without cache
    ✓ should get sighash of a3d65a8cd0c1eea8558d01396b929520a2221c29d9f25f29035b8abae874447f (03) without cache
    ✓ should get sighash of 4eba3055bc2b58765593ec6e11775cea4b6493d8f785e28d01e2d5470ea71575 (00) without cache
    ✓ should get sighash of 6b80d74eb0e7ee59d14f06f30ba7d72a48d3a8ff2d68d3b99e770dec23e9284f (03) without cache
    ✓ should get sighash of 164c32a263f357e385bd744619b91c3f9e3ce6c256d6a827d6defcbdff38fa75 (00) without cache
    ✓ should get sighash of 8858bb47a042243f369f27d9ab4a9cd6216adeac1c1ac413ed0890e46f23d3f3 (81) without cache
    ✓ should get sighash of c84fcaf9d779df736a26cc3cabd04d0e61150d4d5472dd5358d6626e610be57f (81) without cache
    ✓ should get sighash of e562579d1a2b10d1c5e45c06513456002a6bec157d7eb42511d30b118103c052 (00) without cache
    ✓ should get sighash of fa4676c374ae3a417124b4c970d1ed3319dc3ac91fb36efca1aa9ed981a8aa1b (81) without cache
    ✓ should get sighash of e8e10ed162b1a43bfd23bd06b74a6c2f138b8dc1ab094ffb2fa11d5b22869bee (83) without cache
    ✓ should get sighash of a5bc0356f56b2b41a2314ec05bee7b91ef57f1074bcd2efc4da442222269d1a3 (80) without cache
    ✓ should get sighash of 556c3f90aa81f9b4df5b92a23399fe6432cf8fecf7bba66fd8fdb0246440036c (01) without cache
    ✓ should get sighash of 0ef7b6e87c782fa33fe109aab157a2d9cddc4472864f629510a1c92fa1fe7fc1 (80) without cache
    ✓ should get sighash of a7aa34bf8a5644f03c6dd8801f9b15ba2e07e07256dbf1e02dad59f0d3e17ea9 (80) without cache
    ✓ should get sighash of bc46f3f83058ddf5bebd9e1f2c117a673847c4dc5e31cfb24bac91adf30877cf (80) without cache
    ✓ should get sighash of f804fc4d81f039009ed1f2cccb5c91da797543f235ac71b214c20e763a6d86d7 (80) without cache
    ✓ should get sighash of 270445ab77258ced2e5e22a6d0d8c36ac7c30fff9beefa4b3e981867b03fa0ad (03) without cache
    ✓ should get sighash of 4a3415eb1677ae4e0c939644a4cfd5dc6299780b55cd0dc735967057b6b1526a (01) without cache
    ✓ should get sighash of d60bbadd2cc0674100baa08d0e0493ee4248f0304b3eb778da942041f503a896 (03) without cache
    ✓ should get sighash of b276584d3514e5b4e058167c41dc02915b9d97f6795936a51f40e894ed8508bc (00) without cache
    ✓ should get sighash of f1f2a489682e42a6fc20025dfc89584d17f150b2d7ae3ddedd2bf43d5e24f37f (03) without cache
    ✓ should get sighash of bdfaff8a4e775379c5dc26e024968efa805f923de53fa8272dd53ec582afa0c5 (02) without cache
    ✓ should get sighash of c629d93b02037f40aa110e46d903edb34107f64806aa0c418d435926feef68b8 (81) without cache
    ✓ should get sighash of c1c7df8206e661d593f6455db1d61a364a249407f88e99ecad05346e495b38d7 (81) without cache
    ✓ should get sighash of 39c2aaa2496212b3ab120ab7d7f37c5e852bfe38d20f5226413a2268663eeae8 (01) without cache
    ✓ should get sighash of 877e347ec7487497769e2581142276d1a8d813b652e4483cf9cc993d16354417 (02) without cache
    ✓ should get sighash of 47585dc25469d04ff3a60939d0a03779e3e81a411bf0ca18b91bb925ebd30718 (83) without cache
    ✓ should get sighash of 09ed6563a454814ab7e3b4c28d56d8751162b77df1825b37ba66c6147750b2a3 (80) without cache
    ✓ should get sighash of c19caada8e71535e29a86fa29cfd9b74a0c7412003fc722a121005e461e01636 (00) without cache
    ✓ should get sighash of 6a815ba155270af102322c882f26d22da11c5330a751f520807936b320b9af5d (01) without cache
    ✓ should get sighash of 552ff97d7924f51cda6d1b94be53483153ef725cc0a3a107adbef220c753f9a6 (80) without cache
    ✓ should get sighash of e9a7f21fc2d38be7be47095fbc8f1bf8923660aa4d71df6d797ae0ba5ca4d5b0 (00) without cache
    ✓ should get sighash of cdf51f6e3a9dc2be5a59ea4c00f5aac1e1426a5202c325e6cf2567d07d8d8de4 (01) without cache
    ✓ should get sighash of 62094f98234a05bf1b9c7078c5275ed085656856fb5bdfd1b48090e86b53dd85 (00) without cache
    ✓ should get sighash of d37532e7b2b8e7db5c7c534197600397ebcc15a750e3af07a3e2d2e4f84b024f (81) without cache
    ✓ should get sighash of 5cef9d8e18a2d5a70448f17b465d411a19dab78f0ddf1672ffd518b188f52433 (81) without cache
    ✓ should get sighash of 26dc2cba4bd5334e5c0b3a520b44cc1640c6b923d10e576062f1197171724097 (80) without cache
    ✓ should get sighash of 3e5aa0200248d8d86ede3b315ca1b857018b89184a4bd023bd88ab12e499f6e1 (00) without cache
    ✓ should get sighash of b5280b9610c0625a65b36a8c2402a95019a7bbb9dd3de77f7c3cb1d82c3263ba (81) without cache
    ✓ should get sighash of 04c9ef72f33668ca449c0415becf62cc0b8e0c75f9c8813852d42a58acf107c8 (02) without cache
    ✓ should get sighash of 8f07ece7d65e509f1e0780584ef8d271c1c61a13b10335d5faafc7afc8b5b8ec (02) without cache
    ✓ should get sighash of e2358dfb51831ee81d7b0bc602a65287d6cd2dbfacf55106e2bf597e22a4b573 (02) without cache
    ✓ should get sighash of 502a2435fd02898d2ff3ab08a3c19078414b32ec9b73d64a944834efc9dae10c (03) without cache
    ✓ should get sighash of 7ba99b289c04718a7283f150d831175ed6303081e191a0608ea81f78926c5bdf (80) without cache
    ✓ should get sighash of 92d53b4390262e6b288e8a32e0cfc36cd5adfdfabfe96c7bfd4a19d65e233761 (03) without cache
    ✓ should get sighash of 5d366a7f4346ae18aeb7c9fc4dab5af71173184aa20ed22fcb4ea8511ad25449 (01) without cache
    ✓ should get sighash of bbee941bbad950424bf40e3623457db47f60ed29deaa43c99dec702317cb3326 (03) without cache
    ✓ should get sighash of 5c5a9c3a5de7dc7a82bc171c9d3505913b8bcc450bc8b2d11772c1a1d781210b (80) without cache
    ✓ should get sighash of a3bdf8771c8990971bff9b4e7d59b7829b067ed0b8d3ac1ec203429811384668 (81) without cache
    ✓ should get sighash of 8c29ea8ef60c5a927fccdba8ea385db6b6b84d98e891db45f5d4ee3148d3f5a7 (80) without cache
    ✓ should get sighash of d5f1c1cb35956a5711d67bfb4cedbc67e77c089b912d688ad440ff735adb390d (03) without cache
    ✓ should get sighash of 37b794b05d0687c9b93d5917ab068f6b2f0e38406ff04e7154d104fc1fb14cdc (00) without cache
    ✓ should get sighash of ea117348e94de86381bb8ad1c7f93b8c623f0272104341701bb54e6cb433596c (82) without cache
    ✓ should get sighash of a7aff48f3b8aeb7a4bfe2e6017c80a84168487a69b69e46681e0d0d8e63a84b6 (80) without cache
    ✓ should get sighash of 0a281172d306b6a32e166e6fb2a2cc52c505c5d60ea448e9ba7029aa0a2211e1 (03) without cache
    ✓ should get sighash of 82ebc07b16cff0077e9c1a279373185b3494e39d08fd3194aae6a4a019377509 (02) without cache
    ✓ should get sighash of 418acc156c2bc76a5d7baa58db29f1b4cf6c266c9222ed167ef5b4d47f0e0f41 (82) without cache
    ✓ should get sighash of 228ca52a0a376fe0527a61cfa8da6d7baf87486bba92d49dfd3899cac8a1034f (83) without cache
    ✓ should get sighash of d2fa7e13c34cecda5105156bd2424c9b84ee0a07162642b0706f83243ff811a8 (00) without cache
    ✓ should get sighash of 499da7d74032388f820645191ac3c8d20f9dba8e8ded7fa3a5401ea2942392a1 (83) without cache
    ✓ should get sighash of 1125645b49202dca2df2d76dae51877387903a096a9d3f66b5ac80e042c95788 (03) without cache
    ✓ should get sighash of 5350a31ac954a0b49931239d0ecafbf34d035a537fd0c545816b8fdc355e9961 (01) without cache
    ✓ should get sighash of 3c05473a816621a3613f0e903faa1a1e44891dd40862b029e41fc520776350fa (81) without cache
    ✓ should get sighash of 936eff8cdfd771be24124da87c7b24feb48da7cbc2c25fb5ba13d1a23255d902 (81) without cache
    ✓ should get sighash of 69c0b30f4c630a6c878fde6ea6b74dae94f4eb3bcfbde2dc3649e1a9ada00757 (02) without cache
    ✓ should get sighash of f8757fbb4448ca34e0cd41b997685b37238d331e70316659a9cc9087d116169d (83) without cache
    ✓ should get sighash of e7d873aa079a19ec712b269a37d2670f60d8cb334c4f97e2e3fd10eeb8ee5f5e (01) without cache
    ✓ should get sighash of 311094b4d73e31aefc77e97859ef07ca2f07a7b7e4d7def80c69d3f5d58527e5 (00) without cache
    ✓ should get sighash of 06277201504e6bf8b8c94136fad81b6e3dadacb9d4a2c21a8e10017bfa929e0e (01) without cache
    ✓ should get sighash of 7912573937824058103cb921a59a7f910a854bf2682f4116a393a2045045a8c3 (03) without cache
    ✓ should get sighash of 24cb420a53b4f8bb477f7cbb293caabfd2fc47cc400ce37dbbab07f92d3a9575 (03) without cache
    ✓ should get sighash of 69264faadcd1a581f7000570a239a0a26b82f2ad40374c5b9c1f58730514de96 (81) without cache
    ✓ should get sighash of bd0e88829afa6bdc1e192bb8b2d9d14db69298a4d81d464cbd34df0302c634c6 (80) without cache
    ✓ should get sighash of f99c29a79f1d73d2a69c59abbb5798e987639e36d4c44125d8dc78a94ddcfb13 (00) without cache
    ✓ should get sighash of 9615541884dfb1feeb08073a6a6aa73ef694bc5076e52187fdf4138a369f94d9 (81) without cache
    ✓ should get sighash of 6e3f97955490d93d6a107c18d7fe402f1cada79993bb0ff0d096357261b3a724 (81) without cache
    ✓ should get sighash of b3b336de141d4f071313a2207b2a0c7cf54a070dd8d234a511b7f1d13e23b0c4 (80) without cache
    ✓ should get sighash of 7928ae8e86c0b0cad1b2c120ea313087437974382ee6d46443ca5ac3f5878b88 (80) without cache
    ✓ should get sighash of 4a92fec1eb03f5bd754ee9bfd70707dc4420cc13737374f4675f48529be518e4 (02) without cache
    ✓ should get sighash of 8b7dd0ff12ca0d8f4dbf9abf0abba00e897c2f6fd3b92c79f5f6a534e0b33b32 (83) without cache
    ✓ should get sighash of 8bb7a0129eaf4b8fc23e911c531b9b7637a21ab11a246352c6c053ff6e93fcb6 (80) without cache
    ✓ should get sighash of 55acd8293ed0be6792150a3d7ced6c5ccd153ca7daf09cee035c1b0dac92bb96 (02) without cache
    ✓ should get sighash of b362da5634f20be7267de78b545d81773d711b82fe9310f23cd0414a8280801d (83) without cache
    ✓ should get sighash of 2b822737c2affeefae13451d7c9db22ff98e06490005aba57013f6b9bbc97250 (80) without cache
    ✓ should get sighash of 20732d5073805419f275c53784e78db45e53332ee618a9fcf60a3417a6e2ca69 (02) without cache
    ✓ should get sighash of 685d67d84755906d67a007a7d4fa311519467b9bdc6a351913246a41e082a29f (02) without cache
    ✓ should get sighash of 123916c6485cf23bfea95654a8815fbf04ce4d21a3b7f862805c241472906658 (01) without cache
    ✓ should get sighash of f43378a0b7822ad672773944884e866d7a46579ee34f9afc17b20afc1f6cf197 (03) without cache
    ✓ should get sighash of ff18c5bffd086e00917c2234f880034d24e7ea2d1e1933a28973d134ca9e35d2 (02) without cache
    ✓ should get sighash of cb6e4322955af12eb29613c70e1a00ddbb559c887ba844df0bcdebed736dffbd (01) without cache
    ✓ should get sighash of e8d89a302ae626898d4775d103867a8d9e81f4fd387af07212adab99946311ef (00) without cache
    ✓ should get sighash of 0278adbcc476d135493ae9bdcd7b3c2002df17f2d81c17d631c50c73e546c264 (80) without cache
    ✓ should get sighash of b7ca991ab2e20d0158168df2d3dd842a57ab4a3b67cca8f45b07c4b7d1d11126 (82) without cache
    ✓ should get sighash of 437e89bb6f70fd2ed2feef33350b6f6483b891305e574da03e580b3efd81ae13 (00) without cache
    ✓ should get sighash of 535ba819d74770d4d613ee19369001576f98837e18e1777b8246238ff2381dd0 (83) without cache
    ✓ should get sighash of d4737f3b58f3e5081b35f36f91acde89dda00a6a09d447e516b523e7a99264d5 (02) without cache
    ✓ should get sighash of 3282a2ec6b8c87c9303e6060c17b421687db1bd35fbfa0345b48f2490e15b6cc (01) without cache
    ✓ should get sighash of 55611a5fb1483bce4c14c33ed15198130e788b72cd8929b2ceef4dd68b1806bf (01) without cache
    ✓ should get sighash of b3ff10f21e71ebc8b25fe058c4074c42f08617e0dcc03f9e75d20539d3242644 (82) without cache
    ✓ should get sighash of 9b360c3310d55c845ef537125662b9fe56840c72136891274e9fedfef56f9bb5 (03) without cache
    ✓ should get sighash of 2f482b97178f17286f693796a756f4d7bd2dfcdbecd4142528eec1c7a3e5101a (02) without cache
    ✓ should get sighash of 6390ab0963cf611e0cea35a71dc958b494b084e6fd71d22217fdc5524787ade6 (01) without cache
    ✓ should get sighash of f77c3322c97b1681c17b1eba461fa27b07e04c1534e8aaf735a49cab72c7c2e2 (01) without cache
    ✓ should get sighash of 5299b0fb7fc16f40a5d6b337e71fcd1eb04d2600aefd22c06fe9c71fe0b0ba54 (00) without cache
    ✓ should get sighash of 67483ee62516be17a2431a163e96fd88a08ff2ce8634a52e42c1bc04e30f3f8a (83) without cache
    ✓ should get sighash of 48315a95e49277ab6a2d561ee4626820b7bab919eea372b6bf4e9931ab221d04 (00) without cache
    ✓ should get sighash of 74d6a2fa7866fd8b74b2e34693e2d6fd690410384b7afdcd6461b1ae71d265ce (82) without cache
    ✓ should get sighash of 1bc8ad76f9b7c366c5d052dc479d6a8a2015566d3a42e93ab12f727692c89d65 (03) without cache
    ✓ should get sighash of a575fa4f59a8e90cd07de012c78fe8f981183bb170b9c50fcc292b8c164cbc3b (01) without cache
    ✓ should get sighash of a72a760b361af41832d2c667c7488dc9702091918d11e344afc234a4aea3ec44 (81) without cache
    ✓ should get sighash of 2c45d021db545df7167ac03c9ee56473f2398d9b2b739cf3ff3e074501d324f8 (01) without cache
    ✓ should get sighash of 32f3c012eca9a823bebb9b282240aec40ca65df9f38da43b1dcfa0cac0c0df7e (80) without cache
    ✓ should get sighash of c76146f68f43037289aaeb2bacf47408cddc0fb326b350eb4f5ef6f0f8564793 (81) without cache
    ✓ should get sighash of 1d849b92eedb9bf26bd4ced52ce9cb0595164295b0526842ab1096001fcd31b1 (83) without cache
    ✓ should get sighash of bbee17c8582514744bab5df50012c94b0db4aff5984d2e13a8d09421674404e2 (02) without cache
    ✓ should get sighash of 84af1623366c4db68d81f452b86346832344734492b9c23fbb89015e516c60b2 (01) without cache
    ✓ should get sighash of ccfdba36d9445f4451fb7cbf0752cc89c23d4fc6fff0f3930d20e116f9db0b95 (02) without cache
    ✓ should get sighash of 5532717402a2da01a1da912d824964024185ca7e8d4ad1748659dc393a14182b (80) without cache
    ✓ should get sighash of 9a0435996cc58bdba09643927fe48c1fc908d491a050abbef8daec87f323c58f (81) without cache
    ✓ should get sighash of 1d1757a782cb5860302128bcbe9398243124a2f82d671a113f74f8e582c7a182 (80) without cache
    ✓ should get sighash of e69dba3efb5c02af2ab1087d0a990678784671f4744d01ca097d71aec14dd8e9 (00) without cache
    ✓ should get sighash of b0dc030661783dd9939e4bf1a6dfcba809da2017e1b315a6312e5942d714cf05 (03) without cache
    ✓ should get sighash of 1dec0d5eb921bf5b2df39c8576e19c38d0c17254a4a0b78ac4b5422bcc426258 (02) without cache
    ✓ should get sighash of 0a2ff41f6d155d8d0e37cd9438f3b270df9f9214cda8e95c76d5a239ca189df2 (83) without cache
    ✓ should get sighash of e05e3d383631a7ed1b78210c13c2eb26564e5577db7ddfcea2583c7c014091d4 (80) without cache
    ✓ should get sighash of e657e2c8ec4ebc769ddd3198a83267b47d4f2a419fc737e813812acefad92ff7 (80) without cache
    ✓ should get sighash of da86c260d42a692358f46893d6f91563985d86eeb9ea9e21cd38c2d8ffcfcc4d (03) without cache
    ✓ should get sighash of 397c68803b7ce953666830b0221a5e2bcf897aa2ded8e36a6b76c497dcb1a2e1 (83) without cache
    ✓ should get sighash of fe1dc9e8554deecf8f50c417c670b839cc9d650722ebaaf36572418756075d58 (82) without cache
    ✓ should get sighash of 950f4b4f72ccdf8a6a0f381265d6c8842fdb7e8b3df3e9742905f643b2432b69 (02) without cache
    ✓ should get sighash of d5981bd4467817c1330da72ddb8760d6c2556cd809264b2d85e6d274609fc3a3 (00) without cache
    ✓ should get sighash of 076b9f844f6ae429de228a2c337c704df1652c292b6c6494882190638dad9efd (02) without cache
    ✓ should fail on >51 bit coin values
    ✓ should handle 51 bit coin values
    ✓ should fail on >51 bit output values
    ✓ should handle 51 bit output values
    ✓ should fail on >51 bit fees
    ✓ should fail on >51 bit values from multiple
    ✓ should fail on >51 bit output values from multiple
    ✓ should fail on >51 bit fees from multiple
    ✓ should fail to parse >53 bit values
    ✓ should fail on 53 bit coin values
    ✓ should fail on 53 bit output values
    ✓ should fail on 53 bit fees
    ✓ should fail on >53 bit values from multiple
    ✓ should fail on >53 bit output values from multiple
    ✓ should fail on >53 bit fees from multiple
    ✓ should fail on >53 bit values from multiple
    ✓ should fail on >53 bit output values from multiple
    ✓ should fail on >53 bit fees from multiple
    ✓ should count sigops for multisig
    ✓ should count sigops for p2sh multisig
    ✓ should count sigops for p2wpkh
    ✓ should count sigops for nested p2wpkh
    ✓ should count sigops for p2wsh
    ✓ should count sigops for nested p2wsh
    ✓ should return addresses for standard inputs
    ✓ should return addresses for standard outputs
    ✓ should return addresses for standard inputs and outputs
    ✓ should return merged addresses for same input/output address
    ✓ should return addresses with witness data
    ✓ should return address hashes for standard inputs and outputs
    ✓ should return address hashes for standard inputs
    ✓ should return address hashes for standard outputs
    ✓ should return all prevouts
    ✓ should serialize without witness data
    ✓ should check if tx is free
    ✓ should return correct minFee and roundedFee
    ✓ should return JSON for tx
    ✓ should recover coins from JSON

  TXMeta
    ✓ should return JSON for txmeta

  Utils
    ✓ should encode/decode base58
    ✓ should convert satoshi to btc
    ✓ should convert btc to satoshi
    ✓ should write/read new varints
    ✓ should validate integers 0 and 1 as booleans

  Wallet
    ✓ should open walletdb
    ✓ should generate new key and address (41ms)
    ✓ should validate existing address
    ✓ should fail to validate invalid address
    ✓ should create and get wallet (40ms)
    ✓ should sign/verify p2pkh tx (249ms)
    ✓ should sign/verify p2wpkh tx (319ms)
    ✓ should sign/verify p2wpkh tx w/ nested bullshit (286ms)
    ✓ should multisign/verify TX (328ms)
    ✓ should handle missed txs (178ms)
    ✓ should cleanup spenders after double-spend
    ✓ should handle double-spend (not our input) (45ms)
    ✓ should handle more missed txs (125ms)
    ✓ should fill tx with inputs (110ms)
    ✓ should fill tx with inputs with accurate fee (112ms)
    ✓ should sign multiple inputs using different keys (204ms)
    ✓ should verify 2-of-3 p2sh tx (219ms)
    ✓ should verify 2-of-3 p2wsh tx (257ms)
    ✓ should verify 2-of-3 p2wsh tx w/ nested bullshit (264ms)
    ✓ should create account (76ms)
    ✓ should fail to create duplicate account (78ms)
    ✓ should fill tx with account 1 (137ms)
    ✓ should fail to fill tx with account 1 (85ms)
    ✓ should create two accounts (multiple encryption) (207ms)
    ✓ should fill tx with inputs when encrypted (238ms)
    ✓ should fill tx with inputs with subtract fee (1) (107ms)
    ✓ should fill tx with inputs with subtract fee (2) (108ms)
    ✓ should fill tx with smart coin selection (128ms)
    ✓ should get range of txs
    ✓ should get range of txs from account
    ✓ should not get range of txs from non-existent account
    ✓ should get account balance
    ✓ should import privkey (145ms)
    ✓ should import pubkey (41ms)
    ✓ should import address (41ms)
    ✓ should get details
    ✓ should rename wallet
    ✓ should change passphrase with encrypted imports (124ms)
    ✓ should recover from a missed tx (103ms)
    ✓ should recover from a missed tx and double spend (91ms)
    ✓ should remove a wallet (42ms)
    ✓ should create receive addresses (236ms)
    ✓ should create receive addresses and get their keys (378ms)
    ✓ should create change addresses (243ms)
    ✓ should create change addresses and get their keys (422ms)
    ✓ should create nested addresses (257ms)
    ✓ should create nested addresses and get their keys (401ms)
    ✓ should cleanup


  4244 passing (35s)
  10 pending
  2 failing

  1) Headers
       should match block1 headers from block:

      AssertionError [ERR_ASSERTION]: false == true
      + expected - actual

      -false
      +true
      
      at new AssertionError (internal/errors.js:315:11)
      at assert (test/util/assert.js:8:11)
      at Context.it (test/headers-test.js:37:5)

  2) Headers
       should match block1 headers from raw:

      AssertionError [ERR_ASSERTION]: false == true
      + expected - actual

      -false
      +true
      
      at new AssertionError (internal/errors.js:315:11)
      at assert (test/util/assert.js:8:11)
      at Context.it (test/headers-test.js:56:5)



